Search.setIndex({"titles": ["Changelog", "Contributor Covenant Code of Conduct", "Contributing", "C++", "Barrier", "Broad Phase", "Candidates", "Continuous Collision Detection", "Collision Constraints", "Collision Mesh", "Distance", "Friction", "Utils", "IPC Toolkit", "License", "Python", "Barrier", "Broad Phase", "Candidates", "Continuous Collision Detection", "Collision Constraints", "Collision Mesh", "Distance", "Friction", "Utils", "Style Guide"], "terms": {"all": [0, 1, 3, 4, 5, 8, 9, 11, 13, 14, 16, 17, 20, 21, 23], "notabl": 0, "thi": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 17, 20, 21, 22, 25], "project": [0, 2, 3, 11, 13, 15, 23, 25], "document": [0, 13, 14, 15], "file": [0, 2, 3, 13, 14, 15], "gener": 0, "collisionstencil": [0, 6, 8, 11, 18, 20, 23], "parent": 0, "class": [0, 1, 5, 6, 8, 9, 10, 11, 17, 18, 20, 21, 22, 23, 24, 25], "candid": [0, 5, 8, 17, 20], "collisionconstraint": [0, 6, 8, 11, 12, 20, 23], "frictionconstraint": [0, 6, 11, 23], "thei": [0, 1, 2], "share": 0, "same": [0, 3, 13], "distanc": [0, 4, 6, 7, 8, 11, 12, 13, 16, 18, 19, 20, 23], "function": [0, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25], "larg": [0, 13, 15], "refactor": 0, "make": [0, 1, 2, 8, 13, 15, 20], "code": [0, 2], "more": [0, 2, 13], "object": [0, 5, 9, 17], "orient": [0, 1], "construct_collision_candid": 0, "build": [0, 5, 6, 8, 9, 11, 17, 18, 20, 21, 23], "is_step_collision_fre": [0, 6, 7, 18, 19], "compute_collision_free_steps": [0, 6, 7, 18, 19], "compute_barrier_potenti": 0, "constraint": [0, 6], "compute_potenti": [0, 8, 11, 20, 23], "compute_shape_deriv": [0, 8, 20], "compute_minimum_dist": [0, 8, 12, 20], "construct_friction_constraint_set": 0, "friction_constraint": 0, "compute_friction_": 0, "compute_": 0, "renam": 0, "_index": 0, "_id": 0, "use_convergent_formul": [0, 8, 20], "are_shape_derivatives_en": [0, 8, 20], "must": [0, 3, 8, 13, 15], "now": 0, "access": 0, "through": [0, 1, 2, 3, 13], "getter": 0, "setter": 0, "friction": [0, 13], "potenti": [0, 4, 8, 11, 13, 15, 16, 20, 23], "ar": [0, 1, 2, 3, 6, 8, 9, 10, 11, 13, 20, 22, 23], "veloc": [0, 25], "previous": 0, "v0": 0, "v1": 0, "were": [0, 1, 8, 20], "pass": 0, "u": [0, 1, 11, 23], "wa": [0, 1, 15], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25], "limit": [0, 14], "integr": [0, 13, 15], "scheme": 0, "implicit": 0, "euler": 0, "upstream": 0, "mean": 0, "you": [0, 2, 3, 13, 15], "need": [0, 5, 9, 17], "multipli": 0, "left": [0, 4, 11, 16, 23], "frac": [0, 4, 11, 16, 23], "dv": 0, "dx": 0, "right": [0, 1, 4, 11, 14, 16, 23], "1": [0, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23], "get": [0, 2, 6, 8, 9, 11, 18, 20, 21, 23, 24, 25], "correct": [0, 3, 13], "forc": [0, 8, 20], "todo": 0, "updat": [0, 4, 16], "compute_forc": [0, 11, 23], "compute_force_jacobian": [0, 11, 23], "take": [0, 1, 6, 7, 9, 18, 21], "well": [0, 1], "minimum": [0, 4, 6, 7, 8, 11, 12, 16, 17, 18, 19, 20, 23], "option": [0, 22], "paramet": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23], "ccd": [0, 3, 6, 7, 13, 18, 19], "const": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12], "doubl": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12], "min_dist": [0, 4, 6, 7, 16, 18, 19], "0": [0, 1, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 19, 20, 22, 23], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25], "place": 0, "first": [0, 2, 6, 10, 11, 13, 15, 18, 22, 23], "argument": 0, "which": [0, 1, 8, 13, 15, 17, 20], "can": [0, 3, 5, 9, 13, 15, 17, 21], "break": 0, "call": [0, 3, 9, 13, 21], "collisionmesh": [0, 6, 7, 8, 9, 11, 12, 18, 19, 20, 21, 23], "wrap": 0, "up": 0, "face": [0, 5, 6, 9, 11, 17, 18, 21, 23, 25], "edg": [0, 5, 6, 9, 13, 17, 18, 21, 25], "singl": [0, 1], "data": [0, 3, 5, 13, 17], "structur": 0, "support": [0, 6], "ignor": 0, "intern": 0, "vertic": [0, 5, 6, 7, 8, 9, 11, 12, 17, 18, 19, 20, 21, 23, 25], "instead": 0, "user": 0, "should": [0, 6, 8, 9, 18, 20], "map": [0, 3, 9, 13, 21], "from": [0, 1, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 18, 20, 21, 23], "full": [0, 6, 7, 9, 13, 18, 19, 21], "mesh": [0, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 23, 25], "surfac": [0, 6, 7, 9, 18, 19, 21], "also": [0, 1], "includ": [0, 1, 2, 3, 6, 9, 13, 14], "to_full_dof": [0, 9, 21], "reduc": 0, "gradient": [0, 4, 6, 8, 9, 10, 11, 16, 20, 21, 22, 23], "hessian": [0, 6, 8, 9, 10, 11, 20, 21, 22, 23], "": [0, 1, 3, 6, 11, 13, 17, 23], "dof": [0, 6, 11, 23], "sourc": [0, 2], "folder": 0, "organ": [0, 13, 15], "point": [0, 5, 9, 11, 17, 21, 23, 25], "plane": 0, "collis": [0, 3, 5, 6, 11, 12, 13, 17, 18, 23, 25], "v": 0, "static": [0, 5, 7, 9, 11, 17, 21], "analyt": 0, "contact": [0, 6, 8, 11, 13, 15, 18, 23], "cmake": [0, 3, 13], "target": 0, "name": [0, 2, 3, 13, 17, 23], "ipc": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 20, 23], "toolkit": [0, 2, 3, 15], "system": [0, 2, 3, 13, 15], "modern": 0, "fetchcont": [0, 3, 13], "download": [0, 3, 13], "extern": [0, 1, 3, 13], "strategi": 0, "when": [0, 1, 3, 13], "tight": [0, 3, 6, 7, 13, 18], "inclus": [0, 1, 3, 6, 7, 13, 18], "onli": [0, 2], "perform": [0, 6, 18], "no_zero_toi": 0, "true": [0, 3, 6, 7, 8, 9, 11, 13, 18, 19, 20, 21, 23], "detect_edge_face_collision_candidates_brute_forc": 0, "3d": [0, 10, 13, 22], "intersect": [0, 3, 5, 6, 7, 12, 13, 15, 17, 18, 19], "broad": [0, 6, 7, 8, 12, 13, 18, 19, 20], "phase": [0, 6, 7, 8, 12, 13, 18, 19, 20], "abil": 0, "save": 0, "an": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 21, 22, 23, 25], "obj": 0, "test": [0, 15], "has_intersect": [0, 12], "after": 0, "possibl": [0, 2], "numer": [0, 25], "round": 0, "problem": 0, "hashgrid": [0, 5, 17], "aabb": [0, 5, 17], "are_overlap": 0, "ignore_codimensional_vertic": 0, "brute": 0, "method": [0, 5, 6, 7, 8, 12, 17, 18, 19, 20], "inflat": [0, 5, 6, 17, 18], "spatialhash": [0, 5, 17], "replac": [0, 3, 13], "vertex": [0, 5, 6, 7, 9, 10, 17, 18, 19, 21, 22, 25], "group": 0, "id": [0, 6, 8, 9, 17, 18, 21], "power": 0, "can_collid": [0, 9, 21], "By": [0, 9, 21], "default": [0, 3, 6, 7, 9, 13, 21], "everyth": 0, "collid": [0, 5, 9, 17, 21], "befor": [0, 8, 13, 15, 25], "reorder": 0, "construct_constraint_set": 0, "is_collision_fre": 0, "update_barrier_stiff": [0, 4, 16], "requir": [0, 3, 13], "constraint_set": 0, "rather": 0, "than": [0, 3, 4, 13, 16], "drop": 0, "dhat": [0, 4, 8, 11, 16, 20, 23], "2d": [0, 10, 13, 22], "verison": 0, "initial_barrier_stiff": [0, 4, 16], "comput": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23], "set": [0, 1, 3, 6, 8, 13, 15, 18, 20, 24, 25], "barrier": [0, 8, 11, 13, 20, 23], "becaus": [0, 6], "lot": 0, "directori": [0, 3, 13], "src": 0, "spatial_hash": [0, 5, 17], "broad_phas": 0, "select": [0, 6, 9], "hash_grid": [0, 5, 8, 17, 18, 19, 20], "brute_forc": [0, 5, 17], "toler": [0, 6, 7, 18, 19], "maximum": [0, 4, 6, 7, 16, 17, 18, 19, 24], "iter": [0, 6, 7, 18, 19], "fals": [0, 11, 17, 21, 23], "tight_inclusion_with_no_zero_toi": 0, "ON": 0, "clear": [0, 5, 6, 8, 11, 17, 18, 20, 23], "given": [0, 2, 5, 8, 11, 17, 20, 23], "friction_constraint_set": 0, "tightinclus": 0, "degener": 0, "char": 0, "except": 0, "std": [0, 3, 5, 6, 8, 9, 11, 13, 17, 20, 21], "gave": 0, "dhat_epsilon_scal": [0, 4, 16], "valu": [0, 4, 5, 6, 7, 8, 10, 11, 16, 18, 19, 22, 23, 25], "1e": [0, 4, 7, 16, 18, 19], "9": [0, 4, 11, 22], "warn": [0, 24], "order": 0, "flip": 0, "bbox_diagon": [0, 4, 16], "bug": [0, 13, 15], "output": 0, "min": [0, 5, 17], "move": [0, 5, 17], "eigen_ext": 0, "namespac": 0, "max": [0, 5, 11, 17, 23], "size": [0, 1, 6, 7, 8, 9, 11, 18, 19, 20, 21, 23], "matric": 0, "eigen": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "vectorx": 0, "vectormax": 0, "matrixxx": 0, "arraymax": 0, "util": [0, 3, 13, 25], "check": [0, 3, 13, 17], "triangl": [0, 13], "gmp": [0, 3, 13], "exact": [0, 3, 13], "voxel_size_heurist": 0, "cpp": 0, "suggest": 0, "good": 0, "voxel": [0, 5], "averag": [0, 4, 16], "length": [0, 4, 10, 16, 22], "consid": [0, 1, 13, 15], "displac": [0, 9, 11, 21, 23, 25], "result": 0, "better": 0, "memori": 0, "usag": 0, "tbb": [0, 3, 13], "parallel": [0, 3, 10, 13, 22], "loop": 0, "main": [0, 3, 13], "compute_friction_potenti": 0, "etc": 0, "addverticesfromedg": 0, "add": [0, 3, 13], "connect": [0, 14], "avoid": [0, 1, 6, 7, 18], "duplic": 0, "arraymax3": 0, "over": [0, 6, 18], "vectorx3": 0, "simplifi": 0, "some": [0, 5, 15], "refer": [0, 8, 11], "origin": [0, 3, 10, 13, 15], "base": [0, 10, 18, 20, 22, 23], "modif": 0, "benchmark": 0, "indic": [0, 6, 9, 18, 21], "faster": [0, 3, 13], "multithread": 0, "improv": 0, "fulli": 0, "hpp": [0, 3, 13], "switch": 0, "conserv": [0, 3, 5, 6, 7, 13, 17, 18], "wang": 0, "ferguson": [0, 13, 15], "et": 0, "al": 0, "etienn": [0, 3, 13], "vouga": [0, 3, 13], "see": [0, 1, 13, 15], "readm": 0, "md": 0, "seper": 0, "thick": 0, "codimension": 0, "increment": [0, 13, 15], "li": [0, 13, 15], "model": 0, "formul": [0, 8, 20], "further": 0, "f2e": 0, "similar": 0, "f": 0, "recommend": [0, 13, 15], "If": [0, 2, 6, 8, 10, 11, 13, 15, 17, 18, 20, 22, 23], "provid": [0, 1, 3, 13, 14, 15, 25], "simpl": [0, 15], "linear": [0, 3, 6, 7, 13, 18, 19], "search": 0, "done": 0, "per": 0, "vectorxd": [0, 4, 8, 9, 11], "matrixxd": [0, 5, 6, 7, 8, 9, 11, 12], "version": [0, 1, 2, 3, 13], "local": [0, 2], "form": [0, 13, 15], "hash": [0, 3, 5, 13, 17, 21], "grid": [0, 5, 17], "we": [0, 1, 3, 13, 15, 25], "without": [0, 1, 14], "spatial": 0, "multipl": 0, "pair": [0, 10, 11, 22, 23, 25], "psd": [0, 11, 23], "complet": 0, "broken": 0, "matrix": [0, 6, 7, 9, 18, 19, 21, 25], "never": 0, "mollif": [0, 10, 22], "ee": [0, 6, 8], "have": [0, 1, 8, 9, 20, 21], "type": [0, 5, 6, 11, 16, 18], "pp": 0, "pe": 0, "store": 0, "threshold": [0, 10, 22], "eps_x": [0, 8, 10, 22], "like": [0, 1, 13, 15], "normal": [0, 6, 10, 18], "small": 0, "anywai": 0, "assert": 0, "one": [0, 10, 17, 22], "boolean": [0, 12], "compute_friction_potential_hessian": 0, "control": 0, "exclud": 0, "e": [0, 1, 3, 5, 9, 13, 17, 21, 25], "g": [0, 3, 13, 25], "self": [0, 12, 17, 18, 20, 21, 23], "second": [0, 4, 6, 10, 11, 16, 18, 22, 23], "alreadi": 0, "world": 0, "bound": [0, 4, 5, 6, 16, 18], "box": [0, 4, 5, 6, 16, 18], "diagon": [0, 4, 16], "input": 0, "average_mass": [0, 4, 16], "min_barrier_stiffness_scal": [0, 4, 16], "typo": 0, "intial_barrier_stiff": 0, "inform": [0, 1, 3, 13], "tangent": 0, "basi": 0, "magnitud": 0, "closest": [0, 10, 11, 22, 23], "coeffici": [0, 10, 11, 22, 23], "unit": 0, "compar": [0, 6], "compon": 0, "compute_friction_bas": 0, "It": 0, "mu": [0, 11, 23], "put": 0, "insid": 0, "dure": [0, 1], "handl": 0, "alwai": [0, 2, 6, 8], "line": 0, "edge_edge_tangent_basi": [0, 11, 23], "spdlog": [0, 3, 13], "log": [0, 3, 13, 24], "header": [0, 3, 13], "prefix": [0, 3, 13, 25], "edgeedgeconstraint": [0, 6, 8, 11, 20], "mollifi": 0, "dhat_squar": 0, "non": [0, 8, 10, 12, 20, 22], "squar": [0, 10, 22], "epsv_times_h_squar": 0, "epsv_times_h": [0, 11, 23], "rest": [0, 8, 9, 10, 11, 20, 21, 22, 23, 25], "posit": [0, 1, 5, 6, 8, 9, 10, 11, 17, 20, 21, 22, 23, 25], "v_rest": 0, "longer": 0, "member": [1, 5, 6, 8, 9, 11, 17, 22, 23, 24, 25], "leader": 1, "particip": 1, "commun": 1, "harass": 1, "free": [1, 6, 7, 13, 14, 15, 18, 19], "experi": 1, "everyon": 1, "regardless": 1, "ag": 1, "bodi": [1, 4, 13, 16], "visibl": 1, "invis": 1, "disabl": [1, 3, 13], "ethnic": 1, "sex": 1, "characterist": 1, "gender": 1, "ident": 1, "express": [1, 14], "level": [1, 3, 13, 24], "educ": 1, "socio": 1, "econom": 1, "statu": 1, "nation": 1, "person": [1, 14], "appear": 1, "race": 1, "religion": 1, "sexual": 1, "act": 1, "interact": 1, "wai": [1, 2, 3, 13, 15], "contribut": 1, "open": [1, 2, 13, 15], "welcom": [1, 2], "divers": 1, "healthi": 1, "exampl": [1, 3, 13], "behavior": 1, "environ": 1, "demonstr": 1, "empathi": 1, "kind": [1, 14], "toward": 1, "other": [1, 5, 6, 9, 13, 14, 15, 17, 21], "peopl": 1, "Being": 1, "respect": [1, 8, 11, 20, 23], "differ": [1, 3, 13], "opinion": 1, "viewpoint": 1, "give": 1, "gracefulli": 1, "accept": 1, "construct": [1, 5, 9, 17, 21], "feedback": 1, "apolog": 1, "those": [1, 2], "affect": 1, "mistak": 1, "learn": 1, "focus": 1, "what": 1, "best": [1, 2], "just": 1, "individu": 1, "overal": 1, "unaccept": 1, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "languag": 1, "imageri": 1, "attent": 1, "advanc": 1, "ani": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 20], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 2], "polit": 1, "attack": 1, "public": [1, 3, 5, 6, 8, 9, 11, 13, 25], "privat": 1, "publish": [1, 14], "physic": [1, 13], "email": 1, "address": 1, "explicit": 1, "permiss": [1, 14], "could": [1, 2], "reason": 1, "inappropri": 1, "profession": 1, "clarifi": 1, "appropri": 1, "fair": 1, "action": [1, 14], "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "remov": 1, "edit": 1, "reject": 1, "commit": 1, "wiki": 1, "issu": [1, 2, 13, 15], "align": [1, 5], "moder": 1, "decis": 1, "appli": [1, 9, 21], "within": 1, "space": [1, 11, 23], "offici": [1, 2], "repres": [1, 6], "mail": 1, "post": [1, 2], "via": 1, "social": 1, "media": 1, "account": 1, "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 14], "instanc": 1, "abus": 1, "otherwis": [1, 14], "mai": 1, "report": [1, 13, 15], "zfergu": 1, "nyu": 1, "edu": 1, "complaint": 1, "review": 1, "investig": 1, "promptli": 1, "fairli": 1, "oblig": 1, "privaci": 1, "secur": 1, "incid": 1, "follow": [1, 3, 13, 14, 25], "impact": [1, 6, 7, 18], "determin": [1, 5, 6, 7, 9, 10, 12, 17, 18, 19, 21, 22], "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "A": [1, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 21, 22, 23], "written": 1, "clariti": 1, "around": [1, 5, 17], "natur": 1, "explan": 1, "why": 1, "apologi": 1, "request": [1, 13, 15, 25], "seri": 1, "continu": [1, 5, 6, 13, 17, 18, 25], "No": 1, "involv": 1, "unsolicit": 1, "specifi": 1, "period": 1, "time": [1, 6, 11, 17, 18, 23], "channel": 1, "term": 1, "lead": 1, "seriou": 1, "sustain": 1, "sort": [1, 6], "allow": [1, 6, 7, 18, 19], "pattern": 1, "aggress": 1, "disparag": 1, "adapt": [1, 13], "avail": 1, "http": [1, 2, 3, 13, 15], "www": 1, "org": 1, "code_of_conduct": 1, "html": 1, "inspir": 1, "mozilla": 1, "ladder": 1, "For": [1, 3, 13, 15], "answer": 1, "common": 1, "question": 1, "about": [1, 2], "faq": 1, "translat": 1, "greatli": 2, "appreci": [2, 13, 15], "everi": 2, "littl": 2, "bit": 2, "help": [2, 10, 22], "credit": 2, "github": [2, 3, 13, 15], "com": [2, 3, 13], "sim": [2, 3, 13, 14, 15], "pleas": [2, 13, 15, 25], "your": [2, 3, 13, 15, 25], "oper": [2, 6, 8, 11], "compil": 2, "detail": [2, 13, 15], "setup": [2, 15], "might": 2, "troubleshoot": 2, "step": [2, 6, 7, 18, 19], "reproduc": 2, "look": [2, 6, 18], "anyth": 2, "tag": 2, "want": [2, 3, 13], "whoever": 2, "enhanc": 2, "timer": 2, "suitabl": 2, "start": [2, 5, 6, 7, 17, 18, 19, 25], "softwar": [2, 13, 14, 15], "whether": [2, 9, 11, 14, 21, 23], "part": 2, "doc": 2, "even": 2, "web": 2, "blog": 2, "articl": [2, 13, 15], "send": 2, "propos": 2, "explain": 2, "how": 2, "would": [2, 13, 15], "work": [2, 13, 15], "keep": 2, "scope": 2, "narrow": [2, 6, 13, 18], "easier": 2, "rememb": 2, "volunt": 2, "driven": 2, "easiest": [3, 13, 15], "exist": [3, 13, 15], "do": [3, 13, 14, 15], "3": [3, 4, 5, 11, 13, 16, 17, 19, 22, 23], "14": [3, 13], "process": [3, 13], "fetchcontent_declar": [3, 13], "ipc_toolkit": [3, 13, 15], "git_repositori": [3, 13], "git": [3, 13], "git_tag": [3, 13], "ipc_toolkit_git_tag": [3, 13], "git_shallow": [3, 13], "fetchcontent_makeavail": [3, 13], "where": [3, 13], "link": [3, 13], "against": [3, 13], "target_link_librari": [3, 13], "project_nam": [3, 13], "librari": [3, 13, 15], "binari": [3, 13], "algebra": [3, 13], "libigl": [3, 13], "basic": [3, 13], "geometri": [3, 13], "predic": [3, 13], "robin": [3, 13], "unordered_set": [3, 5, 9, 13], "unordered_map": [3, 5, 13], "abseil": [3, 13], "ration": [3, 13], "arithmet": [3, 13], "enabl": [3, 8, 13, 20], "ipc_toolkit_with_rational_intersect": [3, 13], "instal": [3, 13], "detect": [3, 5, 6, 13, 17, 18, 25], "inexact": [3, 13], "comparison": [3, 13], "ipc_toolkit_with_correct_ccd": [3, 13], "ensur": [3, 13], "our": [3, 13, 15], "algorithm": [3, 6, 7, 13, 18, 19], "piec": [3, 13], "To": [3, 13], "ipc_toolkit_build_unit_test": [3, 13], "ipc_toolkit_build_test": [3, 13], "catch2": [3, 13], "framework": [3, 13], "finit": [3, 13], "diff": [3, 13], "nlohman": [3, 13], "json": [3, 13], "load": [3, 13], "templat": [4, 6, 8, 10, 11], "typenam": [4, 6, 8, 10, 11], "t": [4, 6, 10, 11, 17], "d": [4, 16], "grow": [4, 16], "infin": [4, 16], "x": [4, 6, 8, 9, 10, 11, 20, 21, 22, 23], "approach": [4, 16], "b": [4, 10, 16, 18, 19, 22, 25], "hat": [4, 16], "2": [4, 5, 11, 16, 17, 23], "ln": [4, 16], "activ": [4, 8, 10, 11, 16, 20, 22, 23], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23], "barrier_gradi": [4, 16], "deriv": [4, 8, 11, 13, 16, 20, 23], "wrt": [4, 9, 10, 11, 16, 21, 22, 23], "barrier_hessian": [4, 16], "grad_energi": [4, 16], "grad_barri": [4, 16], "max_barrier_stiff": [4, 16], "1e11": 4, "dmin": [4, 8, 11, 16, 20, 23], "init": [4, 16], "scene": [4, 16], "mass": [4, 16], "elast": [4, 16], "energi": [4, 16], "out": [4, 5, 6, 10, 14], "scale": [4, 8, 16, 20], "premultipli": [4, 10, 11, 16, 22, 23], "between": [4, 6, 7, 8, 10, 12, 13, 16, 18, 19, 20, 22], "element": [4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 20, 25], "initi": [4, 6, 8, 9, 16, 18, 20, 21], "prev_min_dist": [4, 16], "barrier_stiff": [4, 11, 16, 23], "decreas": [4, 16], "less": [4, 16], "diag": [4, 16], "previou": [4, 11, 16, 23], "current": [4, 8, 11, 15, 16, 23], "fraction": [4, 16], "enum": [5, 10, 11, 25], "broadphasemethod": [5, 6, 7, 8, 12, 17, 18, 19, 20], "enumer": [5, 10, 11, 17], "implement": [5, 13, 15, 17], "sweep_and_tiniest_queu": [5, 17], "sweep_and_tiniest_queue_gpu": [5, 17], "num_method": 5, "constexpr": [5, 7], "default_broad_phase_method": [5, 6, 7, 12], "broadphas": [5, 17], "subclass": [5, 6, 8, 11], "bruteforc": [5, 17], "copymeshbroadphas": 5, "inlin": [5, 6, 8, 9, 10, 11], "virtual": [5, 6, 8, 11], "void": [5, 6, 8, 9, 10, 11], "matrixxi": [5, 6, 8, 9, 11], "inflation_radiu": [5, 6, 17, 18], "radiu": [5, 17], "vertices_t0": [5, 6, 7, 17, 18, 19], "vertices_t1": [5, 6, 7, 17, 18, 19], "end": [5, 6, 7, 11, 17, 18, 19, 23, 25], "built": [5, 8, 15, 17, 20], "detect_edge_vertex_candid": [5, 17], "vector": [5, 6, 8, 9, 11, 21, 23], "edgevertexcandid": [5, 6, 8, 11, 17, 18, 20, 23], "find": [5, 17], "collisison": [5, 17], "detect_edge_edge_candid": [5, 17], "edgeedgecandid": [5, 6, 8, 11, 17, 18, 20, 23], "detect_face_vertex_candid": [5, 17], "facevertexcandid": [5, 6, 8, 11, 17, 18, 20, 23], "detect_edge_face_candid": [5, 17], "edgefacecandid": [5, 6, 17, 18], "detect_collision_candid": [5, 17], "int": [5, 6, 8, 9, 11, 17, 18, 19, 20, 21, 23, 24], "dim": [5, 9, 11, 17, 21, 23], "dimension": [5, 17], "simul": [5, 13, 15, 17], "dimens": [5, 9, 11, 17, 21, 23], "bool": [5, 6, 7, 8, 9, 11, 12, 17, 18, 19, 20, 21, 23], "size_t": [5, 6, 8, 9, 11], "can_vertices_collid": [5, 17], "default_can_vertices_collid": 5, "two": [5, 6, 7, 9, 10, 11, 17, 18, 19, 21, 22, 23], "unique_ptr": 5, "make_broad_phas": [5, 17], "broad_phase_method": [5, 6, 7, 8, 12, 17, 18, 19, 20], "regist": [5, 17], "axi": 5, "arraymax3d": 5, "aabb1": 5, "aabb2": 5, "aabb3": 5, "arrai": [5, 6, 8], "long": [5, 6, 7, 8, 11], "vertex_id": [5, 6, 8, 11, 17, 18, 20], "from_point": [5, 17], "vectormax3d": [5, 7, 8], "p": [5, 10, 11, 17, 22, 23], "p_t0": [5, 7, 10, 17, 19, 22], "p_t1": [5, 7, 10, 17, 19, 22], "tempor": [5, 17], "conservative_infl": [5, 17], "overrid": [5, 6, 8], "cellsiz": [5, 17], "arraymax3i": 5, "gridsiz": [5, 17], "domainmin": [5, 17], "domainmax": [5, 17], "voxels": [5, 17], "querypointfortriangl": [5, 17], "triind": 5, "querypointforprimit": [5, 17], "vertind": 5, "edgeind": 5, "queryedgeforp": [5, 17], "e0": [5, 10, 11, 17, 22, 23, 25], "e1": [5, 10, 11, 17, 22, 23, 25], "queryedgeforedg": [5, 17], "ea0": [5, 10, 11, 17, 22, 23], "ea1": [5, 10, 11, 17, 22, 23], "eai": [5, 17], "queryedgeforedgeswithbboxcheck": [5, 17], "ea0_t0": [5, 7, 17, 19], "ea1_t0": [5, 7, 17, 19], "ea0_t1": [5, 7, 17, 19], "ea1_t1": [5, 7, 17, 19], "querytriangleforpoint": [5, 17], "t0": [5, 10, 11, 17, 22, 23], "t1": [5, 10, 11, 17, 22, 23], "t2": [5, 10, 11, 17, 22, 23], "pointind": 5, "t0_t0": [5, 7, 17, 19], "t1_t0": [5, 7, 17, 19], "t2_t0": [5, 7, 17, 19], "t0_t1": [5, 7, 17, 19], "t1_t1": [5, 7, 17, 19], "t2_t1": [5, 7, 17, 19], "querytriangleforedg": [5, 17], "queryedgefortriangl": [5, 17], "vi": [5, 9, 17, 21], "querypointforedg": [5, 17], "ei": [5, 9, 17, 21], "leftbottomcorn": 5, "righttopcorn": 5, "voxelcount": 5, "one_div_voxels": 5, "voxelcount0x1": 5, "edgestartind": 5, "tristartind": 5, "pointandedgeoccup": 5, "sweepandtiniestqueu": [5, 17], "discret": [6, 18], "row": [6, 7, 9, 18, 19, 21], "amount": [6, 18], "assum": [6, 7, 18, 19], "trajectori": [6, 7, 18, 19], "empti": [6, 8, 11, 18, 20, 23], "continuouscollisioncandid": [6, 18], "idx": [6, 8, 11], "default_ccd_toler": [6, 7], "max_iter": [6, 7, 18, 19], "default_ccd_max_iter": [6, 7], "number": [6, 7, 8, 9, 11, 13, 15, 18, 19, 21, 24], "occur": [6, 7, 18, 19], "maxim": [6, 7, 18, 19], "save_obj": [6, 18], "string": 6, "filenam": [6, 18, 25], "ev_candid": 6, "ee_candid": 6, "fv_candid": 6, "stencil": [6, 8], "most": 6, "four": 6, "vertexvertexcandid": [6, 8, 11, 18, 20, 23], "num_vertic": [6, 8, 9, 18, 20, 21], "4": [6, 8, 13, 15, 18, 20], "vectormax3": 6, "matrixx": [6, 11], "attribut": 6, "nan": 6, "vectormax12": 6, "rowwis": [6, 11, 23], "compute_dist": 6, "vectormax12d": [6, 8, 11], "compute_distance_gradi": 6, "w": 6, "r": 6, "matrixmax12d": [6, 8, 11], "compute_distance_hessian": 6, "toi": [6, 7], "tmax": [6, 7, 18, 19], "conservative_resc": [6, 7, 18, 19], "default_ccd_conservative_resc": [6, 7], "indici": [6, 18], "triangular": [6, 18], "separ": [6, 18], "primit": [6, 9, 18, 21], "rescal": [6, 7, 18], "exactli": [6, 7, 18], "had": [6, 18], "interv": [6, 18], "print_ccd_queri": [6, 18], "vertexvertexconstraint": [6, 8, 11, 20], "vertexvertexfrictionconstraint": [6, 11, 23], "vertex0_id": [6, 8, 11, 18], "vertex1_id": [6, 8, 11, 18], "list": [6, 17, 18, 20, 21], "friend": [6, 8], "h": [6, 8, 11, 23], "abslhashvalu": [6, 8], "vv": [6, 8], "edgevertexconstraint": [6, 8, 11, 20], "edgevertexfrictionconstraint": [6, 11, 23], "edge_id": [6, 8, 11, 18], "ev": [6, 8], "edgeedgefrictionconstraint": [6, 11, 23], "edge0_id": [6, 8, 11, 18], "edge1_id": [6, 8, 11, 18], "Not": 6, "face_id": [6, 8, 11, 18], "fv": [6, 8], "facevertexconstraint": [6, 8, 11, 20], "facevertexfrictionconstraint": [6, 11, 23], "6": [7, 11], "10": 7, "000": 7, "000l": 7, "8": [7, 18, 19], "point_point_ccd": [7, 19], "vector3d": 7, "p0_t0": [7, 19], "p1_t0": [7, 19], "p0_t1": [7, 19], "p1_t1": [7, 19], "point_edge_ccd": [7, 19], "e0_t0": [7, 19], "e1_t0": [7, 19], "e0_t1": [7, 19], "e1_t1": [7, 19], "edge_edge_ccd": [7, 19], "eb0_t0": [7, 19], "eb1_t0": [7, 19], "eb0_t1": [7, 19], "eb1_t1": [7, 19], "point_triangle_ccd": [7, 19], "sum": [8, 20], "stiff": [8, 11, 13, 20, 23], "compute_potential_gradi": [8, 11, 20, 23], "sparsematrix": [8, 9, 11], "compute_potential_hessian": [8, 11, 20, 23], "project_hessian_to_psd": [8, 11, 20, 23], "sure": [8, 20], "semi": [8, 11, 20, 23], "definit": [8, 11, 20, 23], "shape": [8, 20], "throw": 8, "runtime_error": [8, 20], "adjac": [8, 9, 12, 20, 21], "constriant": [8, 11], "index": [8, 9, 11], "converg": [8, 20], "necessarili": 8, "set_use_convergent_formul": 8, "set_are_shape_derivatives_en": 8, "vv_constraint": [8, 11], "ev_constraint": [8, 11], "ee_constraint": [8, 11], "fv_constraint": [8, 11], "planevertexconstraint": [8, 20], "pv_constraint": 8, "inherit": 8, "diagram": 8, "collabor": 8, "minimum_dist": 8, "weight": [8, 11, 23], "sparsevector": [8, 9, 11], "weight_gradi": [8, 11, 23], "plane_origin": 8, "plane_norm": 8, "encapsol": 9, "transform": 9, "go": 9, "volumetr": 9, "fe": 9, "new": [9, 13, 15], "immut": 9, "so": [9, 14], "constructor": 9, "rest_posit": [9, 21, 25], "displacement_map": 9, "directli": 9, "include_vertex": [9, 21], "full_rest_posit": [9, 21], "each": [9, 21], "init_adjac": [9, 21], "init_area_jacobian": [9, 21], "area": [9, 21], "destroi": 9, "num_edg": [9, 21], "num_fac": [9, 21], "ndof": [9, 21], "degre": [9, 21], "freedom": [9, 21], "full_num_vertic": [9, 21], "full_ndof": [9, 21], "faces_to_edg": [9, 21], "full_posit": [9, 21], "displace_vertic": [9, 21], "full_displac": [9, 21], "map_displac": [9, 21], "to_full_vertex_id": [9, 21], "correspond": [9, 21], "quantiti": [9, 21], "chain": [9, 21], "rule": [9, 21], "equal": [9, 21], "vertex_vertex_adjac": [9, 21], "edge_vertex_adjac": [9, 21], "are_adjacencies_initi": [9, 21], "been": [9, 21], "is_vertex_on_boundari": [9, 21], "boundari": [9, 21], "vertex_area": [9, 21], "barycentr": [9, 11, 21, 23], "vertex_area_gradi": [9, 21], "edge_area": [9, 21], "edge_area_gradi": [9, 21], "are_area_jacobians_initi": [9, 21], "jacobian": [9, 21], "default_can_collid": 9, "contain": [9, 21], "build_from_full_mesh": [9, 21], "helper": [9, 21], "automat": [9, 10, 21, 22], "construct_is_on_surfac": [9, 21], "construct_faces_to_edg": [9, 21], "pointedgedistancetyp": [10, 22], "p_e0": [10, 22], "zero": [10, 22], "p_e1": [10, 22], "p_e": [10, 22], "interior": [10, 22], "auto": [10, 11, 22], "edgeedgedistancetyp": [10, 22], "ea0_eb0": [10, 22], "ea0_eb1": [10, 22], "ea1_eb0": [10, 22], "ea1_eb1": [10, 22], "ea_eb0": [10, 22], "ea_eb1": [10, 22], "ea0_eb": [10, 22], "ea1_eb": [10, 22], "ea_eb": [10, 22], "pointtriangledistancetyp": [10, 22], "p_t2": [10, 22], "p_e2": [10, 22], "p_t": [10, 22], "derivedp": [10, 11], "derivede0": [10, 11], "derivede1": [10, 11], "point_edge_distance_typ": [10, 22], "matrixbas": [10, 11], "derivedea0": [10, 11], "derivedea1": [10, 11], "derivedeb0": [10, 11], "derivedeb1": [10, 11], "edge_edge_distance_typ": [10, 22], "eb0": [10, 11, 22, 23], "eb1": [10, 11, 22, 23], "derivedt0": [10, 11], "derivedt1": [10, 11], "derivedt2": [10, 11], "point_triangle_distance_typ": [10, 22], "third": [10, 11, 22, 23], "edge_edge_mollifier_threshold": [10, 22], "ea0_rest": [10, 22], "ea1_rest": [10, 22], "eb0_rest": [10, 22], "eb1_rest": [10, 22], "edge_edge_cross_squarednorm": [10, 22], "norm": [10, 22], "cross": [10, 22], "product": [10, 22], "derivedgrad": 10, "edge_edge_cross_squarednorm_gradi": [10, 22], "plainobjectbas": 10, "grad": 10, "derivedhess": 10, "edge_edge_cross_squarednorm_hessian": [10, 22], "hess": 10, "edge_edge_mollifi": [10, 22], "smooth": [10, 13, 22], "close": [10, 22], "edge_edge_mollifier_gradi": [10, 22], "edge_edge_mollifier_hessian": [10, 22], "edge_edge_dist": [10, 22], "dtype": [10, 22], "segment": [10, 22], "actual": [10, 22], "edge_edge_distance_gradi": [10, 22], "edge_edge_distance_hessian": [10, 22], "line_line_dist": [10, 22], "infinit": [10, 22], "defin": [10, 22], "line_line_distance_gradi": [10, 22], "line_line_distance_hessian": [10, 22], "point_edge_dist": [10, 22], "point_edge_distance_gradi": [10, 22], "point_edge_distance_hessian": [10, 22], "point_line_dist": [10, 22], "point_line_distance_gradi": [10, 22], "point_line_distance_hessian": [10, 22], "derivedorigin": 10, "derivednorm": 10, "point_plane_dist": [10, 22], "point_plane_distance_gradi": [10, 22], "point_plane_distance_hessian": [10, 22], "derivedp0": [10, 11], "derivedp1": [10, 11], "point_point_dist": [10, 22], "p0": [10, 11, 22, 23], "p1": [10, 11, 22, 23], "point_point_distance_gradi": [10, 22], "point_point_distance_hessian": [10, 22], "point_triangle_dist": [10, 22], "point_triangle_distance_gradi": [10, 22], "point_triangle_distance_hessian": [10, 22], "contact_constraint": [11, 23], "blend_mu": [11, 23], "default_blend_mu": 11, "dissap": [11, 23], "ut": [11, 23], "no_mu": [11, 23], "diffwrt": [11, 23], "mu0": 11, "mu1": 11, "variabl": [11, 23, 25], "differenti": [11, 23], "epsilon_vh": [11, 23], "normal_force_magnitud": [11, 23], "vectormax2d": 11, "closest_point": [11, 23], "coordin": [11, 23, 25], "matrixmax": 11, "tangent_basi": [11, 23], "f0_sf": [11, 23], "f_0": [11, 23], "y": [11, 23], "begin": [11, 23], "case": [11, 23], "epsilon_v": [11, 23], "newlin": [11, 23], "geq": [11, 23], "tangenti": [11, 23], "speed": [11, 23], "f1_sf_over_x": [11, 23], "divid": [11, 23], "f_1": [11, 23], "df1_x_minus_f1_over_x3": [11, 23], "f1": [11, 23], "minu": [11, 23], "cube": [11, 23], "compute_normal_force_magnitud": [11, 23], "distance_squar": [11, 23], "compute_normal_force_magnitude_gradi": [11, 23], "distance_squared_gradi": [11, 23], "scalar": 11, "point_point_tangent_basi": [11, 23], "3x2": [11, 23], "whose": [11, 23], "column": [11, 23], "point_edge_tangent_basi": [11, 23], "point_triangle_tangent_basi": [11, 23], "bmatrix": [11, 23], "t_1": [11, 23], "t_0": [11, 23], "t_2": [11, 23], "18": 11, "point_point_tangent_basis_jacobian": [11, 23], "27": 11, "point_edge_tangent_basis_jacobian": [11, 23], "36": [11, 23], "edge_edge_tangent_basis_jacobian": [11, 23], "point_triangle_tangent_basis_jacobian": [11, 23], "deriveddp0": 11, "deriveddp1": 11, "point_point_relative_veloc": [11, 23], "dp0": [11, 23], "dp1": [11, 23], "deriveddp": 11, "derivedde0": 11, "derivedde1": 11, "point_edge_relative_veloc": [11, 23], "dp": [11, 23], "de0": [11, 23], "de1": [11, 23], "alpha": [11, 23], "endpoint": [11, 23], "parametr": [11, 23], "deriveddea0": 11, "deriveddea1": 11, "deriveddeb0": 11, "deriveddeb1": 11, "derivedcoord": 11, "edge_edge_relative_veloc": [11, 23], "dea0": [11, 23], "dea1": [11, 23], "deb0": [11, 23], "deb1": [11, 23], "coord": [11, 23], "deriveddt0": 11, "deriveddt1": 11, "deriveddt2": 11, "point_triangle_relative_veloc": [11, 23], "dt0": [11, 23], "dt1": [11, 23], "dt2": [11, 23], "baricentr": [11, 23], "point_point_relative_velocity_matrix": [11, 23], "point_edge_relative_velocity_matrix": [11, 23], "12": [11, 22], "edge_edge_relative_velocity_matrix": [11, 23], "point_triangle_relative_velocity_matrix": [11, 23], "point_point_relative_velocity_matrix_jacobian": [11, 23], "point_edge_relative_velocity_matrix_jacobian": [11, 23], "edge_edge_relative_velocity_matrix_jacobian": [11, 23], "point_triangle_relative_velocity_matrix_jacobian": [11, 23], "ha": 12, "reusabl": [13, 15], "its": 13, "lag": 13, "dissip": 13, "As": 13, "doe": 13, "solver": 13, "polyfem": 13, "rigid": 13, "dynam": [13, 15], "both": 13, "pybind11": [13, 15], "contributor": [13, 15], "come": [13, 15], "fix": [13, 15], "tutori": [13, 15], "highli": [13, 15], "submit": [13, 15], "pull": [13, 15, 25], "simpli": [13, 15], "fork": [13, 15], "repositori": [13, 15], "cite": [13, 15], "author": [13, 14, 15], "zachari": [13, 15], "titl": [13, 15], "url": [13, 15], "io": [13, 15], "year": [13, 15], "2020": [13, 14, 15], "addition": [13, 15], "paper": [13, 15], "li2020ipc": [13, 15], "minchen": [13, 15], "teseo": [13, 15], "schneider": [13, 15], "timothi": [13, 15], "langloi": [13, 15], "deni": [13, 15], "zorin": [13, 15], "daniel": [13, 15], "panozzo": [13, 15], "chenfanfu": [13, 15], "jiang": [13, 15], "danni": [13, 15], "m": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "kaufman": [13, 15], "invers": [13, 15], "deform": [13, 15], "journal": [13, 15], "acm": [13, 15], "tran": [13, 15], "graph": [13, 15], "siggraph": [13, 15], "volum": [13, 15], "39": [13, 15], "articleno": [13, 15], "49": [13, 15], "mit": [13, 14, 15], "copyright": 14, "c": [14, 15], "herebi": 14, "grant": 14, "charg": 14, "obtain": 14, "copi": 14, "associ": 14, "deal": 14, "restrict": 14, "modifi": 14, "merg": 14, "distribut": 14, "sublicens": 14, "sell": 14, "permit": 14, "whom": 14, "furnish": 14, "subject": 14, "condit": 14, "abov": 14, "notic": 14, "shall": 14, "substanti": 14, "portion": 14, "THE": 14, "AS": 14, "warranti": 14, "OF": 14, "OR": 14, "impli": 14, "BUT": 14, "NOT": 14, "TO": 14, "merchant": 14, "fit": 14, "FOR": 14, "particular": 14, "purpos": 14, "AND": 14, "noninfring": 14, "IN": 14, "NO": 14, "holder": 14, "BE": 14, "liabl": 14, "claim": 14, "damag": 14, "liabil": 14, "contract": 14, "tort": 14, "aris": 14, "WITH": 14, "bind": 15, "scratch": 15, "py": 15, "script": 15, "setuptool": 15, "them": 15, "success": 15, "import": 15, "ipctk": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "jupyt": 15, "notebook": 15, "ipynb": 15, "featur": 15, "txt": 15, "float": [16, 17, 18, 19, 20, 21, 22, 23], "numpi": [16, 17, 18, 19, 20, 21, 22, 23], "ndarrai": [16, 17, 18, 19, 20, 21, 22, 23], "float64": [16, 17, 18, 19, 20, 21, 22, 23], "100000000000": 16, "tupl": [16, 17, 18, 19], "09": 16, "properti": [17, 18, 20, 21, 23], "str": [17, 18, 23], "arg": [17, 18, 20, 21, 22, 23], "kwarg": [17, 18, 20, 21, 22, 23], "overload": [17, 18, 20, 21, 22, 23], "n": [17, 18, 19, 20, 21, 22, 23], "int32": [17, 18, 20, 21, 23], "none": [17, 18, 20, 21, 23, 24], "collect": [17, 21], "abc": [17, 21], "callabl": [17, 21, 23], "sphere": 17, "enclos": 17, "capsul": 17, "anoth": 17, "corner": 17, "attach": 17, "tsl": [17, 21], "robin_set": [17, 21], "absl": [17, 21], "lts_20220623": [17, 21], "hash_intern": [17, 21], "equal_to": [17, 21], "alloc": [17, 21], "rh": [17, 21], "power_of_two_growth_polici": [17, 21], "2ul": [17, 21], "06": [18, 19], "10000000": [18, 19], "pybind11_object": [18, 23], "scipi": [20, 21, 23], "spars": [20, 21, 23], "csc_matrix": [20, 21, 23], "param": 21, "7": 22, "loggerlevel": 24, "trace": 24, "debug": 24, "info": 24, "error": 24, "critic": 24, "off": 24, "set_logger_level": 24, "get_num_thread": 24, "set_num_thread": 24, "nthread": 24, "clangformat": 25, "autom": 25, "push": 25, "creat": 25, "In": 25, "stick": 25, "snake_cas": 25, "pascalcas": 25, "struct": 25, "all_cap": 25, "constant": 25, "m_": 25, "set_memb": 25, "materi": 25, "suffix": 25, "_t0": 25, "_t1": 25, "doxygen": 25}, "objects": {"": [[5, 0, 1, "_CPPv4N3ipc4AABBE", "ipc::AABB", "Axis aligned bounding-box of some type."], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d", "ipc::AABB::AABB", ""], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB", "ipc::AABB::AABB", ""], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB", ""], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBEv", "ipc::AABB::AABB", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB", "ipc::AABB::AABB::aabb1", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB::aabb1", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB", "ipc::AABB::AABB::aabb2", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB::aabb2", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB::aabb3", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d", "ipc::AABB::AABB::max", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d", "ipc::AABB::AABB::min", ""], [5, 1, 1, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation", "Compute a conservative inflation of the AABB."], [5, 2, 2, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation::inflation_radius", "Compute a conservative inflation of the AABB."], [5, 2, 2, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation::max", "Compute a conservative inflation of the AABB."], [5, 2, 2, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation::min", "Compute a conservative inflation of the AABB."], [5, 1, 1, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd", "ipc::AABB::from_point", "Compute a AABB for a static point."], [5, 1, 1, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd", "ipc::AABB::from_point", "Compute a AABB for a moving point (i.e. temporal edge)."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd", "ipc::AABB::from_point::inflation_radius", "Compute a AABB for a static point."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd", "ipc::AABB::from_point::inflation_radius", "Compute a AABB for a moving point (i.e. temporal edge)."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd", "ipc::AABB::from_point::p", "Compute a AABB for a static point."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd", "ipc::AABB::from_point::p_t0", "Compute a AABB for a moving point (i.e. temporal edge)."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd", "ipc::AABB::from_point::p_t1", "Compute a AABB for a moving point (i.e. temporal edge)."], [5, 1, 1, "_CPPv4NK3ipc4AABB10intersectsERK4AABB", "ipc::AABB::intersects", ""], [5, 2, 2, "_CPPv4NK3ipc4AABB10intersectsERK4AABB", "ipc::AABB::intersects::other", ""], [5, 3, 1, "_CPPv4N3ipc4AABB3maxE", "ipc::AABB::max", ""], [5, 3, 1, "_CPPv4N3ipc4AABB3minE", "ipc::AABB::min", ""], [5, 3, 1, "_CPPv4N3ipc4AABB10vertex_idsE", "ipc::AABB::vertex_ids", ""], [5, 0, 1, "_CPPv4N3ipc10BroadPhaseE", "ipc::BroadPhase", "Subclassed by ipc::BruteForce, ipc::CopyMeshBroadPhase, ipc::HashGrid, ipc::SpatialHash"], [5, 1, 1, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::BroadPhase::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::BroadPhase::build", "Build the broad phase for static collision detection."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::BroadPhase::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::BroadPhase::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::BroadPhase::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::BroadPhase::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::BroadPhase::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::BroadPhase::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::BroadPhase::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::BroadPhase::build::vertices_t0", "Starting vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::BroadPhase::build::vertices_t1", "Ending vertices of the vertices."], [5, 3, 1, "_CPPv4N3ipc10BroadPhase20can_vertices_collideE", "ipc::BroadPhase::can_vertices_collide", "Function for determining if two vertices can collide."], [5, 1, 1, "_CPPv4N3ipc10BroadPhase5clearEv", "ipc::BroadPhase::clear", "Clear any built data."], [5, 1, 1, "_CPPv4N3ipc10BroadPhase28default_can_vertices_collideE6size_t6size_t", "ipc::BroadPhase::default_can_vertices_collide", ""], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates", "ipc::BroadPhase::detect_collision_candidates", "Detect all collision candidates needed for a given dimensional simulation."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates-p-candidates", "ipc::BroadPhase::detect_collision_candidates::candidates", "The detected collision candidates."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates-p-dim", "ipc::BroadPhase::detect_collision_candidates::dim", "The dimension of the simulation (i.e., 2 or 3)."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::BroadPhase::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisisons."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::BroadPhase::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::BroadPhase::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisisons."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::BroadPhase::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisisons."], [5, 1, 1, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod", "ipc::BroadPhase::make_broad_phase", "Construct a registered broad phase object."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod-p-broad_phase_method", "ipc::BroadPhase::make_broad_phase::broad_phase_method", "The broad phase method to use."], [5, 1, 1, "_CPPv4N3ipc10BroadPhaseD0Ev", "ipc::BroadPhase::~BroadPhase", ""], [5, 4, 1, "_CPPv4N3ipc16BroadPhaseMethodE", "ipc::BroadPhaseMethod", "Enumeration of implemented broad phase methods."], [5, 5, 1, "_CPPv4N3ipc16BroadPhaseMethod11BRUTE_FORCEE", "ipc::BroadPhaseMethod::BRUTE_FORCE", ""], [5, 5, 1, "_CPPv4N3ipc16BroadPhaseMethod9HASH_GRIDE", "ipc::BroadPhaseMethod::HASH_GRID", ""], [5, 5, 1, "_CPPv4N3ipc16BroadPhaseMethod11NUM_METHODSE", "ipc::BroadPhaseMethod::NUM_METHODS", ""], [5, 5, 1, "_CPPv4N3ipc16BroadPhaseMethod12SPATIAL_HASHE", "ipc::BroadPhaseMethod::SPATIAL_HASH", ""], [5, 5, 1, "_CPPv4N3ipc16BroadPhaseMethod23SWEEP_AND_TINIEST_QUEUEE", "ipc::BroadPhaseMethod::SWEEP_AND_TINIEST_QUEUE", ""], [5, 5, 1, "_CPPv4N3ipc16BroadPhaseMethod27SWEEP_AND_TINIEST_QUEUE_GPUE", "ipc::BroadPhaseMethod::SWEEP_AND_TINIEST_QUEUE_GPU", ""], [5, 0, 1, "_CPPv4N3ipc10BruteForceE", "ipc::BruteForce", "Find the candidate edge-vertex collisisons."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::BruteForce::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::BruteForce::detect_edge_edge_candidates::candidates", "Find the candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::BruteForce::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::BruteForce::detect_edge_face_candidates::candidates", "Find the candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::BruteForce::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::BruteForce::detect_edge_vertex_candidates::candidates", "Find the candidate edge-vertex collisisons."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::BruteForce::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::BruteForce::detect_face_vertex_candidates::candidates", "Find the candidate face-vertex collisions."], [6, 0, 1, "_CPPv4N3ipc10CandidatesE", "ipc::Candidates", "Initialize the set of discrete collision detection candidates."], [6, 1, 1, "_CPPv4N3ipc10Candidates10CandidatesEv", "ipc::Candidates::Candidates", ""], [6, 1, 1, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod", "ipc::Candidates::build", "Initialize the set of discrete collision detection candidates."], [6, 1, 1, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod", "ipc::Candidates::build", "Initialize the set of continuous collision detection candidates."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::Candidates::build::broad_phase_method", "Broad phase method to use."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::Candidates::build::broad_phase_method", "Broad phase method to use."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-inflation_radius", "ipc::Candidates::build::inflation_radius", "Amount to inflate the bounding boxes."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-inflation_radius", "ipc::Candidates::build::inflation_radius", "Amount to inflate the bounding boxes."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-mesh", "ipc::Candidates::build::mesh", "The surface of the contact mesh."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-mesh", "ipc::Candidates::build::mesh", "The surface of the contact mesh."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices", "ipc::Candidates::build::vertices", "Surface Vertex vertices at start as rows of a matrix."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices_t0", "ipc::Candidates::build::vertices_t0", "Surface vertex vertices at start as rows of a matrix."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices_t1", "ipc::Candidates::build::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [6, 1, 1, "_CPPv4N3ipc10Candidates5clearEv", "ipc::Candidates::clear", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl", "ipc::Candidates::compute_collision_free_stepsize", "Computes a maximal step size that is collision free using the set of collision candidates."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-max_iterations", "ipc::Candidates::compute_collision_free_stepsize::max_iterations", "The maximum number of iterations for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-mesh", "ipc::Candidates::compute_collision_free_stepsize::mesh", "The collision mesh."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-min_distance", "ipc::Candidates::compute_collision_free_stepsize::min_distance", "The minimum distance allowable between any two elements."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-tolerance", "ipc::Candidates::compute_collision_free_stepsize::tolerance", "The tolerance for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t0", "ipc::Candidates::compute_collision_free_stepsize::vertices_t0", "Vertex vertices at start as rows of a matrix."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t1", "ipc::Candidates::compute_collision_free_stepsize::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [6, 3, 1, "_CPPv4N3ipc10Candidates13ee_candidatesE", "ipc::Candidates::ee_candidates", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates5emptyEv", "ipc::Candidates::empty", ""], [6, 3, 1, "_CPPv4N3ipc10Candidates13ev_candidatesE", "ipc::Candidates::ev_candidates", ""], [6, 3, 1, "_CPPv4N3ipc10Candidates13fv_candidatesE", "ipc::Candidates::fv_candidates", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl", "ipc::Candidates::is_step_collision_free", "Determine if the step is collision free from the set of candidates."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-max_iterations", "ipc::Candidates::is_step_collision_free::max_iterations", "The maximum number of iterations for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-mesh", "ipc::Candidates::is_step_collision_free::mesh", "The collision mesh."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-min_distance", "ipc::Candidates::is_step_collision_free::min_distance", "The minimum distance allowable between any two elements."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-tolerance", "ipc::Candidates::is_step_collision_free::tolerance", "The tolerance for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t0", "ipc::Candidates::is_step_collision_free::vertices_t0", "Surface vertex vertices at start as rows of a matrix."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t1", "ipc::Candidates::is_step_collision_free::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [6, 1, 1, "_CPPv4N3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]", ""], [6, 1, 1, "_CPPv4NK3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]", ""], [6, 2, 2, "_CPPv4N3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]::idx", ""], [6, 2, 2, "_CPPv4NK3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]::idx", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::edges", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::faces", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::filename", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::vertices", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates4sizeEv", "ipc::Candidates::size", ""], [8, 0, 1, "_CPPv4N3ipc19CollisionConstraintE", "ipc::CollisionConstraint", "Inheritence diagram for ipc::CollisionConstraint:"], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::edges", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::faces", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::edges", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::faces", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::edges", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::faces", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::project_hessian_to_psd", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::vertices", ""], [8, 3, 1, "_CPPv4N3ipc19CollisionConstraint16minimum_distanceE", "ipc::CollisionConstraint::minimum_distance", ""], [8, 3, 1, "_CPPv4N3ipc19CollisionConstraint6weightE", "ipc::CollisionConstraint::weight", ""], [8, 3, 1, "_CPPv4N3ipc19CollisionConstraint15weight_gradientE", "ipc::CollisionConstraint::weight_gradient", ""], [8, 1, 1, "_CPPv4N3ipc19CollisionConstraintD0Ev", "ipc::CollisionConstraint::~CollisionConstraint", ""], [8, 0, 1, "_CPPv4N3ipc20CollisionConstraintsE", "ipc::CollisionConstraints", "Initialize the set of constraints used to compute the barrier potential."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints20CollisionConstraintsEv", "ipc::CollisionConstraints::CollisionConstraints", ""], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints29are_shape_derivatives_enabledEv", "ipc::CollisionConstraints::are_shape_derivatives_enabled", "Get if the collision constraints are using the convergent formulation."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd", "ipc::CollisionConstraints::build", "Initialize the set of constraints used to compute the barrier potential."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod", "ipc::CollisionConstraints::build", "Initialize the set of constraints used to compute the barrier potential."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::CollisionConstraints::build::broad_phase_method", "Broad-phase method to use."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-candidates", "ipc::CollisionConstraints::build::candidates", "Distance candidates from which the constraint set is built."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-dhat", "ipc::CollisionConstraints::build::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-dhat", "ipc::CollisionConstraints::build::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-dmin", "ipc::CollisionConstraints::build::dmin", "Minimum distance."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-dmin", "ipc::CollisionConstraints::build::dmin", "Minimum distance."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-mesh", "ipc::CollisionConstraints::build::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-mesh", "ipc::CollisionConstraints::build::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-vertices", "ipc::CollisionConstraints::build::vertices", "Vertices of the collision mesh."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-vertices", "ipc::CollisionConstraints::build::vertices", "Vertices of the collision mesh."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints5clearEv", "ipc::CollisionConstraints::clear", "Clear the collision constraints."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE", "ipc::CollisionConstraints::compute_minimum_distance", "Computes the minimum distance between any non-adjacent elements."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::CollisionConstraints::compute_minimum_distance::mesh", "[in] The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-vertices", "ipc::CollisionConstraints::compute_minimum_distance::vertices", "[in] Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::CollisionConstraints::compute_potential", "Compute the barrier potential for a given constraint set."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::CollisionConstraints::compute_potential::dhat", "[in] The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::CollisionConstraints::compute_potential::mesh", "[in] The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-vertices", "ipc::CollisionConstraints::compute_potential::vertices", "[in] Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::CollisionConstraints::compute_potential_gradient", "Compute the gradient of the barrier potential."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::CollisionConstraints::compute_potential_gradient::dhat", "[in] The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::CollisionConstraints::compute_potential_gradient::mesh", "[in] The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-vertices", "ipc::CollisionConstraints::compute_potential_gradient::vertices", "[in] Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb", "ipc::CollisionConstraints::compute_potential_hessian", "Compute the hessian of the barrier potential."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-dhat", "ipc::CollisionConstraints::compute_potential_hessian::dhat", "[in] The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-mesh", "ipc::CollisionConstraints::compute_potential_hessian::mesh", "[in] The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-project_hessian_to_psd", "ipc::CollisionConstraints::compute_potential_hessian::project_hessian_to_psd", "[in] Make sure the hessian is positive semi-definite."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-vertices", "ipc::CollisionConstraints::compute_potential_hessian::vertices", "[in] Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::CollisionConstraints::compute_shape_derivative", "Compute the barrier shape derivative."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::CollisionConstraints::compute_shape_derivative::dhat", "[in] The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::CollisionConstraints::compute_shape_derivative::mesh", "[in] The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-vertices", "ipc::CollisionConstraints::compute_shape_derivative::vertices", "[in] Vertices of the collision mesh."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14ee_constraintsE", "ipc::CollisionConstraints::ee_constraints", ""], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints5emptyEv", "ipc::CollisionConstraints::empty", "Get if the collision constraints are empty."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14ev_constraintsE", "ipc::CollisionConstraints::ev_constraints", ""], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14fv_constraintsE", "ipc::CollisionConstraints::fv_constraints", ""], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraintsixE6size_t", "ipc::CollisionConstraints::operator[]", "Get a reference to constriant idx."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraintsixE6size_t", "ipc::CollisionConstraints::operator[]", "Get a const reference to constriant idx."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraintsixE6size_t-p-idx", "ipc::CollisionConstraints::operator[]::idx", "The index of the constraint."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraintsixE6size_t-p-idx", "ipc::CollisionConstraints::operator[]::idx", "The index of the constraint."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14pv_constraintsE", "ipc::CollisionConstraints::pv_constraints", ""], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints33set_are_shape_derivatives_enabledEKb", "ipc::CollisionConstraints::set_are_shape_derivatives_enabled", "Set if the collision constraints should enable shape derivative computation."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints33set_are_shape_derivatives_enabledEKb-p-are_shape_derivatives_enabled", "ipc::CollisionConstraints::set_are_shape_derivatives_enabled::are_shape_derivatives_enabled", "If the collision constraints should enable shape derivative computation."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints30set_use_convergent_formulationEKb", "ipc::CollisionConstraints::set_use_convergent_formulation", "Set if the collision constraints should use the convergent formulation."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints30set_use_convergent_formulationEKb-p-use_convergent_formulation", "ipc::CollisionConstraints::set_use_convergent_formulation::use_convergent_formulation", "If the collision constraints should use the convergent formulation."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints4sizeEv", "ipc::CollisionConstraints::size", "Get the number of collision constraints."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints26use_convergent_formulationEv", "ipc::CollisionConstraints::use_convergent_formulation", "Get if the collision constraints should use the convergent formulation."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14vv_constraintsE", "ipc::CollisionConstraints::vv_constraints", ""], [9, 0, 1, "_CPPv4N3ipc13CollisionMeshE", "ipc::CollisionMesh", "A class for encapsolating the transformation/selections needed to go from a volumetric FE mesh to a surface collision mesh."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object directly from the collision mesh vertices."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object from a full mesh vertices."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshEv", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh indexed into the full mesh vertices."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh indexed into the full mesh vertices."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-full_rest_positions", "ipc::CollisionMesh::CollisionMesh::full_rest_positions", "The vertices of the full mesh at rest."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-include_vertex", "ipc::CollisionMesh::CollisionMesh::include_vertex", "Vector of bools indicating whether each vertex should be included in the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-rest_positions", "ipc::CollisionMesh::CollisionMesh::rest_positions", "The vertices of the collision mesh at rest."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh27are_adjacencies_initializedEv", "ipc::CollisionMesh::are_adjacencies_initialized", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh30are_area_jacobians_initializedEv", "ipc::CollisionMesh::are_area_jacobians_initialized", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionMesh::build_from_full_mesh", "Helper function that automatically builds include_vertex using construct_is_on_surface."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::build_from_full_mesh::edges", "The edge matrix of mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::build_from_full_mesh::faces", "The face matrix of mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-full_rest_positions", "ipc::CollisionMesh::build_from_full_mesh::full_rest_positions", "The full vertices at rest."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh11can_collideE", "ipc::CollisionMesh::can_collide", "A function that takes two vertex IDs and returns true if the vertices (and faces or edges containing the vertices) can collide."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionMesh::construct_faces_to_edges", "Construct a matrix that maps from the faces' edges to rows in the edges matrix."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::construct_faces_to_edges::edges", "The edge matrix of mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::construct_faces_to_edges::faces", "The face matrix of mesh."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE", "ipc::CollisionMesh::construct_is_on_surface", "Construct a vector of bools indicating whether each vertex is on the surface."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::construct_is_on_surface::edges", "The surface edges of the mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE-p-num_vertices", "ipc::CollisionMesh::construct_is_on_surface::num_vertices", "The number of vertices in the mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh3dimEv", "ipc::CollisionMesh::dim", "Get the dimension of the mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::displace_vertices", "Compute the vertex positions from vertex displacements on the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::displace_vertices::full_displacements", "The vertex displacements on the full mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t", "ipc::CollisionMesh::edge_area", "Get the barycentric area of an edge."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t-p-ei", "ipc::CollisionMesh::edge_area::ei", "Edge ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t", "ipc::CollisionMesh::edge_area_gradient", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t-p-ei", "ipc::CollisionMesh::edge_area_gradient::ei", "Edge ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh10edge_areasEv", "ipc::CollisionMesh::edge_areas", "Get the barycentric area of the edges."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh23edge_vertex_adjacenciesEv", "ipc::CollisionMesh::edge_vertex_adjacencies", "Get the edge-vertex adjacency matrix."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh5edgesEv", "ipc::CollisionMesh::edges", "Get the edges of the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh5facesEv", "ipc::CollisionMesh::faces", "Get the faces of the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh14faces_to_edgesEv", "ipc::CollisionMesh::faces_to_edges", "Get the mapping from faces to edges of the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9full_ndofEv", "ipc::CollisionMesh::full_ndof", "Get the number of degrees of freedom in the full mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17full_num_verticesEv", "ipc::CollisionMesh::full_num_vertices", "Get the number of vertices in the full mesh."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh16init_adjacenciesEv", "ipc::CollisionMesh::init_adjacencies", "Initialize vertex-vertex and edge-vertex adjacencies."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh19init_area_jacobiansEv", "ipc::CollisionMesh::init_area_jacobians", "Initialize vertex and edge areas."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi", "ipc::CollisionMesh::is_vertex_on_boundary", "Is a vertex on the boundary of the collision mesh?"], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi-p-vi", "ipc::CollisionMesh::is_vertex_on_boundary::vi", "Vertex ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::map_displacements", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::map_displacements::full_displacements", "The vertex displacements on the full mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh4ndofEv", "ipc::CollisionMesh::ndof", "Get the number of degrees of freedom in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9num_edgesEv", "ipc::CollisionMesh::num_edges", "Get the number of edges in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9num_facesEv", "ipc::CollisionMesh::num_faces", "Get the number of faces in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh12num_verticesEv", "ipc::CollisionMesh::num_vertices", "Get the number of vertices in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh14rest_positionsEv", "ipc::CollisionMesh::rest_positions", "Get the vertices of the collision mesh at rest."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::to_full_dof", "Map a matrix quantity on the collision mesh to the full mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE", "ipc::CollisionMesh::to_full_dof", "Map a vector quantity on the collision mesh to the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE-p-X", "ipc::CollisionMesh::to_full_dof::X", "Matrix quantity on the collision mesh with size equal to ndof() \u00d7 ndof()."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE-p-x", "ipc::CollisionMesh::to_full_dof::x", "Vector quantity on the collision mesh with size equal to ndof()."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t", "ipc::CollisionMesh::to_full_vertex_id", "Map a vertex ID to the corresponding vertex ID in the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t-p-id", "ipc::CollisionMesh::to_full_vertex_id::id", "Vertex ID in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t", "ipc::CollisionMesh::vertex_area", "Get the barycentric area of a vertex."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area::vi", "Vertex ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t", "ipc::CollisionMesh::vertex_area_gradient", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area_gradient::vi", "Vertex ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh12vertex_areasEv", "ipc::CollisionMesh::vertex_areas", "Get the barycentric area of the vertices."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh25vertex_vertex_adjacenciesEv", "ipc::CollisionMesh::vertex_vertex_adjacencies", "Get the vertex-vertex adjacency matrix."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::vertices", "Compute the vertex positions from the positions of the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE-p-full_positions", "ipc::CollisionMesh::vertices::full_positions", "The vertex positions of the full mesh."], [9, 1, 1, "_CPPv4N3ipc13CollisionMeshD0Ev", "ipc::CollisionMesh::~CollisionMesh", "Destroy the Collision Mesh object."], [6, 0, 1, "_CPPv4N3ipc16CollisionStencilE", "ipc::CollisionStencil", "A stencil representing a collision between at most four vertices."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::compute_distance", "Compute the distance of the stencil."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::compute_distance::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::compute_distance::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::compute_distance::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::compute_distance_gradient::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::compute_distance_gradient::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::compute_distance_gradient::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::compute_distance_hessian::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::compute_distance_hessian::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::compute_distance_hessian::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::dof", "Select this stencil's DOF from the full matrix of DOF."], [6, 6, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-T", "ipc::CollisionStencil::dof::T", "Type of the DOF"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-X", "ipc::CollisionStencil::dof::X", "Full matrix of DOF (rowwise)."], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::dof::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::dof::faces", "Collision mesh faces"], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil12num_verticesEv", "ipc::CollisionStencil::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::vertex_ids::faces", "Collision mesh faces"], [6, 1, 1, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::vertices", "Get the vertex attributes of the contact stencil."], [6, 6, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-T", "ipc::CollisionStencil::vertices::T", "Type of the attributes"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::vertices::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::vertices::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::vertices::vertices", "Vertex attributes"], [6, 1, 1, "_CPPv4N3ipc16CollisionStencilD0Ev", "ipc::CollisionStencil::~CollisionStencil", ""], [6, 0, 1, "_CPPv4N3ipc28ContinuousCollisionCandidateE", "ipc::ContinuousCollisionCandidate", "Virtual class for candidates that support CCD."], [6, 1, 1, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::ContinuousCollisionCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::ContinuousCollisionCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::ContinuousCollisionCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::ContinuousCollisionCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-min_distance", "ipc::ContinuousCollisionCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::ContinuousCollisionCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::ContinuousCollisionCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::ContinuousCollisionCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::ContinuousCollisionCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::ContinuousCollisionCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 1, 1, "_CPPv4NK3ipc28ContinuousCollisionCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::ContinuousCollisionCandidate::print_ccd_query", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::ContinuousCollisionCandidate::print_ccd_query::edges", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::ContinuousCollisionCandidate::print_ccd_query::faces", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::ContinuousCollisionCandidate::print_ccd_query::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::ContinuousCollisionCandidate::print_ccd_query::vertices_t1", ""], [6, 1, 1, "_CPPv4N3ipc28ContinuousCollisionCandidateD0Ev", "ipc::ContinuousCollisionCandidate::~ContinuousCollisionCandidate", ""], [5, 3, 1, "_CPPv4N3ipc26DEFAULT_BROAD_PHASE_METHODE", "ipc::DEFAULT_BROAD_PHASE_METHOD", ""], [7, 3, 1, "_CPPv4N3ipc34DEFAULT_CCD_CONSERVATIVE_RESCALINGE", "ipc::DEFAULT_CCD_CONSERVATIVE_RESCALING", "The default conservative rescaling value used to avoid taking steps exactly to impact."], [7, 3, 1, "_CPPv4N3ipc26DEFAULT_CCD_MAX_ITERATIONSE", "ipc::DEFAULT_CCD_MAX_ITERATIONS", "The default maximum number of iterations used with Tight-Inclusion CCD."], [7, 3, 1, "_CPPv4N3ipc21DEFAULT_CCD_TOLERANCEE", "ipc::DEFAULT_CCD_TOLERANCE", "The default tolerance used with Tight-Inclusion CCD."], [6, 0, 1, "_CPPv4N3ipc17EdgeEdgeCandidateE", "ipc::EdgeEdgeCandidate", "Subclassed by ipc::EdgeEdgeConstraint, ipc::EdgeEdgeFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue", ""], [6, 6, 2, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue::ee", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll", "ipc::EdgeEdgeCandidate::EdgeEdgeCandidate", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll", "ipc::EdgeEdgeCandidate::EdgeEdgeCandidate::edge0_id", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll", "ipc::EdgeEdgeCandidate::EdgeEdgeCandidate::edge1_id", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::EdgeEdgeCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::EdgeEdgeCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::EdgeEdgeCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::EdgeEdgeCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::min_distance", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::EdgeEdgeCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::EdgeEdgeCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::EdgeEdgeCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::EdgeEdgeCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::EdgeEdgeCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 3, 1, "_CPPv4N3ipc17EdgeEdgeCandidate8edge0_idE", "ipc::EdgeEdgeCandidate::edge0_id", "ID of the first edge."], [6, 3, 1, "_CPPv4N3ipc17EdgeEdgeCandidate8edge1_idE", "ipc::EdgeEdgeCandidate::edge1_id", "ID of the second edge."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate12num_verticesEv", "ipc::EdgeEdgeCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidateneERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidateneERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidateltERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator&lt;", "Compare EdgeEdgeCandidates for sorting."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidateltERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator&lt;::other", "Compare EdgeEdgeCandidates for sorting."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidateeqERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidateeqERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator==::other", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::print_ccd_query", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::print_ccd_query::edges", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::print_ccd_query::faces", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::print_ccd_query::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::print_ccd_query::vertices_t1", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeEdgeCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeEdgeCandidate::vertex_ids::faces", "Collision mesh faces"], [8, 0, 1, "_CPPv4N3ipc18EdgeEdgeConstraintE", "ipc::EdgeEdgeConstraint", "Inheritence diagram for ipc::EdgeEdgeConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue", ""], [8, 6, 2, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue::ee", ""], [8, 2, 2, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue::h", ""], [8, 1, 1, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidated", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint", ""], [8, 1, 1, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintElld", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidated", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::candidate", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintElld", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::edge0_id", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintElld", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::edge1_id", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidated", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::eps_x", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintElld", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::eps_x", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::edges", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::faces", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::edges", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::faces", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::edges", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::faces", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::project_hessian_to_psd", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::vertices", ""], [8, 3, 1, "_CPPv4N3ipc18EdgeEdgeConstraint5eps_xE", "ipc::EdgeEdgeConstraint::eps_x", ""], [10, 4, 1, "_CPPv4N3ipc20EdgeEdgeDistanceTypeE", "ipc::EdgeEdgeDistanceType", "Closest pair between two edges."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType4AUTOE", "ipc::EdgeEdgeDistanceType::AUTO", "Automatically determine the closest pair."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA0_EBE", "ipc::EdgeEdgeDistanceType::EA0_EB", "The edges are closest at vertex 0 of edge A and the interior of edge B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB0E", "ipc::EdgeEdgeDistanceType::EA0_EB0", "The edges are closest at vertex 0 of edge A and 0 of edge B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB1E", "ipc::EdgeEdgeDistanceType::EA0_EB1", "The edges are closest at vertex 0 of edge A and 1 of edge B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA1_EBE", "ipc::EdgeEdgeDistanceType::EA1_EB", "The edges are closest at vertex 1 of edge A and the interior of edge B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB0E", "ipc::EdgeEdgeDistanceType::EA1_EB0", "The edges are closest at vertex 1 of edge A and 0 of edge B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB1E", "ipc::EdgeEdgeDistanceType::EA1_EB1", "The edges are closest at vertex 1 of edge A and 1 of edge B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType5EA_EBE", "ipc::EdgeEdgeDistanceType::EA_EB", "The edges are closest at an interior point of edge A and B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB0E", "ipc::EdgeEdgeDistanceType::EA_EB0", "The edges are closest at the interior of edge A and vertex 0 of edge B."], [10, 5, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB1E", "ipc::EdgeEdgeDistanceType::EA_EB1", "The edges are closest at the interior of edge A and vertex 1 of edge B."], [11, 0, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraintE", "ipc::EdgeEdgeFrictionConstraint", "Public Functions    EdgeEdgeFrictionConstraint(const EdgeEdgeConstraint &constraint)      EdgeEdgeFrictionConstraint(const EdgeEdgeConstraint &constraint, const Eigen::MatrixXd &vertices, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double dhat, const double barrier_stiffness)      template<typename T> inline T compute_potential(const MatrixX<T> &velocities, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double epsv_times_h) const      EdgeEdgeCandidate(long edge0_id, long edge1_id)"], [11, 1, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeCandidate", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeCandidate::edge0_id", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeCandidate::edge1_id", ""], [11, 1, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraint", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraint", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4I0ENK3ipc26EdgeEdgeFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeFrictionConstraint::compute_potential", ""], [11, 6, 2, "_CPPv4I0ENK3ipc26EdgeEdgeFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeFrictionConstraint::compute_potential::T", ""], [11, 2, 2, "_CPPv4I0ENK3ipc26EdgeEdgeFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeFrictionConstraint::compute_potential::edges", ""], [11, 2, 2, "_CPPv4I0ENK3ipc26EdgeEdgeFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeFrictionConstraint::compute_potential::epsv_times_h", ""], [11, 2, 2, "_CPPv4I0ENK3ipc26EdgeEdgeFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeFrictionConstraint::compute_potential::faces", ""], [11, 2, 2, "_CPPv4I0ENK3ipc26EdgeEdgeFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeFrictionConstraint::compute_potential::velocities", ""], [6, 0, 1, "_CPPv4N3ipc17EdgeFaceCandidateE", "ipc::EdgeFaceCandidate", "Candidate for intersection between edge and face."], [6, 1, 1, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue", ""], [6, 6, 2, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue::fv", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll", "ipc::EdgeFaceCandidate::EdgeFaceCandidate", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll", "ipc::EdgeFaceCandidate::EdgeFaceCandidate::edge_id", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll", "ipc::EdgeFaceCandidate::EdgeFaceCandidate::face_id", ""], [6, 3, 1, "_CPPv4N3ipc17EdgeFaceCandidate7edge_idE", "ipc::EdgeFaceCandidate::edge_id", "ID of the edge."], [6, 3, 1, "_CPPv4N3ipc17EdgeFaceCandidate7face_idE", "ipc::EdgeFaceCandidate::face_id", "ID of the face."], [6, 1, 1, "_CPPv4NK3ipc17EdgeFaceCandidateneERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeFaceCandidateneERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeFaceCandidateltERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator&lt;", "Compare EdgeFaceCandidate for sorting."], [6, 2, 2, "_CPPv4NK3ipc17EdgeFaceCandidateltERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator&lt;::other", "Compare EdgeFaceCandidate for sorting."], [6, 1, 1, "_CPPv4NK3ipc17EdgeFaceCandidateeqERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeFaceCandidateeqERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator==::other", ""], [6, 0, 1, "_CPPv4N3ipc19EdgeVertexCandidateE", "ipc::EdgeVertexCandidate", "Subclassed by ipc::EdgeVertexConstraint, ipc::EdgeVertexFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue", ""], [6, 6, 2, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue::ev", ""], [6, 2, 2, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll", "ipc::EdgeVertexCandidate::EdgeVertexCandidate", ""], [6, 2, 2, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll", "ipc::EdgeVertexCandidate::EdgeVertexCandidate::edge_id", ""], [6, 2, 2, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll", "ipc::EdgeVertexCandidate::EdgeVertexCandidate::vertex_id", ""], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::EdgeVertexCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::EdgeVertexCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::EdgeVertexCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::EdgeVertexCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::min_distance", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::EdgeVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::EdgeVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::EdgeVertexCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::EdgeVertexCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::EdgeVertexCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 3, 1, "_CPPv4N3ipc19EdgeVertexCandidate7edge_idE", "ipc::EdgeVertexCandidate::edge_id", "ID of the edge."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate12num_verticesEv", "ipc::EdgeVertexCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidateneERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidateneERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidateltERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator&lt;", "Compare EdgeVertexCandidates for sorting."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidateltERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator&lt;::other", "Compare EdgeVertexCandidates for sorting."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidateeqERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidateeqERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator==::other", ""], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::print_ccd_query", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::print_ccd_query::edges", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::print_ccd_query::faces", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::print_ccd_query::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::print_ccd_query::vertices_t1", ""], [6, 3, 1, "_CPPv4N3ipc19EdgeVertexCandidate9vertex_idE", "ipc::EdgeVertexCandidate::vertex_id", "ID of the vertex."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeVertexCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeVertexCandidate::vertex_ids::faces", "Collision mesh faces"], [8, 0, 1, "_CPPv4N3ipc20EdgeVertexConstraintE", "ipc::EdgeVertexConstraint", "Inheritence diagram for ipc::EdgeVertexConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue", ""], [8, 6, 2, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue::ev", ""], [8, 2, 2, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue::h", ""], [8, 1, 1, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexConstraint::EdgeVertexCandidate", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexConstraint::EdgeVertexCandidate::edge_id", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexConstraint::EdgeVertexCandidate::vertex_id", ""], [8, 1, 1, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintERK19EdgeVertexCandidate", "ipc::EdgeVertexConstraint::EdgeVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintERK19EdgeVertexCandidate", "ipc::EdgeVertexConstraint::EdgeVertexConstraint::candidate", ""], [11, 0, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraintE", "ipc::EdgeVertexFrictionConstraint", "Public Functions    EdgeVertexFrictionConstraint(const EdgeVertexConstraint &constraint)      EdgeVertexFrictionConstraint(const EdgeVertexConstraint &constraint, const Eigen::MatrixXd &vertices, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double dhat, const double barrier_stiffness)      template<typename T> inline T compute_potential(const MatrixX<T> &velocities, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double epsv_times_h) const      EdgeVertexCandidate(long edge_id, long vertex_id)"], [11, 1, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexFrictionConstraint::EdgeVertexCandidate", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexFrictionConstraint::EdgeVertexCandidate::edge_id", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexFrictionConstraint::EdgeVertexCandidate::vertex_id", ""], [11, 1, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraint", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraint", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4I0ENK3ipc28EdgeVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeVertexFrictionConstraint::compute_potential", ""], [11, 6, 2, "_CPPv4I0ENK3ipc28EdgeVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeVertexFrictionConstraint::compute_potential::T", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28EdgeVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeVertexFrictionConstraint::compute_potential::edges", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28EdgeVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeVertexFrictionConstraint::compute_potential::epsv_times_h", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28EdgeVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeVertexFrictionConstraint::compute_potential::faces", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28EdgeVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeVertexFrictionConstraint::compute_potential::velocities", ""], [6, 0, 1, "_CPPv4N3ipc19FaceVertexCandidateE", "ipc::FaceVertexCandidate", "Subclassed by ipc::FaceVertexConstraint, ipc::FaceVertexFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue", ""], [6, 6, 2, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue::fv", ""], [6, 2, 2, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll", "ipc::FaceVertexCandidate::FaceVertexCandidate", ""], [6, 2, 2, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll", "ipc::FaceVertexCandidate::FaceVertexCandidate::face_id", ""], [6, 2, 2, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll", "ipc::FaceVertexCandidate::FaceVertexCandidate::vertex_id", ""], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::FaceVertexCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::FaceVertexCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::FaceVertexCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::FaceVertexCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-min_distance", "ipc::FaceVertexCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::FaceVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::FaceVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::FaceVertexCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::FaceVertexCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::FaceVertexCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 3, 1, "_CPPv4N3ipc19FaceVertexCandidate7face_idE", "ipc::FaceVertexCandidate::face_id", "ID of the face."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate12num_verticesEv", "ipc::FaceVertexCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidateneERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidateneERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidateltERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator&lt;", "Compare FaceVertexCandidate for sorting."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidateltERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator&lt;::other", "Compare FaceVertexCandidate for sorting."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidateeqERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidateeqERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator==::other", ""], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::print_ccd_query", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::print_ccd_query::edges", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::print_ccd_query::faces", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::print_ccd_query::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::print_ccd_query::vertices_t1", ""], [6, 3, 1, "_CPPv4N3ipc19FaceVertexCandidate9vertex_idE", "ipc::FaceVertexCandidate::vertex_id", "ID of the vertex."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::FaceVertexCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::FaceVertexCandidate::vertex_ids::faces", "Collision mesh faces"], [8, 0, 1, "_CPPv4N3ipc20FaceVertexConstraintE", "ipc::FaceVertexConstraint", "Inheritence diagram for ipc::FaceVertexConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue", ""], [8, 6, 2, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue::fv", ""], [8, 2, 2, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue::h", ""], [8, 1, 1, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll", "ipc::FaceVertexConstraint::FaceVertexCandidate", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll", "ipc::FaceVertexConstraint::FaceVertexCandidate::face_id", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll", "ipc::FaceVertexConstraint::FaceVertexCandidate::vertex_id", ""], [8, 1, 1, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintERK19FaceVertexCandidate", "ipc::FaceVertexConstraint::FaceVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintERK19FaceVertexCandidate", "ipc::FaceVertexConstraint::FaceVertexConstraint::candidate", ""], [11, 0, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraintE", "ipc::FaceVertexFrictionConstraint", "Public Functions    FaceVertexFrictionConstraint(const FaceVertexConstraint &constraint)      FaceVertexFrictionConstraint(const FaceVertexConstraint &constraint, const Eigen::MatrixXd &vertices, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double dhat, const double barrier_stiffness)      template<typename T> inline T compute_potential(const MatrixX<T> &velocities, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double epsv_times_h) const      FaceVertexCandidate(long face_id, long vertex_id)"], [11, 1, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll", "ipc::FaceVertexFrictionConstraint::FaceVertexCandidate", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll", "ipc::FaceVertexFrictionConstraint::FaceVertexCandidate::face_id", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll", "ipc::FaceVertexFrictionConstraint::FaceVertexCandidate::vertex_id", ""], [11, 1, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraint", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraint", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4I0ENK3ipc28FaceVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FaceVertexFrictionConstraint::compute_potential", ""], [11, 6, 2, "_CPPv4I0ENK3ipc28FaceVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FaceVertexFrictionConstraint::compute_potential::T", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28FaceVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FaceVertexFrictionConstraint::compute_potential::edges", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28FaceVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FaceVertexFrictionConstraint::compute_potential::epsv_times_h", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28FaceVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FaceVertexFrictionConstraint::compute_potential::faces", ""], [11, 2, 2, "_CPPv4I0ENK3ipc28FaceVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FaceVertexFrictionConstraint::compute_potential::velocities", ""], [11, 0, 1, "_CPPv4N3ipc18FrictionConstraintE", "ipc::FrictionConstraint", "Subclassed by ipc::EdgeEdgeFrictionConstraint, ipc::EdgeVertexFrictionConstraint, ipc::FaceVertexFrictionConstraint, ipc::VertexVertexFrictionConstraint"], [11, 4, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRTE", "ipc::FrictionConstraint::DiffWRT", "Variable to differentiate the friction force with respect to."], [11, 5, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRT1UE", "ipc::FrictionConstraint::DiffWRT::U", "Differentiate wrt current displacements."], [11, 5, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRT2UtE", "ipc::FrictionConstraint::DiffWRT::Ut", "Differentiate wrt previous displacements."], [11, 5, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRT1XE", "ipc::FrictionConstraint::DiffWRT::X", "Differentiate wrt rest positions."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint13closest_pointE", "ipc::FrictionConstraint::closest_point", "Barycentric coordinates of the closest point(s)"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb", "ipc::FrictionConstraint::compute_force", "Compute the friction force."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb", "ipc::FrictionConstraint::compute_force", "Compute the friction force."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-U", "ipc::FrictionConstraint::compute_force::U", "Current displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-U", "ipc::FrictionConstraint::compute_force::U", "Current displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-Ut", "ipc::FrictionConstraint::compute_force::Ut", "Previous displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-X", "ipc::FrictionConstraint::compute_force::X", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-X", "ipc::FrictionConstraint::compute_force::X", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-barrier_stiffness", "ipc::FrictionConstraint::compute_force::barrier_stiffness", "Barrier stiffness"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-barrier_stiffness", "ipc::FrictionConstraint::compute_force::barrier_stiffness", "Barrier stiffness"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-dhat", "ipc::FrictionConstraint::compute_force::dhat", "Barrier activation distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-dhat", "ipc::FrictionConstraint::compute_force::dhat", "Barrier activation distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-dmin", "ipc::FrictionConstraint::compute_force::dmin", "Minimum distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-dmin", "ipc::FrictionConstraint::compute_force::dmin", "Minimum distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-edges", "ipc::FrictionConstraint::compute_force::edges", "Collision mesh edges"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-edges", "ipc::FrictionConstraint::compute_force::edges", "Collision mesh edges"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-epsv_times_h", "ipc::FrictionConstraint::compute_force::epsv_times_h", "$\\epsilon_vh$"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-epsv_times_h", "ipc::FrictionConstraint::compute_force::epsv_times_h", "$\\epsilon_vh$"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-faces", "ipc::FrictionConstraint::compute_force::faces", "Collision mesh faces"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-faces", "ipc::FrictionConstraint::compute_force::faces", "Collision mesh faces"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-no_mu", "ipc::FrictionConstraint::compute_force::no_mu", "Whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-no_mu", "ipc::FrictionConstraint::compute_force::no_mu", "Whether to not multiply by mu"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd", "ipc::FrictionConstraint::compute_force_jacobian", "Compute the friction force Jacobian."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd", "ipc::FrictionConstraint::compute_force_jacobian", "Compute the friction force Jacobian."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-U", "ipc::FrictionConstraint::compute_force_jacobian::U", "Current displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-U", "ipc::FrictionConstraint::compute_force_jacobian::U", "Current displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-Ut", "ipc::FrictionConstraint::compute_force_jacobian::Ut", "Previous displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-X", "ipc::FrictionConstraint::compute_force_jacobian::X", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-X", "ipc::FrictionConstraint::compute_force_jacobian::X", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-barrier_stiffness", "ipc::FrictionConstraint::compute_force_jacobian::barrier_stiffness", "Barrier stiffness"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-barrier_stiffness", "ipc::FrictionConstraint::compute_force_jacobian::barrier_stiffness", "Barrier stiffness"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-dhat", "ipc::FrictionConstraint::compute_force_jacobian::dhat", "Barrier activation distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-dhat", "ipc::FrictionConstraint::compute_force_jacobian::dhat", "Barrier activation distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-dmin", "ipc::FrictionConstraint::compute_force_jacobian::dmin", "Minimum distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-dmin", "ipc::FrictionConstraint::compute_force_jacobian::dmin", "Minimum distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-edges", "ipc::FrictionConstraint::compute_force_jacobian::edges", "Collision mesh edges"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-edges", "ipc::FrictionConstraint::compute_force_jacobian::edges", "Collision mesh edges"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-epsv_times_h", "ipc::FrictionConstraint::compute_force_jacobian::epsv_times_h", "$\\epsilon_vh$"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-epsv_times_h", "ipc::FrictionConstraint::compute_force_jacobian::epsv_times_h", "$\\epsilon_vh$"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-faces", "ipc::FrictionConstraint::compute_force_jacobian::faces", "Collision mesh faces"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-faces", "ipc::FrictionConstraint::compute_force_jacobian::faces", "Collision mesh faces"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-wrt", "ipc::FrictionConstraint::compute_force_jacobian::wrt", "Variable to differentiate the friction force with respect to."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-wrt", "ipc::FrictionConstraint::compute_force_jacobian::wrt", "Variable to differentiate the friction force with respect to."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FrictionConstraint::compute_potential_gradient", "Compute the friction dissapative potential gradient wrt velocities."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::FrictionConstraint::compute_potential_gradient::edges", "Edges of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-epsv_times_h", "ipc::FrictionConstraint::compute_potential_gradient::epsv_times_h", "$\\epsilon_vh$"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::FrictionConstraint::compute_potential_gradient::faces", "Faces of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-velocities", "ipc::FrictionConstraint::compute_potential_gradient::velocities", "Velocities of the vertices (rowwise)"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::FrictionConstraint::compute_potential_hessian", "Compute the friction dissapative potential hessian wrt velocities."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-edges", "ipc::FrictionConstraint::compute_potential_hessian::edges", "Edges of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-epsv_times_h", "ipc::FrictionConstraint::compute_potential_hessian::epsv_times_h", "$\\epsilon_vh$"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-faces", "ipc::FrictionConstraint::compute_potential_hessian::faces", "Faces of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-project_hessian_to_psd", "ipc::FrictionConstraint::compute_potential_hessian::project_hessian_to_psd", "Project the hessian to PSD"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-velocities", "ipc::FrictionConstraint::compute_potential_hessian::velocities", "Velocities of the vertices (rowwise)"], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint2muE", "ipc::FrictionConstraint::mu", "Coefficient of friction."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint22normal_force_magnitudeE", "ipc::FrictionConstraint::normal_force_magnitude", "Contact force magnitude."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint13tangent_basisE", "ipc::FrictionConstraint::tangent_basis", "Tangent basis of the contact (max size 3\u00d72)"], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint6weightE", "ipc::FrictionConstraint::weight", "Weight."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint15weight_gradientE", "ipc::FrictionConstraint::weight_gradient", "Gradient of weight with respect to all DOF."], [11, 1, 1, "_CPPv4N3ipc18FrictionConstraintD0Ev", "ipc::FrictionConstraint::~FrictionConstraint", ""], [11, 0, 1, "_CPPv4N3ipc19FrictionConstraintsE", "ipc::FrictionConstraints", "Compute the friction dissapative potential from the given velocity."], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints19FrictionConstraintsEv", "ipc::FrictionConstraints::FrictionConstraints", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::blend_mu", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::contact_constraints", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::contact_constraints", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::dhat", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::dhat", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::mesh", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::mesh", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::mu", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::mus", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::vertices", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::vertices", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints5clearEv", "ipc::FrictionConstraints::clear", "Clear the friction constraints."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force", "whether to not multiply by mu"], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::U", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::U", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::Ut", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::X", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::X", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::barrier_stiffness", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::barrier_stiffness", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::dhat", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::dhat", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::dmin", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::dmin", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::epsv_times_h", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::epsv_times_h", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::mesh", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force::mesh", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-no_mu", "ipc::FrictionConstraints::compute_force::no_mu", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-no_mu", "ipc::FrictionConstraints::compute_force::no_mu", "whether to not multiply by mu"], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian", ""], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::U", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::U", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::Ut", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::X", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::X", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::barrier_stiffness", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::barrier_stiffness", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::dhat", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::dhat", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::dmin", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::dmin", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::epsv_times_h", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::epsv_times_h", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::mesh", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::mesh", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::wrt", ""], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian::wrt", ""], [11, 1, 1, "_CPPv4I0ENK3ipc19FrictionConstraints17compute_potentialE1TRK13CollisionMeshRK7MatrixXI1TEd", "ipc::FrictionConstraints::compute_potential", "Compute the friction dissapative potential from the given velocity."], [11, 6, 2, "_CPPv4I0ENK3ipc19FrictionConstraints17compute_potentialE1TRK13CollisionMeshRK7MatrixXI1TEd", "ipc::FrictionConstraints::compute_potential::T", "Compute the friction dissapative potential from the given velocity."], [11, 2, 2, "_CPPv4I0ENK3ipc19FrictionConstraints17compute_potentialE1TRK13CollisionMeshRK7MatrixXI1TEd", "ipc::FrictionConstraints::compute_potential::epsv_times_h", "Compute the friction dissapative potential from the given velocity."], [11, 2, 2, "_CPPv4I0ENK3ipc19FrictionConstraints17compute_potentialE1TRK13CollisionMeshRK7MatrixXI1TEd-p-mesh", "ipc::FrictionConstraints::compute_potential::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4I0ENK3ipc19FrictionConstraints17compute_potentialE1TRK13CollisionMeshRK7MatrixXI1TEd-p-velocity", "ipc::FrictionConstraints::compute_potential::velocity", "Current vertex velocity (rowwise)."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEd", "ipc::FrictionConstraints::compute_potential_gradient", "Compute the gradient of the friction dissapative potential wrt the velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEd", "ipc::FrictionConstraints::compute_potential_gradient::epsv_times_h", "Compute the gradient of the friction dissapative potential wrt the velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEd-p-mesh", "ipc::FrictionConstraints::compute_potential_gradient::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEd-p-velocity", "ipc::FrictionConstraints::compute_potential_gradient::velocity", "Current vertex velocity (rowwise)."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEdb", "ipc::FrictionConstraints::compute_potential_hessian", "Compute the Hessian of the friction dissapative potential wrt the velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEdb", "ipc::FrictionConstraints::compute_potential_hessian::epsv_times_h", "Compute the Hessian of the friction dissapative potential wrt the velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEdb-p-mesh", "ipc::FrictionConstraints::compute_potential_hessian::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEdb-p-project_hessian_to_psd", "ipc::FrictionConstraints::compute_potential_hessian::project_hessian_to_psd", "If true, project the Hessian to be positive semi-definite."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEdb-p-velocity", "ipc::FrictionConstraints::compute_potential_hessian::velocity", "Current vertex velocity (rowwise)."], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd", "ipc::FrictionConstraints::default_blend_mu", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd", "ipc::FrictionConstraints::default_blend_mu::mu0", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd", "ipc::FrictionConstraints::default_blend_mu::mu1", ""], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14ee_constraintsE", "ipc::FrictionConstraints::ee_constraints", ""], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints5emptyEv", "ipc::FrictionConstraints::empty", "Get if the friction constraints are empty."], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14ev_constraintsE", "ipc::FrictionConstraints::ev_constraints", ""], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14fv_constraintsE", "ipc::FrictionConstraints::fv_constraints", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraintsixEK6size_t", "ipc::FrictionConstraints::operator[]", "Get a reference to constriant idx."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraintsixEK6size_t", "ipc::FrictionConstraints::operator[]", "Get a const reference to constriant idx."], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraintsixEK6size_t-p-idx", "ipc::FrictionConstraints::operator[]::idx", "The index of the constraint."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraintsixEK6size_t-p-idx", "ipc::FrictionConstraints::operator[]::idx", "The index of the constraint."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints4sizeEv", "ipc::FrictionConstraints::size", "Get the number of friction constraints."], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14vv_constraintsE", "ipc::FrictionConstraints::vv_constraints", ""], [5, 0, 1, "_CPPv4N3ipc8HashGridE", "ipc::HashGrid", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::HashGrid::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::HashGrid::build", "Build the broad phase for static collision detection."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::HashGrid::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::HashGrid::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::HashGrid::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::HashGrid::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::HashGrid::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::HashGrid::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::HashGrid::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::HashGrid::build::vertices_t0", "Starting vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::HashGrid::build::vertices_t1", "Ending vertices of the vertices."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid8cellSizeEv", "ipc::HashGrid::cellSize", ""], [5, 1, 1, "_CPPv4N3ipc8HashGrid5clearEv", "ipc::HashGrid::clear", "Clear the hash grid."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::HashGrid::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisisons."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::HashGrid::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::HashGrid::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisisons."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::HashGrid::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::HashGrid::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisisons."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid9domainMaxEv", "ipc::HashGrid::domainMax", ""], [5, 1, 1, "_CPPv4NK3ipc8HashGrid9domainMinEv", "ipc::HashGrid::domainMin", ""], [5, 1, 1, "_CPPv4NK3ipc8HashGrid8gridSizeEv", "ipc::HashGrid::gridSize", ""], [8, 0, 1, "_CPPv4N3ipc21PlaneVertexConstraintE", "ipc::PlaneVertexConstraint", "Inheritence diagram for ipc::PlaneVertexConstraint:"], [8, 1, 1, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint::plane_normal", ""], [8, 2, 2, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint::plane_origin", ""], [8, 2, 2, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint::vertex_id", ""], [8, 1, 1, "_CPPv4NK3ipc21PlaneVertexConstraint12num_verticesEv", "ipc::PlaneVertexConstraint::num_vertices", "Get the number of vertices in the contact stencil."], [8, 3, 1, "_CPPv4N3ipc21PlaneVertexConstraint12plane_normalE", "ipc::PlaneVertexConstraint::plane_normal", ""], [8, 3, 1, "_CPPv4N3ipc21PlaneVertexConstraint12plane_originE", "ipc::PlaneVertexConstraint::plane_origin", ""], [8, 3, 1, "_CPPv4N3ipc21PlaneVertexConstraint9vertex_idE", "ipc::PlaneVertexConstraint::vertex_id", ""], [8, 1, 1, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::PlaneVertexConstraint::vertex_ids", "Get the vertex IDs of the contact stencil."], [8, 2, 2, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::PlaneVertexConstraint::vertex_ids::edges", "Collision mesh edges"], [8, 2, 2, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::PlaneVertexConstraint::vertex_ids::faces", "Collision mesh faces"], [10, 4, 1, "_CPPv4N3ipc21PointEdgeDistanceTypeE", "ipc::PointEdgeDistanceType", "Closest pair between a point and edge."], [10, 5, 1, "_CPPv4N3ipc21PointEdgeDistanceType4AUTOE", "ipc::PointEdgeDistanceType::AUTO", "Automatically determine the closest pair."], [10, 5, 1, "_CPPv4N3ipc21PointEdgeDistanceType3P_EE", "ipc::PointEdgeDistanceType::P_E", "The point is closest to the interior of the edge."], [10, 5, 1, "_CPPv4N3ipc21PointEdgeDistanceType4P_E0E", "ipc::PointEdgeDistanceType::P_E0", "The point is closest to edge vertex zero."], [10, 5, 1, "_CPPv4N3ipc21PointEdgeDistanceType4P_E1E", "ipc::PointEdgeDistanceType::P_E1", "The point is closest to edge vertex one."], [10, 4, 1, "_CPPv4N3ipc25PointTriangleDistanceTypeE", "ipc::PointTriangleDistanceType", "Closest pair between a point and triangle."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType4AUTOE", "ipc::PointTriangleDistanceType::AUTO", "Automatically determine the closest pair."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E0E", "ipc::PointTriangleDistanceType::P_E0", "The point is closest to triangle edge zero (vertex zero to one)."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E1E", "ipc::PointTriangleDistanceType::P_E1", "The point is closest to triangle edge one (vertex one to two)."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E2E", "ipc::PointTriangleDistanceType::P_E2", "The point is closest to triangle edge two (vertex two to zero)."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType3P_TE", "ipc::PointTriangleDistanceType::P_T", "The point is closest to the interior of the triangle."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T0E", "ipc::PointTriangleDistanceType::P_T0", "The point is closest to triangle vertex zero."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T1E", "ipc::PointTriangleDistanceType::P_T1", "The point is closest to triangle vertex one."], [10, 5, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T2E", "ipc::PointTriangleDistanceType::P_T2", "The point is closest to triangle vertex two."], [5, 0, 1, "_CPPv4N3ipc11SpatialHashE", "ipc::SpatialHash", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash11SpatialHashEv", "ipc::SpatialHash::SpatialHash", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::vertices", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::vertices_t0", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::vertices_t1", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::voxelSize", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::voxelSize", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SpatialHash::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SpatialHash::build", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SpatialHash::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SpatialHash::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SpatialHash::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SpatialHash::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SpatialHash::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SpatialHash::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::SpatialHash::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::vertices", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::SpatialHash::build::vertices_t0", "Starting vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::vertices_t0", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::SpatialHash::build::vertices_t1", "Ending vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::vertices_t1", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::voxelSize", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::voxelSize", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5clearEv", "ipc::SpatialHash::clear", "Clear any built data."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::SpatialHash::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::SpatialHash::detect_edge_edge_candidates::candidates", "Find the candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::SpatialHash::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::SpatialHash::detect_edge_face_candidates::candidates", "Find the candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::SpatialHash::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::SpatialHash::detect_edge_vertex_candidates::candidates", "Find the candidate edge-vertex collisisons."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::SpatialHash::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::SpatialHash::detect_face_vertex_candidates::candidates", "Find the candidate face-vertex collisions."], [5, 3, 1, "_CPPv4N3ipc11SpatialHash12edgeStartIndE", "ipc::SpatialHash::edgeStartInd", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash16leftBottomCornerE", "ipc::SpatialHash::leftBottomCorner", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash17one_div_voxelSizeE", "ipc::SpatialHash::one_div_voxelSize", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash21pointAndEdgeOccupancyE", "ipc::SpatialHash::pointAndEdgeOccupancy", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdges", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::ea0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::ea0_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::ea0_t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::ea1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::ea1_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::ea1_t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::eai", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::eai", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdges::eai", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdges::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdges::radius", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::ea0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::ea1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::eai", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::eai", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::edges", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::edges", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::vertices", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::vertices_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForEdgesWithBBoxCheck::vertices_t1", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash14queryEdgeForPEERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEERNSt6vectorIiEEd", "ipc::SpatialHash::queryEdgeForPE", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash14queryEdgeForPEERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEERNSt6vectorIiEEd", "ipc::SpatialHash::queryEdgeForPE::e0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash14queryEdgeForPEERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEERNSt6vectorIiEEd", "ipc::SpatialHash::queryEdgeForPE::e1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash14queryEdgeForPEERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEERNSt6vectorIiEEd", "ipc::SpatialHash::queryEdgeForPE::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash14queryEdgeForPEERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEERNSt6vectorIiEEd", "ipc::SpatialHash::queryEdgeForPE::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash14queryEdgeForPEERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEERNSt6vectorIiEEd", "ipc::SpatialHash::queryEdgeForPE::vertInds", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryEdgeForTriangles", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForTriangles", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryEdgeForTriangles::e0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryEdgeForTriangles::e1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForTriangles::ei", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryEdgeForTriangles::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryEdgeForTriangles::triInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesEiR13unordered_setIiE", "ipc::SpatialHash::queryEdgeForTriangles::triInds", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash18queryPointForEdgesEiR13unordered_setIiE", "ipc::SpatialHash::queryPointForEdges", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash18queryPointForEdgesEiR13unordered_setIiE", "ipc::SpatialHash::queryPointForEdges::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash18queryPointForEdgesEiR13unordered_setIiE", "ipc::SpatialHash::queryPointForEdges::vi", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd", "ipc::SpatialHash::queryPointForPrimitives", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesEiR13unordered_setIiER13unordered_setIiER13unordered_setIiE", "ipc::SpatialHash::queryPointForPrimitives", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd", "ipc::SpatialHash::queryPointForPrimitives::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesEiR13unordered_setIiER13unordered_setIiER13unordered_setIiE", "ipc::SpatialHash::queryPointForPrimitives::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd", "ipc::SpatialHash::queryPointForPrimitives::p_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd", "ipc::SpatialHash::queryPointForPrimitives::p_t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd", "ipc::SpatialHash::queryPointForPrimitives::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd", "ipc::SpatialHash::queryPointForPrimitives::triInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesEiR13unordered_setIiER13unordered_setIiER13unordered_setIiE", "ipc::SpatialHash::queryPointForPrimitives::triInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd", "ipc::SpatialHash::queryPointForPrimitives::vertInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesEiR13unordered_setIiER13unordered_setIiER13unordered_setIiE", "ipc::SpatialHash::queryPointForPrimitives::vertInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesEiR13unordered_setIiER13unordered_setIiER13unordered_setIiE", "ipc::SpatialHash::queryPointForPrimitives::vi", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesEiR13unordered_setIiE", "ipc::SpatialHash::queryPointForTriangles", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles::p", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles::p_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles::p_t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles::triInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryPointForTriangles::triInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesEiR13unordered_setIiE", "ipc::SpatialHash::queryPointForTriangles::triInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesEiR13unordered_setIiE", "ipc::SpatialHash::queryPointForTriangles::vi", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash21queryTriangleForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForEdges", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryTriangleForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForEdges::edgeInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryTriangleForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForEdges::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryTriangleForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForEdges::t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryTriangleForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForEdges::t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21queryTriangleForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForEdges::t2", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::pointInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::pointInds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t0_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t0_t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t1_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t1_t1", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t2", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t2_t0", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd", "ipc::SpatialHash::queryTriangleForPoints::t2_t1", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash14rightTopCornerE", "ipc::SpatialHash::rightTopCorner", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash11triStartIndE", "ipc::SpatialHash::triStartInd", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash5voxelE", "ipc::SpatialHash::voxel", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash10voxelCountE", "ipc::SpatialHash::voxelCount", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash13voxelCount0x1E", "ipc::SpatialHash::voxelCount0x1", ""], [5, 0, 1, "_CPPv4N3ipc20SweepAndTiniestQueueE", "ipc::SweepAndTiniestQueue", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SweepAndTiniestQueue::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SweepAndTiniestQueue::build", "Build the broad phase for static collision detection."], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SweepAndTiniestQueue::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SweepAndTiniestQueue::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SweepAndTiniestQueue::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SweepAndTiniestQueue::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SweepAndTiniestQueue::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SweepAndTiniestQueue::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::SweepAndTiniestQueue::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::SweepAndTiniestQueue::build::vertices_t0", "Starting vertex positions"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::SweepAndTiniestQueue::build::vertices_t1", "Ending vertex positions"], [5, 1, 1, "_CPPv4N3ipc20SweepAndTiniestQueue5clearEv", "ipc::SweepAndTiniestQueue::clear", "Clear any built data."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::SweepAndTiniestQueue::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisisons."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::SweepAndTiniestQueue::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::SweepAndTiniestQueue::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisisons."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::SweepAndTiniestQueue::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisisons."], [6, 0, 1, "_CPPv4N3ipc21VertexVertexCandidateE", "ipc::VertexVertexCandidate", "Subclassed by ipc::VertexVertexConstraint, ipc::VertexVertexFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue", ""], [6, 6, 2, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue::h", ""], [6, 2, 2, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue::vv", ""], [6, 1, 1, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll", "ipc::VertexVertexCandidate::VertexVertexCandidate", ""], [6, 2, 2, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll", "ipc::VertexVertexCandidate::VertexVertexCandidate::vertex0_id", ""], [6, 2, 2, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll", "ipc::VertexVertexCandidate::VertexVertexCandidate::vertex1_id", ""], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate12num_verticesEv", "ipc::VertexVertexCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidateneERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidateneERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidateltERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator&lt;", "Compare EdgeVertexCandidates for sorting."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidateltERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator&lt;::other", "Compare EdgeVertexCandidates for sorting."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidateeqERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidateeqERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator==::other", ""], [6, 3, 1, "_CPPv4N3ipc21VertexVertexCandidate10vertex0_idE", "ipc::VertexVertexCandidate::vertex0_id", "ID of the first vertex."], [6, 3, 1, "_CPPv4N3ipc21VertexVertexCandidate10vertex1_idE", "ipc::VertexVertexCandidate::vertex1_id", "ID of the second vertex."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::VertexVertexCandidate::vertex_ids", "Get the indices of the vertices."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::VertexVertexCandidate::vertex_ids::edges", "edge matrix of mesh"], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::VertexVertexCandidate::vertex_ids::faces", "face matrix of mesh"], [8, 0, 1, "_CPPv4N3ipc22VertexVertexConstraintE", "ipc::VertexVertexConstraint", "Inheritence diagram for ipc::VertexVertexConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue", ""], [8, 6, 2, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue::h", ""], [8, 2, 2, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue::vv", ""], [8, 1, 1, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll", "ipc::VertexVertexConstraint::VertexVertexCandidate", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll", "ipc::VertexVertexConstraint::VertexVertexCandidate::vertex0_id", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll", "ipc::VertexVertexConstraint::VertexVertexCandidate::vertex1_id", ""], [8, 1, 1, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintERK21VertexVertexCandidate", "ipc::VertexVertexConstraint::VertexVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintERK21VertexVertexCandidate", "ipc::VertexVertexConstraint::VertexVertexConstraint::candidate", ""], [11, 0, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraintE", "ipc::VertexVertexFrictionConstraint", "Public Functions    VertexVertexFrictionConstraint(const VertexVertexConstraint &constraint)      VertexVertexFrictionConstraint(const VertexVertexConstraint &constraint, const Eigen::MatrixXd &vertices, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double dhat, const double barrier_stiffness)      template<typename T> inline T compute_potential(const MatrixX<T> &velocities, const Eigen::MatrixXi &edges, const Eigen::MatrixXi &faces, const double epsv_times_h) const      VertexVertexCandidate(long vertex0_id, long vertex1_id)"], [11, 1, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll", "ipc::VertexVertexFrictionConstraint::VertexVertexCandidate", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll", "ipc::VertexVertexFrictionConstraint::VertexVertexCandidate::vertex0_id", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll", "ipc::VertexVertexFrictionConstraint::VertexVertexCandidate::vertex1_id", ""], [11, 1, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraint", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraint", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4I0ENK3ipc30VertexVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::VertexVertexFrictionConstraint::compute_potential", ""], [11, 6, 2, "_CPPv4I0ENK3ipc30VertexVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::VertexVertexFrictionConstraint::compute_potential::T", ""], [11, 2, 2, "_CPPv4I0ENK3ipc30VertexVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::VertexVertexFrictionConstraint::compute_potential::edges", ""], [11, 2, 2, "_CPPv4I0ENK3ipc30VertexVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::VertexVertexFrictionConstraint::compute_potential::epsv_times_h", ""], [11, 2, 2, "_CPPv4I0ENK3ipc30VertexVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::VertexVertexFrictionConstraint::compute_potential::faces", ""], [11, 2, 2, "_CPPv4I0ENK3ipc30VertexVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::VertexVertexFrictionConstraint::compute_potential::velocities", ""], [4, 1, 1, "_CPPv4I0EN3ipc7barrierE1TRK1TKd", "ipc::barrier", "Function that grows to infinity as x approaches 0 from the right."], [4, 6, 2, "_CPPv4I0EN3ipc7barrierE1TRK1TKd", "ipc::barrier::T", "Function that grows to infinity as x approaches 0 from the right."], [4, 2, 2, "_CPPv4I0EN3ipc7barrierE1TRK1TKd-p-d", "ipc::barrier::d", "The distance."], [4, 2, 2, "_CPPv4I0EN3ipc7barrierE1TRK1TKd-p-dhat", "ipc::barrier::dhat", "Activation distance of the barrier."], [4, 1, 1, "_CPPv4N3ipc16barrier_gradientEKdKd", "ipc::barrier_gradient", "Derivative of the barrier function."], [4, 2, 2, "_CPPv4N3ipc16barrier_gradientEKdKd-p-d", "ipc::barrier_gradient::d", "The distance."], [4, 2, 2, "_CPPv4N3ipc16barrier_gradientEKdKd-p-dhat", "ipc::barrier_gradient::dhat", "Activation distance of the barrier."], [4, 1, 1, "_CPPv4N3ipc15barrier_hessianEKdKd", "ipc::barrier_hessian", "Second derivative of the barrier function."], [4, 2, 2, "_CPPv4N3ipc15barrier_hessianEKdKd-p-d", "ipc::barrier_hessian::d", "The distance."], [4, 2, 2, "_CPPv4N3ipc15barrier_hessianEKdKd-p-dhat", "ipc::barrier_hessian::dhat", "Activation distance of the barrier."], [7, 1, 1, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl", "ipc::compute_collision_free_stepsize", "Computes a maximal step size that is collision free."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-broad_phase_method", "ipc::compute_collision_free_stepsize::broad_phase_method", "The broad phase method to use."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-max_iterations", "ipc::compute_collision_free_stepsize::max_iterations", "The maximum number of iterations for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-mesh", "ipc::compute_collision_free_stepsize::mesh", "The collision mesh."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-min_distance", "ipc::compute_collision_free_stepsize::min_distance", "The minimum distance allowable between any two elements."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-tolerance", "ipc::compute_collision_free_stepsize::tolerance", "The tolerance for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t0", "ipc::compute_collision_free_stepsize::vertices_t0", "Vertex vertices at start as rows of a matrix."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t1", "ipc::compute_collision_free_stepsize::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [11, 1, 1, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::dhat", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::distance_squared", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::dmin", ""], [11, 1, 1, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::dhat", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::distance_squared", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::distance_squared_gradient", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::dmin", ""], [11, 1, 1, "_CPPv4I0EN3ipc22df1_x_minus_f1_over_x3E1TRK1TKd", "ipc::df1_x_minus_f1_over_x3", "The derivative of f1 times x minus f1 all divided by x cubed."], [11, 6, 2, "_CPPv4I0EN3ipc22df1_x_minus_f1_over_x3E1TRK1TKd", "ipc::df1_x_minus_f1_over_x3::T", "The derivative of f1 times x minus f1 all divided by x cubed."], [11, 2, 2, "_CPPv4I0EN3ipc22df1_x_minus_f1_over_x3E1TRK1TKd-p-epsv_times_h", "ipc::df1_x_minus_f1_over_x3::epsv_times_h", "Mollifier parameter \\epsilon_v h."], [11, 2, 2, "_CPPv4I0EN3ipc22df1_x_minus_f1_over_x3E1TRK1TKd-p-x", "ipc::df1_x_minus_f1_over_x3::x", "The tangential relative speed."], [7, 1, 1, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::conservative_rescaling", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::ea0_t0", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::ea0_t1", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::ea1_t0", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::ea1_t1", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::eb0_t0", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::eb0_t1", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::eb1_t0", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::eb1_t1", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::max_iterations", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::min_distance", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::tmax", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::toi", ""], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd::tolerance", ""], [10, 1, 1, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm", "Compute the squared norm of the edge-edge cross product."], [10, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEA0", "Compute the squared norm of the edge-edge cross product."], [10, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEA1", "Compute the squared norm of the edge-edge cross product."], [10, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEB0", "Compute the squared norm of the edge-edge cross product."], [10, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEB1", "Compute the squared norm of the edge-edge cross product."], [10, 2, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0", "ipc::edge_edge_cross_squarednorm::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1", "ipc::edge_edge_cross_squarednorm::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb0", "ipc::edge_edge_cross_squarednorm::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb1", "ipc::edge_edge_cross_squarednorm::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient", "Compute the gradient of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEA0", "Compute the gradient of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEA1", "Compute the gradient of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEB0", "Compute the gradient of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEB1", "Compute the gradient of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedGrad", "Compute the gradient of the squared norm of the edge cross product."], [10, 2, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea0", "ipc::edge_edge_cross_squarednorm_gradient::ea0", "[in] The first vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea1", "ipc::edge_edge_cross_squarednorm_gradient::ea1", "[in] The second vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb0", "ipc::edge_edge_cross_squarednorm_gradient::eb0", "[in] The first vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb1", "ipc::edge_edge_cross_squarednorm_gradient::eb1", "[in] The second vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::edge_edge_cross_squarednorm_gradient::grad", "[out] The gradient of the squared norm of the edge cross product wrt ea0, ea1, eb0, and eb1."], [10, 1, 1, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian", "Compute the hessian of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEA0", "Compute the hessian of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEA1", "Compute the hessian of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEB0", "Compute the hessian of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEB1", "Compute the hessian of the squared norm of the edge cross product."], [10, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedHess", "Compute the hessian of the squared norm of the edge cross product."], [10, 2, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea0", "ipc::edge_edge_cross_squarednorm_hessian::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea1", "ipc::edge_edge_cross_squarednorm_hessian::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb0", "ipc::edge_edge_cross_squarednorm_hessian::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb1", "ipc::edge_edge_cross_squarednorm_hessian::eb1", "The second vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::edge_edge_cross_squarednorm_hessian::hess", "[out] The hessian of the squared norm of the edge cross product wrt ea0, ea1, eb0, and eb1."], [10, 1, 1, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType", "ipc::edge_edge_distance", "Compute the distance between a two lines segments in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType", "ipc::edge_edge_distance::DerivedEA0", "Compute the distance between a two lines segments in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType", "ipc::edge_edge_distance::DerivedEA1", "Compute the distance between a two lines segments in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType", "ipc::edge_edge_distance::DerivedEB0", "Compute the distance between a two lines segments in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType", "ipc::edge_edge_distance::DerivedEB1", "Compute the distance between a two lines segments in 3D."], [10, 2, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance::dtype", "The point edge distance type to compute."], [10, 2, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_gradient::DerivedEA0", "Compute the gradient of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_gradient::DerivedEA1", "Compute the gradient of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_gradient::DerivedEB0", "Compute the gradient of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_gradient::DerivedEB1", "Compute the gradient of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a two lines segments."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance_gradient::dtype", "[in] The point edge distance type to compute."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance_gradient::ea0", "[in] The first vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance_gradient::ea1", "[in] The second vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance_gradient::eb0", "[in] The first vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance_gradient::eb1", "[in] The second vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType-p-grad", "ipc::edge_edge_distance_gradient::grad", "[out] The gradient of the distance wrt ea0, ea1, eb0, and eb1."], [10, 1, 1, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_hessian::DerivedEA0", "Compute the hessian of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_hessian::DerivedEA1", "Compute the hessian of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_hessian::DerivedEB0", "Compute the hessian of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_hessian::DerivedEB1", "Compute the hessian of the distance between a two lines segments."], [10, 6, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_hessian::DerivedHess", "Compute the hessian of the distance between a two lines segments."], [10, 2, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance_hessian::dtype", "[in] The point edge distance type to compute."], [10, 2, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance_hessian::ea0", "[in] The first vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance_hessian::ea1", "[in] The second vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance_hessian::eb0", "[in] The first vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance_hessian::eb1", "[in] The second vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType-p-hess", "ipc::edge_edge_distance_hessian::hess", "[out] The hessian of the distance wrt ea0, ea1, eb0, and eb1."], [10, 1, 1, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type", "Determine the closest pair between two edges."], [10, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEA0", "Determine the closest pair between two edges."], [10, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEA1", "Determine the closest pair between two edges."], [10, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEB0", "Determine the closest pair between two edges."], [10, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEB1", "Determine the closest pair between two edges."], [10, 2, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0", "ipc::edge_edge_distance_type::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1", "ipc::edge_edge_distance_type::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb0", "ipc::edge_edge_distance_type::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb1", "ipc::edge_edge_distance_type::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier", "Compute a mollifier for the edge-edge distance."], [10, 1, 1, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td", "ipc::edge_edge_mollifier", "Mollifier function for edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEA0", "Compute a mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEA1", "Compute a mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEB0", "Compute a mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEB1", "Compute a mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td", "ipc::edge_edge_mollifier::T", "Mollifier function for edge-edge distance."], [10, 2, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-ea0", "ipc::edge_edge_mollifier::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-ea1", "ipc::edge_edge_mollifier::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-eb0", "ipc::edge_edge_mollifier::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-eb1", "ipc::edge_edge_mollifier::eb1", "The second vertex of the second edge."], [10, 2, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td-p-x", "ipc::edge_edge_mollifier::x", "Squared norm of the edge-edge cross product."], [10, 1, 1, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient", "Compute the gradient of the mollifier for the edge-edge distance."], [10, 1, 1, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td", "ipc::edge_edge_mollifier_gradient", "The gradient of the mollifier function for edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEA0", "Compute the gradient of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEA1", "Compute the gradient of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEB0", "Compute the gradient of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEB1", "Compute the gradient of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedGrad", "Compute the gradient of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td", "ipc::edge_edge_mollifier_gradient::T", "The gradient of the mollifier function for edge-edge distance."], [10, 2, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea0", "ipc::edge_edge_mollifier_gradient::ea0", "[in] The first vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea1", "ipc::edge_edge_mollifier_gradient::ea1", "[in] The second vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb0", "ipc::edge_edge_mollifier_gradient::eb0", "[in] The first vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb1", "ipc::edge_edge_mollifier_gradient::eb1", "[in] The second vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::edge_edge_mollifier_gradient::grad", "[out] The gradient of the mollifier."], [10, 2, 2, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td-p-x", "ipc::edge_edge_mollifier_gradient::x", "Squared norm of the edge-edge cross product."], [10, 1, 1, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian", "Compute the hessian of the mollifier for the edge-edge distance."], [10, 1, 1, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td", "ipc::edge_edge_mollifier_hessian", "The hessian of the mollifier function for edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEA0", "Compute the hessian of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEA1", "Compute the hessian of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEB0", "Compute the hessian of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEB1", "Compute the hessian of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedHess", "Compute the hessian of the mollifier for the edge-edge distance."], [10, 6, 2, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td", "ipc::edge_edge_mollifier_hessian::T", "The hessian of the mollifier function for edge-edge distance."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea0", "ipc::edge_edge_mollifier_hessian::ea0", "[in] The first vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea1", "ipc::edge_edge_mollifier_hessian::ea1", "[in] The second vertex of the first edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb0", "ipc::edge_edge_mollifier_hessian::eb0", "[in] The first vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb1", "ipc::edge_edge_mollifier_hessian::eb1", "[in] The second vertex of the second edge."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::edge_edge_mollifier_hessian::hess", "[out] The hessian of the mollifier."], [10, 2, 2, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td-p-x", "ipc::edge_edge_mollifier_hessian::x", "Squared norm of the edge-edge cross product."], [10, 1, 1, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold", "Compute the threshold of the mollifier edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEA0", "Compute the threshold of the mollifier edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEA1", "Compute the threshold of the mollifier edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEB0", "Compute the threshold of the mollifier edge-edge distance."], [10, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEB1", "Compute the threshold of the mollifier edge-edge distance."], [10, 2, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0_rest", "ipc::edge_edge_mollifier_threshold::ea0_rest", "The rest position of the first vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1_rest", "ipc::edge_edge_mollifier_threshold::ea1_rest", "The rest position of the second vertex of the first edge."], [10, 2, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb0_rest", "ipc::edge_edge_mollifier_threshold::eb0_rest", "The rest position of the first vertex of the second edge."], [10, 2, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb1_rest", "ipc::edge_edge_mollifier_threshold::eb1_rest", "The rest position of the second vertex of the second edge."], [11, 1, 1, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity", "Compute the relative velocity of the edges."], [11, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity::DerivedCoords", "Compute the relative velocity of the edges."], [11, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity::DerivedDEA0", "Compute the relative velocity of the edges."], [11, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity::DerivedDEA1", "Compute the relative velocity of the edges."], [11, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity::DerivedDEB0", "Compute the relative velocity of the edges."], [11, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity::DerivedDEB1", "Compute the relative velocity of the edges."], [11, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-coords", "ipc::edge_edge_relative_velocity::coords", "Two parametric coordinates of the closest points on the edges"], [11, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-dea0", "ipc::edge_edge_relative_velocity::dea0", "Velocity of the first endpoint of the first edge"], [11, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-dea1", "ipc::edge_edge_relative_velocity::dea1", "Velocity of the second endpoint of the first edge"], [11, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-deb0", "ipc::edge_edge_relative_velocity::deb0", "Velocity of the first endpoint of the second edge"], [11, 2, 2, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-deb1", "ipc::edge_edge_relative_velocity::deb1", "Velocity of the second endpoint of the second edge"], [11, 1, 1, "_CPPv4I00EN3ipc34edge_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix", ""], [11, 6, 2, "_CPPv4I00EN3ipc34edge_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix::DerivedCoords", ""], [11, 6, 2, "_CPPv4I00EN3ipc34edge_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix::T", ""], [11, 2, 2, "_CPPv4I00EN3ipc34edge_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix::coords", ""], [11, 2, 2, "_CPPv4I00EN3ipc34edge_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix::dim", ""], [11, 1, 1, "_CPPv4I00EN3ipc43edge_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix_jacobian", ""], [11, 6, 2, "_CPPv4I00EN3ipc43edge_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix_jacobian::DerivedCoords", ""], [11, 6, 2, "_CPPv4I00EN3ipc43edge_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix_jacobian::T", ""], [11, 2, 2, "_CPPv4I00EN3ipc43edge_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix_jacobian::coords", ""], [11, 2, 2, "_CPPv4I00EN3ipc43edge_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::edge_edge_relative_velocity_matrix_jacobian::dim", ""], [11, 1, 1, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis", "Compute a basis for the space tangent to the edge-edge pair."], [11, 6, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::DerivedEA0", "Compute a basis for the space tangent to the edge-edge pair."], [11, 6, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::DerivedEA1", "Compute a basis for the space tangent to the edge-edge pair."], [11, 6, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::DerivedEB0", "Compute a basis for the space tangent to the edge-edge pair."], [11, 6, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::DerivedEB1", "Compute a basis for the space tangent to the edge-edge pair."], [11, 6, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::T", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::ea0", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::ea1", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::eb0", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis::eb1", "Compute a basis for the space tangent to the edge-edge pair."], [11, 1, 1, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian", ""], [11, 6, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::DerivedEA0", ""], [11, 6, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::DerivedEA1", ""], [11, 6, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::DerivedEB0", ""], [11, 6, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::DerivedEB1", ""], [11, 2, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::ea0", ""], [11, 2, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::ea1", ""], [11, 2, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::eb0", ""], [11, 2, 2, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_tangent_basis_jacobian::eb1", ""], [11, 1, 1, "_CPPv4I0EN3ipc5f0_SFE1TRK1TKd", "ipc::f0_SF", "Smooth friction mollifier function."], [11, 6, 2, "_CPPv4I0EN3ipc5f0_SFE1TRK1TKd", "ipc::f0_SF::T", "Smooth friction mollifier function."], [11, 2, 2, "_CPPv4I0EN3ipc5f0_SFE1TRK1TKd-p-epsv_times_h", "ipc::f0_SF::epsv_times_h", "Mollifier parameter \\epsilon_v h."], [11, 2, 2, "_CPPv4I0EN3ipc5f0_SFE1TRK1TKd-p-x", "ipc::f0_SF::x", "The tangential relative speed."], [11, 1, 1, "_CPPv4I0EN3ipc12f1_SF_over_xE1TRK1TKd", "ipc::f1_SF_over_x", "Compute the derivative of f0_SF divided by x ( \\frac{f_0'(x)}{x})."], [11, 6, 2, "_CPPv4I0EN3ipc12f1_SF_over_xE1TRK1TKd", "ipc::f1_SF_over_x::T", "Compute the derivative of f0_SF divided by x ( \\frac{f_0'(x)}{x})."], [11, 2, 2, "_CPPv4I0EN3ipc12f1_SF_over_xE1TRK1TKd-p-epsv_times_h", "ipc::f1_SF_over_x::epsv_times_h", "Mollifier parameter \\epsilon_v h."], [11, 2, 2, "_CPPv4I0EN3ipc12f1_SF_over_xE1TRK1TKd-p-x", "ipc::f1_SF_over_x::x", "The tangential relative speed."], [12, 1, 1, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod", "ipc::has_intersections", "Determine if the mesh has self intersections."], [12, 2, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-broad_phase_method", "ipc::has_intersections::broad_phase_method", "The broad phase method to use."], [12, 2, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-mesh", "ipc::has_intersections::mesh", "The collision mesh."], [12, 2, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-vertices", "ipc::has_intersections::vertices", "Vertices of the collision mesh."], [4, 1, 1, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd", "ipc::initial_barrier_stiffness", "Compute an inital barrier stiffness using the barrier potential gradient."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-average_mass", "ipc::initial_barrier_stiffness::average_mass", "[in] Average mass of all bodies."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-bbox_diagonal", "ipc::initial_barrier_stiffness::bbox_diagonal", "[in] Length of the diagonal of the bounding box of the scene."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-dhat", "ipc::initial_barrier_stiffness::dhat", "[in] Activation distance of the barrier."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-dmin", "ipc::initial_barrier_stiffness::dmin", "[in] Minimum distance between elements."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-grad_barrier", "ipc::initial_barrier_stiffness::grad_barrier", "[in] Gradient of the barrier potential."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-grad_energy", "ipc::initial_barrier_stiffness::grad_energy", "[in] Gradient of the elasticity energy function."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-max_barrier_stiffness", "ipc::initial_barrier_stiffness::max_barrier_stiffness", "[out] Maximum stiffness of the barrier."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-min_barrier_stiffness_scale", "ipc::initial_barrier_stiffness::min_barrier_stiffness_scale", "[in] Scale used to premultiply the minimum barrier stiffness."], [7, 1, 1, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl", "ipc::is_step_collision_free", "Determine if the step is collision free."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-broad_phase_method", "ipc::is_step_collision_free::broad_phase_method", "The broad phase method to use."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-max_iterations", "ipc::is_step_collision_free::max_iterations", "The maximum number of iterations for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-mesh", "ipc::is_step_collision_free::mesh", "The collision mesh."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-min_distance", "ipc::is_step_collision_free::min_distance", "The minimum distance allowable between any two elements."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-tolerance", "ipc::is_step_collision_free::tolerance", "The tolerance for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t0", "ipc::is_step_collision_free::vertices_t0", "Surface vertex vertices at start as rows of a matrix."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t1", "ipc::is_step_collision_free::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [10, 1, 1, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance", "Compute the distance between a two infinite lines in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEA0", "Compute the distance between a two infinite lines in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEA1", "Compute the distance between a two infinite lines in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEB0", "Compute the distance between a two infinite lines in 3D."], [10, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEB1", "Compute the distance between a two infinite lines in 3D."], [10, 2, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0", "ipc::line_line_distance::ea0", "The first vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1", "ipc::line_line_distance::ea1", "The second vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::eb0", "Compute the distance between a two infinite lines in 3D."], [10, 2, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::eb1", "Compute the distance between a two infinite lines in 3D."], [10, 1, 1, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient", "Compute the gradient of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEA0", "Compute the gradient of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEA1", "Compute the gradient of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEB0", "Compute the gradient of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEB1", "Compute the gradient of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea0", "ipc::line_line_distance_gradient::ea0", "[in] The first vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea1", "ipc::line_line_distance_gradient::ea1", "[in] The second vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::eb0", "Compute the gradient of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::eb1", "Compute the gradient of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::line_line_distance_gradient::grad", "[out] The gradient of the distance wrt ea0, ea1, eb0, and eb1."], [10, 1, 1, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian", "Compute the hessian of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEA0", "Compute the hessian of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEA1", "Compute the hessian of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEB0", "Compute the hessian of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEB1", "Compute the hessian of the distance between a two lines in 3D."], [10, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedHess", "Compute the hessian of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea0", "ipc::line_line_distance_hessian::ea0", "[in] The first vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea1", "ipc::line_line_distance_hessian::ea1", "[in] The second vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::eb0", "Compute the hessian of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::eb1", "Compute the hessian of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::line_line_distance_hessian::hess", "[out] The hessian of the distance wrt ea0, ea1, eb0, and eb1."], [7, 1, 1, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::conservative_rescaling", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::e0_t0", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::e0_t1", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::e1_t0", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::e1_t1", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::max_iterations", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::min_distance", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::p_t0", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::p_t1", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::tmax", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::toi", ""], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd::tolerance", ""], [10, 1, 1, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType", "ipc::point_edge_distance", "Compute the distance between a point and edge in 2D or 3D."], [10, 6, 2, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType", "ipc::point_edge_distance::DerivedE0", "Compute the distance between a point and edge in 2D or 3D."], [10, 6, 2, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType", "ipc::point_edge_distance::DerivedE1", "Compute the distance between a point and edge in 2D or 3D."], [10, 6, 2, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType", "ipc::point_edge_distance::DerivedP", "Compute the distance between a point and edge in 2D or 3D."], [10, 2, 2, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance::dtype", "[in] The point edge distance type to compute."], [10, 2, 2, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance::e0", "[in] The first vertex of the edge."], [10, 2, 2, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance::e1", "[in] The second vertex of the edge."], [10, 2, 2, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance::p", "[in] The point."], [10, 1, 1, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType", "ipc::point_edge_distance_gradient", "Compute the gradient of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType", "ipc::point_edge_distance_gradient::DerivedE0", "Compute the gradient of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType", "ipc::point_edge_distance_gradient::DerivedE1", "Compute the gradient of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType", "ipc::point_edge_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType", "ipc::point_edge_distance_gradient::DerivedP", "Compute the gradient of the distance between a point and edge."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance_gradient::dtype", "[in] The point edge distance type to compute."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance_gradient::e0", "[in] The first vertex of the edge."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance_gradient::e1", "[in] The second vertex of the edge."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType-p-grad", "ipc::point_edge_distance_gradient::grad", "[out] The gradient of the distance wrt p, e0, and e1."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance_gradient::p", "[in] The point."], [10, 1, 1, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType", "ipc::point_edge_distance_hessian", "Compute the hessian of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType", "ipc::point_edge_distance_hessian::DerivedE0", "Compute the hessian of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType", "ipc::point_edge_distance_hessian::DerivedE1", "Compute the hessian of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType", "ipc::point_edge_distance_hessian::DerivedHess", "Compute the hessian of the distance between a point and edge."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType", "ipc::point_edge_distance_hessian::DerivedP", "Compute the hessian of the distance between a point and edge."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance_hessian::dtype", "[in] The point edge distance type to compute."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance_hessian::e0", "[in] The first vertex of the edge."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance_hessian::e1", "[in] The second vertex of the edge."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType-p-hess", "ipc::point_edge_distance_hessian::hess", "[out] The hessian of the distance wrt p, e0, and e1."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance_hessian::p", "[in] The point."], [10, 1, 1, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type", "Determine the closest pair between a point and edge."], [10, 6, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type::DerivedE0", "Determine the closest pair between a point and edge."], [10, 6, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type::DerivedE1", "Determine the closest pair between a point and edge."], [10, 6, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type::DerivedP", "Determine the closest pair between a point and edge."], [10, 2, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e0", "ipc::point_edge_distance_type::e0", "The first vertex of the edge."], [10, 2, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e1", "ipc::point_edge_distance_type::e1", "The second vertex of the edge."], [10, 2, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-p", "ipc::point_edge_distance_type::p", "The point."], [11, 1, 1, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T", "ipc::point_edge_relative_velocity", "Compute the relative velocity of a point and an edge."], [11, 6, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T", "ipc::point_edge_relative_velocity::DerivedDE0", "Compute the relative velocity of a point and an edge."], [11, 6, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T", "ipc::point_edge_relative_velocity::DerivedDE1", "Compute the relative velocity of a point and an edge."], [11, 6, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T", "ipc::point_edge_relative_velocity::DerivedDP", "Compute the relative velocity of a point and an edge."], [11, 6, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T", "ipc::point_edge_relative_velocity::T", "Compute the relative velocity of a point and an edge."], [11, 2, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T-p-alpha", "ipc::point_edge_relative_velocity::alpha", "Parametric coordinate of the closest point on the edge"], [11, 2, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T-p-de0", "ipc::point_edge_relative_velocity::de0", "Velocity of the first endpoint of the edge"], [11, 2, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T-p-de1", "ipc::point_edge_relative_velocity::de1", "Velocity of the second endpoint of the edge"], [11, 2, 2, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T-p-dp", "ipc::point_edge_relative_velocity::dp", "Velocity of the point"], [11, 1, 1, "_CPPv4I0EN3ipc35point_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix", ""], [11, 6, 2, "_CPPv4I0EN3ipc35point_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix::T", ""], [11, 2, 2, "_CPPv4I0EN3ipc35point_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix::alpha", ""], [11, 2, 2, "_CPPv4I0EN3ipc35point_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix::dim", ""], [11, 1, 1, "_CPPv4I0EN3ipc44point_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix_jacobian", ""], [11, 6, 2, "_CPPv4I0EN3ipc44point_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix_jacobian::T", ""], [11, 2, 2, "_CPPv4I0EN3ipc44point_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix_jacobian::alpha", ""], [11, 2, 2, "_CPPv4I0EN3ipc44point_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL9EEEKiRK1T", "ipc::point_edge_relative_velocity_matrix_jacobian::dim", ""], [11, 1, 1, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis", ""], [11, 6, 2, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis::DerivedE0", ""], [11, 6, 2, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis::DerivedE1", ""], [11, 6, 2, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis::DerivedP", ""], [11, 6, 2, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis::T", ""], [11, 2, 2, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis::e0", ""], [11, 2, 2, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis::e1", ""], [11, 2, 2, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis::p", ""], [11, 1, 1, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis_jacobian", ""], [11, 6, 2, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis_jacobian::DerivedE0", ""], [11, 6, 2, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis_jacobian::DerivedE1", ""], [11, 6, 2, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis_jacobian::DerivedP", ""], [11, 2, 2, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis_jacobian::e0", ""], [11, 2, 2, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis_jacobian::e1", ""], [11, 2, 2, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_tangent_basis_jacobian::p", ""], [10, 1, 1, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance", "Compute the distance between a point and line in 2D or 3D."], [10, 6, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance::DerivedE0", "Compute the distance between a point and line in 2D or 3D."], [10, 6, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance::DerivedE1", "Compute the distance between a point and line in 2D or 3D."], [10, 6, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance::DerivedP", "Compute the distance between a point and line in 2D or 3D."], [10, 2, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e0", "ipc::point_line_distance::e0", "The first vertex of the edge defining the line."], [10, 2, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e1", "ipc::point_line_distance::e1", "The second vertex of the edge defining the line."], [10, 2, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-p", "ipc::point_line_distance::p", "The point."], [10, 1, 1, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient", "Compute the gradient of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedE0", "Compute the gradient of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedE1", "Compute the gradient of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedP", "Compute the gradient of the distance between a point and line."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-e0", "ipc::point_line_distance_gradient::e0", "[in] The first vertex of the edge defining the line."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-e1", "ipc::point_line_distance_gradient::e1", "[in] The second vertex of the edge defining the line."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_line_distance_gradient::grad", "[out] The gradient of the distance wrt p, e0, and e1."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p", "ipc::point_line_distance_gradient::p", "[in] The point."], [10, 1, 1, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian", "Compute the hessian of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedE0", "Compute the hessian of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedE1", "Compute the hessian of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedHess", "Compute the hessian of the distance between a point and line."], [10, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedP", "Compute the hessian of the distance between a point and line."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-e0", "ipc::point_line_distance_hessian::e0", "[in] The first vertex of the edge defining the line."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-e1", "ipc::point_line_distance_hessian::e1", "[in] The second vertex of the edge defining the line."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_line_distance_hessian::hess", "[out] The hessian of the distance wrt p, e0, and e1."], [10, 2, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p", "ipc::point_line_distance_hessian::p", "[in] The point."], [10, 1, 1, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance", "Compute the distance between a point and a plane."], [10, 1, 1, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance", "Compute the distance between a point and a plane."], [10, 6, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance::DerivedNormal", "Compute the distance between a point and a plane."], [10, 6, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance::DerivedOrigin", "Compute the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedP", "Compute the distance between a point and a plane."], [10, 6, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance::DerivedP", "Compute the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedT0", "Compute the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedT1", "Compute the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedT2", "Compute the distance between a point and a plane."], [10, 2, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE-p-normal", "ipc::point_plane_distance::normal", "The normal of the plane."], [10, 2, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE-p-origin", "ipc::point_plane_distance::origin", "The origin of the plane."], [10, 2, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-p", "ipc::point_plane_distance::p", "The point."], [10, 2, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE-p-p", "ipc::point_plane_distance::p", "The point."], [10, 2, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t0", "ipc::point_plane_distance::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t1", "ipc::point_plane_distance::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t2", "ipc::point_plane_distance::t2", "The third vertex of the triangle."], [10, 1, 1, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient", "Compute the gradient of the distance between a point and a plane."], [10, 1, 1, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedNormal", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedOrigin", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedP", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedP", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedT0", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedT1", "Compute the gradient of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedT2", "Compute the gradient of the distance between a point and a plane."], [10, 2, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_plane_distance_gradient::grad", "[out] The gradient of the distance wrt p, t0, t1, and t2."], [10, 2, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_plane_distance_gradient::grad", "[out] The gradient of the distance wrt p."], [10, 2, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-normal", "ipc::point_plane_distance_gradient::normal", "[in] The normal of the plane."], [10, 2, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-origin", "ipc::point_plane_distance_gradient::origin", "[in] The origin of the plane."], [10, 2, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p", "ipc::point_plane_distance_gradient::p", "[in] The point."], [10, 2, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p", "ipc::point_plane_distance_gradient::p", "[in] The point."], [10, 2, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-t0", "ipc::point_plane_distance_gradient::t0", "[in] The first vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-t1", "ipc::point_plane_distance_gradient::t1", "[in] The second vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-t2", "ipc::point_plane_distance_gradient::t2", "[in] The third vertex of the triangle."], [10, 1, 1, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian", "Compute the hessian of the distance between a point and a plane."], [10, 1, 1, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedHess", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedHess", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedNormal", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedOrigin", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedP", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedP", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedT0", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedT1", "Compute the hessian of the distance between a point and a plane."], [10, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedT2", "Compute the hessian of the distance between a point and a plane."], [10, 2, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_plane_distance_hessian::hess", "[out] The hessian of the distance wrt p, t0, t1, and t2."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_plane_distance_hessian::hess", "[out] The hessian of the distance wrt p."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-normal", "ipc::point_plane_distance_hessian::normal", "[in] The normal of the plane."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-origin", "ipc::point_plane_distance_hessian::origin", "[in] The origin of the plane."], [10, 2, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p", "ipc::point_plane_distance_hessian::p", "[in] The point."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p", "ipc::point_plane_distance_hessian::p", "[in] The point."], [10, 2, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-t0", "ipc::point_plane_distance_hessian::t0", "[in] The first vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-t1", "ipc::point_plane_distance_hessian::t1", "[in] The second vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-t2", "ipc::point_plane_distance_hessian::t2", "[in] The third vertex of the triangle."], [7, 1, 1, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::conservative_rescaling", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::max_iterations", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::min_distance", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::p0_t0", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::p0_t1", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::p1_t0", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::p1_t1", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::tmax", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::toi", ""], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_point_ccd::tolerance", ""], [10, 1, 1, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_distance", "Compute the distance between two points."], [10, 6, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_distance::DerivedP0", "Compute the distance between two points."], [10, 6, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_distance::DerivedP1", "Compute the distance between two points."], [10, 2, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE-p-p0", "ipc::point_point_distance::p0", "[in] The first point."], [10, 2, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE-p-p1", "ipc::point_point_distance::p1", "[in] The second point."], [10, 1, 1, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient", "Compute the gradient of the distance between two points."], [10, 6, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient::DerivedGrad", "Compute the gradient of the distance between two points."], [10, 6, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient::DerivedP0", "Compute the gradient of the distance between two points."], [10, 6, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient::DerivedP1", "Compute the gradient of the distance between two points."], [10, 2, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_point_distance_gradient::grad", "[out] The computed gradient."], [10, 2, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p0", "ipc::point_point_distance_gradient::p0", "[in] The first point."], [10, 2, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p1", "ipc::point_point_distance_gradient::p1", "[in] The second point."], [10, 1, 1, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian", "Compute the hessian of the distance between two points."], [10, 6, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian::DerivedHess", "Compute the hessian of the distance between two points."], [10, 6, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian::DerivedP0", "Compute the hessian of the distance between two points."], [10, 6, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian::DerivedP1", "Compute the hessian of the distance between two points."], [10, 2, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_point_distance_hessian::hess", "[out] The computed hessian."], [10, 2, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p0", "ipc::point_point_distance_hessian::p0", "[in] The first point."], [10, 2, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p1", "ipc::point_point_distance_hessian::p1", "[in] The second point."], [11, 1, 1, "_CPPv4I00EN3ipc29point_point_relative_velocityEDaRKN5Eigen10MatrixBaseI10DerivedDP0EERKN5Eigen10MatrixBaseI10DerivedDP1EE", "ipc::point_point_relative_velocity", "Compute the relative velocity of two points."], [11, 6, 2, "_CPPv4I00EN3ipc29point_point_relative_velocityEDaRKN5Eigen10MatrixBaseI10DerivedDP0EERKN5Eigen10MatrixBaseI10DerivedDP1EE", "ipc::point_point_relative_velocity::DerivedDP0", "Compute the relative velocity of two points."], [11, 6, 2, "_CPPv4I00EN3ipc29point_point_relative_velocityEDaRKN5Eigen10MatrixBaseI10DerivedDP0EERKN5Eigen10MatrixBaseI10DerivedDP1EE", "ipc::point_point_relative_velocity::DerivedDP1", "Compute the relative velocity of two points."], [11, 2, 2, "_CPPv4I00EN3ipc29point_point_relative_velocityEDaRKN5Eigen10MatrixBaseI10DerivedDP0EERKN5Eigen10MatrixBaseI10DerivedDP1EE-p-dp0", "ipc::point_point_relative_velocity::dp0", "Velocity of the first point"], [11, 2, 2, "_CPPv4I00EN3ipc29point_point_relative_velocityEDaRKN5Eigen10MatrixBaseI10DerivedDP0EERKN5Eigen10MatrixBaseI10DerivedDP1EE-p-dp1", "ipc::point_point_relative_velocity::dp1", "Velocity of the second point"], [11, 1, 1, "_CPPv4I0EN3ipc36point_point_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL6EEEKi", "ipc::point_point_relative_velocity_matrix", "Compute the relative velocity premultiplier matrix."], [11, 6, 2, "_CPPv4I0EN3ipc36point_point_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL6EEEKi", "ipc::point_point_relative_velocity_matrix::T", "Compute the relative velocity premultiplier matrix."], [11, 2, 2, "_CPPv4I0EN3ipc36point_point_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL6EEEKi-p-dim", "ipc::point_point_relative_velocity_matrix::dim", "Dimension (2 or 3)"], [11, 1, 1, "_CPPv4I0EN3ipc45point_point_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL6EEEKi", "ipc::point_point_relative_velocity_matrix_jacobian", "Compute the jacobian of the relative velocity premultiplier matrix."], [11, 6, 2, "_CPPv4I0EN3ipc45point_point_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL6EEEKi", "ipc::point_point_relative_velocity_matrix_jacobian::T", "Compute the jacobian of the relative velocity premultiplier matrix."], [11, 2, 2, "_CPPv4I0EN3ipc45point_point_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL6EEEKi-p-dim", "ipc::point_point_relative_velocity_matrix_jacobian::dim", "Dimension (2 or 3)"], [11, 1, 1, "_CPPv4I000EN3ipc25point_point_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis", "Compute a basis for the space tangent to the point-point pair."], [11, 6, 2, "_CPPv4I000EN3ipc25point_point_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis::DerivedP0", "Compute a basis for the space tangent to the point-point pair."], [11, 6, 2, "_CPPv4I000EN3ipc25point_point_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis::DerivedP1", "Compute a basis for the space tangent to the point-point pair."], [11, 6, 2, "_CPPv4I000EN3ipc25point_point_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis::T", "Compute a basis for the space tangent to the point-point pair."], [11, 2, 2, "_CPPv4I000EN3ipc25point_point_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE-p-p0", "ipc::point_point_tangent_basis::p0", "First point"], [11, 2, 2, "_CPPv4I000EN3ipc25point_point_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE-p-p1", "ipc::point_point_tangent_basis::p1", "Second point"], [11, 1, 1, "_CPPv4I00EN3ipc34point_point_tangent_basis_jacobianE9MatrixMaxIdXL18EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis_jacobian", ""], [11, 6, 2, "_CPPv4I00EN3ipc34point_point_tangent_basis_jacobianE9MatrixMaxIdXL18EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis_jacobian::DerivedP0", ""], [11, 6, 2, "_CPPv4I00EN3ipc34point_point_tangent_basis_jacobianE9MatrixMaxIdXL18EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis_jacobian::DerivedP1", ""], [11, 2, 2, "_CPPv4I00EN3ipc34point_point_tangent_basis_jacobianE9MatrixMaxIdXL18EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis_jacobian::p0", ""], [11, 2, 2, "_CPPv4I00EN3ipc34point_point_tangent_basis_jacobianE9MatrixMaxIdXL18EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_tangent_basis_jacobian::p1", ""], [7, 1, 1, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::conservative_rescaling", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::max_iterations", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::min_distance", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::p_t0", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::p_t1", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::t0_t0", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::t0_t1", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::t1_t0", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::t1_t1", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::t2_t0", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::t2_t1", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::tmax", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::toi", ""], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd::tolerance", ""], [10, 1, 1, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType", "ipc::point_triangle_distance", "Compute the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType", "ipc::point_triangle_distance::DerivedP", "Compute the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType", "ipc::point_triangle_distance::DerivedT0", "Compute the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType", "ipc::point_triangle_distance::DerivedT1", "Compute the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType", "ipc::point_triangle_distance::DerivedT2", "Compute the distance between a points and a triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance::dtype", "The point-triangle distance type to compute."], [10, 2, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance::p", "The point."], [10, 2, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance::t2", "The third vertex of the triangle."], [10, 1, 1, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType", "ipc::point_triangle_distance_gradient", "Compute the gradient of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType", "ipc::point_triangle_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType", "ipc::point_triangle_distance_gradient::DerivedP", "Compute the gradient of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType", "ipc::point_triangle_distance_gradient::DerivedT0", "Compute the gradient of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType", "ipc::point_triangle_distance_gradient::DerivedT1", "Compute the gradient of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType", "ipc::point_triangle_distance_gradient::DerivedT2", "Compute the gradient of the distance between a points and a triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance_gradient::dtype", "The point-triangle distance type to compute."], [10, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType-p-grad", "ipc::point_triangle_distance_gradient::grad", "[out] The gradient of the distance wrt p, t0, t1, and t2."], [10, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance_gradient::p", "[in] The point."], [10, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance_gradient::t0", "[in] The first vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance_gradient::t1", "[in] The second vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance_gradient::t2", "[in] The third vertex of the triangle."], [10, 1, 1, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType", "ipc::point_triangle_distance_hessian", "Compute the hessian of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType", "ipc::point_triangle_distance_hessian::DerivedHess", "Compute the hessian of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType", "ipc::point_triangle_distance_hessian::DerivedP", "Compute the hessian of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType", "ipc::point_triangle_distance_hessian::DerivedT0", "Compute the hessian of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType", "ipc::point_triangle_distance_hessian::DerivedT1", "Compute the hessian of the distance between a points and a triangle."], [10, 6, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType", "ipc::point_triangle_distance_hessian::DerivedT2", "Compute the hessian of the distance between a points and a triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance_hessian::dtype", "The point-triangle distance type to compute."], [10, 2, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType-p-hess", "ipc::point_triangle_distance_hessian::hess", "[out] The hessian of the distance wrt p, t0, t1, and t2."], [10, 2, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance_hessian::p", "[in] The point."], [10, 2, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance_hessian::t0", "[in] The first vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance_hessian::t1", "[in] The second vertex of the triangle."], [10, 2, 2, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance_hessian::t2", "[in] The third vertex of the triangle."], [10, 1, 1, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type", "Determine the closest pair between a point and triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedP", "Determine the closest pair between a point and triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedT0", "Determine the closest pair between a point and triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedT1", "Determine the closest pair between a point and triangle."], [10, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedT2", "Determine the closest pair between a point and triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-p", "ipc::point_triangle_distance_type::p", "The point."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t0", "ipc::point_triangle_distance_type::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t1", "ipc::point_triangle_distance_type::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t2", "ipc::point_triangle_distance_type::t2", "The third vertex of the triangle."], [11, 1, 1, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity", "Compute the relative velocity of the point to the triangle."], [11, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity::DerivedCoords", "Compute the relative velocity of the point to the triangle."], [11, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity::DerivedDP", "Compute the relative velocity of the point to the triangle."], [11, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity::DerivedDT0", "Compute the relative velocity of the point to the triangle."], [11, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity::DerivedDT1", "Compute the relative velocity of the point to the triangle."], [11, 6, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity::DerivedDT2", "Compute the relative velocity of the point to the triangle."], [11, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-coords", "ipc::point_triangle_relative_velocity::coords", "Baricentric coordinates of the closest point on the triangle"], [11, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-dp", "ipc::point_triangle_relative_velocity::dp", "Velocity of the point"], [11, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-dt0", "ipc::point_triangle_relative_velocity::dt0", "Velocity of the first vertex of the triangle"], [11, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-dt1", "ipc::point_triangle_relative_velocity::dt1", "Velocity of the second vertex of the triangle"], [11, 2, 2, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE-p-dt2", "ipc::point_triangle_relative_velocity::dt2", "Velocity of the third vertex of the triangle"], [11, 1, 1, "_CPPv4I00EN3ipc39point_triangle_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix", ""], [11, 6, 2, "_CPPv4I00EN3ipc39point_triangle_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix::DerivedCoords", ""], [11, 6, 2, "_CPPv4I00EN3ipc39point_triangle_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix::T", ""], [11, 2, 2, "_CPPv4I00EN3ipc39point_triangle_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix::coords", ""], [11, 2, 2, "_CPPv4I00EN3ipc39point_triangle_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix::dim", ""], [11, 1, 1, "_CPPv4I00EN3ipc48point_triangle_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix_jacobian", ""], [11, 6, 2, "_CPPv4I00EN3ipc48point_triangle_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix_jacobian::DerivedCoords", ""], [11, 6, 2, "_CPPv4I00EN3ipc48point_triangle_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix_jacobian::T", ""], [11, 2, 2, "_CPPv4I00EN3ipc48point_triangle_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix_jacobian::coords", ""], [11, 2, 2, "_CPPv4I00EN3ipc48point_triangle_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE", "ipc::point_triangle_relative_velocity_matrix_jacobian::dim", ""], [11, 1, 1, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis", "Compute a basis for the space tangent to the point-triangle pair."], [11, 6, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis::DerivedP", "Compute a basis for the space tangent to the point-triangle pair."], [11, 6, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis::DerivedT0", "Compute a basis for the space tangent to the point-triangle pair."], [11, 6, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis::DerivedT1", "Compute a basis for the space tangent to the point-triangle pair."], [11, 6, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis::DerivedT2", "Compute a basis for the space tangent to the point-triangle pair."], [11, 6, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis::T", "Compute a basis for the space tangent to the point-triangle pair."], [11, 2, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-p", "ipc::point_triangle_tangent_basis::p", "Point"], [11, 2, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t0", "ipc::point_triangle_tangent_basis::t0", "Triangle's first vertex"], [11, 2, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t1", "ipc::point_triangle_tangent_basis::t1", "Triangle's second vertex"], [11, 2, 2, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t2", "ipc::point_triangle_tangent_basis::t2", "Triangle's third vertex"], [11, 1, 1, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian", ""], [11, 6, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::DerivedP", ""], [11, 6, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::DerivedT0", ""], [11, 6, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::DerivedT1", ""], [11, 6, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::DerivedT2", ""], [11, 2, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::p", ""], [11, 2, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::t0", ""], [11, 2, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::t1", ""], [11, 2, 2, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_tangent_basis_jacobian::t2", ""], [4, 1, 1, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd", "ipc::update_barrier_stiffness", "Update the barrier stiffness if the distance is decreasing and less than dhat_epsilon_scale * diag."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-barrier_stiffness", "ipc::update_barrier_stiffness::barrier_stiffness", "[in] Current barrier stiffness."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-bbox_diagonal", "ipc::update_barrier_stiffness::bbox_diagonal", "[in] Length of the diagonal of the bounding box of the scene."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-dhat_epsilon_scale", "ipc::update_barrier_stiffness::dhat_epsilon_scale", "[in] Update if distance is less than this fraction of the diagonal."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-dmin", "ipc::update_barrier_stiffness::dmin", "[in] Minimum distance between elements."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-max_barrier_stiffness", "ipc::update_barrier_stiffness::max_barrier_stiffness", "[in] Maximum stiffness of the barrier."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-min_distance", "ipc::update_barrier_stiffness::min_distance", "[in] Current minimum distance between elements."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-prev_min_distance", "ipc::update_barrier_stiffness::prev_min_distance", "[in] Previous minimum distance between elements."]], "ipctk": [[17, 7, 1, 0, "AABB", "Compute a conservative inflation of the AABB."], [17, 7, 1, 0, "BroadPhase", "Overloaded function."], [17, 7, 1, 0, "BroadPhaseMethod", "Enumeration of implemented broad phase methods."], [17, 7, 1, 0, "BruteForce", "Find the candidate edge-edge collisions."], [18, 7, 1, 0, "Candidates", "Overloaded function."], [20, 7, 1, 0, "CollisionConstraint", "Bases: CollisionStencil"], [20, 7, 1, 0, "CollisionConstraints", "If the collision constraints are using the convergent formulation."], [21, 7, 1, 0, "CollisionMesh", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [18, 7, 1, 0, "ContinuousCollisionCandidate", "Perform narrow-phase CCD on the candidate."], [18, 7, 1, 0, "EdgeEdgeCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [20, 7, 1, 0, "EdgeEdgeConstraint", "Bases: EdgeEdgeCandidate, CollisionConstraint"], [22, 7, 1, 0, "EdgeEdgeDistanceType", "Members:"], [23, 7, 1, 0, "EdgeEdgeFrictionConstraint", "Bases: EdgeEdgeCandidate, FrictionConstraint"], [18, 7, 1, 0, "EdgeFaceCandidate", "Bases: pybind11_object"], [18, 7, 1, 0, "EdgeVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [20, 7, 1, 0, "EdgeVertexConstraint", "Bases: EdgeVertexCandidate, CollisionConstraint"], [23, 7, 1, 0, "EdgeVertexFrictionConstraint", "Bases: EdgeVertexCandidate, FrictionConstraint"], [18, 7, 1, 0, "FaceVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [20, 7, 1, 0, "FaceVertexConstraint", "Bases: FaceVertexCandidate, CollisionConstraint"], [23, 7, 1, 0, "FaceVertexFrictionConstraint", "Bases: FaceVertexCandidate, FrictionConstraint"], [23, 7, 1, 0, "FrictionConstraint", "Bases: CollisionStencil"], [23, 7, 1, 0, "FrictionConstraints", "Bases: pybind11_object"], [17, 7, 1, 0, "HashGrid", "Overloaded function."], [24, 7, 1, 0, "LoggerLevel", "Members:"], [20, 7, 1, 0, "PlaneVertexConstraint", "Bases: CollisionConstraint"], [22, 7, 1, 0, "PointEdgeDistanceType", "Members:"], [22, 7, 1, 0, "PointTriangleDistanceType", "Members:"], [17, 7, 1, 0, "SpatialHash", "Overloaded function."], [17, 7, 1, 0, "SweepAndTiniestQueue", "Overloaded function."], [18, 7, 1, 0, "VertexVertexCandidate", "Bases: CollisionStencil"], [20, 7, 1, 0, "VertexVertexConstraint", "Bases: VertexVertexCandidate, CollisionConstraint"], [23, 7, 1, 0, "VertexVertexFrictionConstraint", "Bases: VertexVertexCandidate, FrictionConstraint"], [16, 11, 1, 0, "barrier", "Function that grows to infinity as d approaches 0 from the right."], [16, 11, 1, 0, "barrier_gradient", "Derivative of the barrier function."], [16, 11, 1, 0, "barrier_hessian", "Second derivative of the barrier function."], [19, 11, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free."], [23, 11, 1, 0, "compute_normal_force_magnitude", ""], [23, 11, 1, 0, "compute_normal_force_magnitude_gradient", ""], [23, 11, 1, 0, "df1_x_minus_f1_over_x3", "The derivative of f1 times x minus f1 all divided by x cubed."], [19, 11, 1, 0, "edge_edge_ccd", ""], [22, 11, 1, 0, "edge_edge_cross_squarednorm", "Compute the squared norm of the edge-edge cross product."], [22, 11, 1, 0, "edge_edge_cross_squarednorm_gradient", "Compute the gradient of the squared norm of the edge cross product."], [22, 11, 1, 0, "edge_edge_cross_squarednorm_hessian", "Compute the hessian of the squared norm of the edge cross product."], [22, 11, 1, 0, "edge_edge_distance", "Compute the distance between a two lines segments in 3D."], [22, 11, 1, 0, "edge_edge_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [22, 11, 1, 0, "edge_edge_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [22, 11, 1, 0, "edge_edge_distance_type", "Determine the closest pair between two edges."], [22, 11, 1, 0, "edge_edge_mollifier", "Overloaded function."], [22, 11, 1, 0, "edge_edge_mollifier_gradient", "Overloaded function."], [22, 11, 1, 0, "edge_edge_mollifier_hessian", "Overloaded function."], [22, 11, 1, 0, "edge_edge_mollifier_threshold", "Compute the threshold of the mollifier edge-edge distance."], [23, 11, 1, 0, "edge_edge_relative_velocity", "Compute the relative velocity of the edges."], [23, 11, 1, 0, "edge_edge_relative_velocity_matrix", ""], [23, 11, 1, 0, "edge_edge_relative_velocity_matrix_jacobian", ""], [23, 11, 1, 0, "edge_edge_tangent_basis", "Compute a basis for the space tangent to the edge-edge pair."], [23, 11, 1, 0, "edge_edge_tangent_basis_jacobian", ""], [23, 11, 1, 0, "f0_SF", "Smooth friction mollifier function."], [23, 11, 1, 0, "f1_SF_over_x", "Compute the derivative of f0_SF divided by x (\\frac{f_0'(x)}{x})."], [24, 11, 1, 0, "get_num_threads", "get maximum number of threads to use"], [16, 11, 1, 0, "initial_barrier_stiffness", "Compute an inital barrier stiffness using the barrier potential gradient."], [19, 11, 1, 0, "is_step_collision_free", "Determine if the step is collision free."], [22, 11, 1, 0, "line_line_distance", "Compute the distance between a two infinite lines in 3D."], [22, 11, 1, 0, "line_line_distance_gradient", "Compute the gradient of the distance between a two lines in 3D."], [22, 11, 1, 0, "line_line_distance_hessian", "Compute the hessian of the distance between a two lines in 3D."], [19, 11, 1, 0, "point_edge_ccd", ""], [22, 11, 1, 0, "point_edge_distance", "Compute the distance between a point and edge in 2D or 3D."], [22, 11, 1, 0, "point_edge_distance_gradient", "Compute the gradient of the distance between a point and edge."], [22, 11, 1, 0, "point_edge_distance_hessian", "Compute the hessian of the distance between a point and edge."], [22, 11, 1, 0, "point_edge_distance_type", "Determine the closest pair between a point and edge."], [23, 11, 1, 0, "point_edge_relative_velocity", "Compute the relative velocity of a point and an edge"], [23, 11, 1, 0, "point_edge_relative_velocity_matrix", ""], [23, 11, 1, 0, "point_edge_relative_velocity_matrix_jacobian", ""], [23, 11, 1, 0, "point_edge_tangent_basis", ""], [23, 11, 1, 0, "point_edge_tangent_basis_jacobian", ""], [22, 11, 1, 0, "point_line_distance", "Compute the distance between a point and line in 2D or 3D."], [22, 11, 1, 0, "point_line_distance_gradient", "Compute the gradient of the distance between a point and line."], [22, 11, 1, 0, "point_line_distance_hessian", "Compute the hessian of the distance between a point and line."], [19, 11, 1, 0, "point_point_ccd", ""], [22, 11, 1, 0, "point_point_distance", "Compute the distance between two points."], [22, 11, 1, 0, "point_point_distance_gradient", "Compute the gradient of the distance between two points."], [22, 11, 1, 0, "point_point_distance_hessian", "Compute the hessian of the distance between a point and point."], [23, 11, 1, 0, "point_point_relative_velocity", "Compute the relative velocity of two points"], [23, 11, 1, 0, "point_point_relative_velocity_matrix", "Compute the relative velocity premultiplier matrix"], [23, 11, 1, 0, "point_point_relative_velocity_matrix_jacobian", "Compute the jacobian of the relative velocity premultiplier matrix"], [23, 11, 1, 0, "point_point_tangent_basis", "Compute a basis for the space tangent to the point-point pair."], [23, 11, 1, 0, "point_point_tangent_basis_jacobian", ""], [19, 11, 1, 0, "point_triangle_ccd", ""], [22, 11, 1, 0, "point_triangle_distance", "Compute the distance between a two lines segments in 3D."], [22, 11, 1, 0, "point_triangle_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [22, 11, 1, 0, "point_triangle_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [22, 11, 1, 0, "point_triangle_distance_type", "Determine the closest pair between a point and triangle."], [23, 11, 1, 0, "point_triangle_relative_velocity", "Compute the relative velocity of the point to the triangle."], [23, 11, 1, 0, "point_triangle_relative_velocity_matrix", ""], [23, 11, 1, 0, "point_triangle_relative_velocity_matrix_jacobian", ""], [23, 11, 1, 0, "point_triangle_tangent_basis", "Compute a basis for the space tangent to the point-triangle pair."], [23, 11, 1, 0, "point_triangle_tangent_basis_jacobian", ""], [24, 11, 1, 0, "set_logger_level", "Set log level"], [24, 11, 1, 0, "set_num_threads", "set maximum number of threads to use"], [16, 11, 1, 0, "update_barrier_stiffness", "Update the barrier stiffness if the distance is decreasing and less than dhat_epsilon_scale * diag."]], "ipctk.AABB": [[17, 8, 1, 0, "conservative_inflation", "Compute a conservative inflation of the AABB."], [17, 8, 1, 0, "from_point", "Overloaded function."], [17, 8, 1, 0, "intersects", "Check if another AABB intersects with this one."], [17, 10, 1, 0, "max", "Maximum corner of the AABB."], [17, 10, 1, 0, "min", "Minimum corner of the AABB."], [17, 10, 1, 0, "vertex_ids", "Vertex IDs attached to the AABB."]], "ipctk.AABB.intersects": [[17, 9, 2, 0, "other", "The other AABB."]], "ipctk.BroadPhase": [[17, 8, 1, 0, "build", "Overloaded function."], [17, 10, 1, 0, "can_vertices_collide", "Function for determining if two vertices can collide."], [17, 8, 1, 0, "clear", "Clear any built data."], [17, 8, 1, 0, "detect_collision_candidates", "Detect all collision candidates needed for a given dimensional simulation."], [17, 8, 1, 0, "detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [17, 8, 1, 0, "detect_edge_face_candidates", "Find the candidate edge-face intersections."], [17, 8, 1, 0, "detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [17, 8, 1, 0, "detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [17, 8, 1, 0, "make_broad_phase", "Construct a registered broad phase object."]], "ipctk.BroadPhase.detect_collision_candidates": [[17, 9, 2, 0, "dim", "The dimension of the simulation (i.e., 2 or 3)."]], "ipctk.BroadPhase.make_broad_phase": [[17, 9, 2, 0, "broad_phase_method", "The broad phase method to use."]], "ipctk.BroadPhaseMethod": [[17, 10, 1, 0, "name", ""]], "ipctk.BruteForce": [[17, 8, 1, 0, "detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [17, 8, 1, 0, "detect_edge_face_candidates", "Find the candidate edge-face intersections."], [17, 8, 1, 0, "detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [17, 8, 1, 0, "detect_face_vertex_candidates", "Find the candidate face-vertex collisions."]], "ipctk.Candidates": [[18, 8, 1, 0, "build", "Overloaded function."], [18, 8, 1, 0, "clear", ""], [18, 8, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free using the set of collision candidates."], [18, 8, 1, 0, "empty", ""], [18, 8, 1, 0, "is_step_collision_free", "Determine if the step is collision free from the set of candidates."], [18, 8, 1, 0, "save_obj", ""]], "ipctk.CollisionConstraint": [[20, 8, 1, 0, "compute_potential", ""], [20, 8, 1, 0, "compute_potential_gradient", ""], [20, 8, 1, 0, "compute_potential_hessian", ""]], "ipctk.CollisionConstraints": [[20, 10, 1, 0, "are_shape_derivatives_enabled", "If the collision constraints are using the convergent formulation."], [20, 8, 1, 0, "build", "Overloaded function."], [20, 8, 1, 0, "clear", "Clear the collision constraints."], [20, 8, 1, 0, "compute_minimum_distance", "Computes the minimum distance between any non-adjacent elements."], [20, 8, 1, 0, "compute_potential", "Compute the barrier potential for a given constraint set."], [20, 8, 1, 0, "compute_potential_gradient", "Compute the gradient of the barrier potential."], [20, 8, 1, 0, "compute_potential_hessian", "Compute the hessian of the barrier potential."], [20, 8, 1, 0, "compute_shape_derivative", "Compute the barrier shape derivative."], [20, 8, 1, 0, "empty", "Get if the collision constraints are empty."], [20, 10, 1, 0, "use_convergent_formulation", "If the collision constraints should use the convergent formulation."]], "ipctk.CollisionMesh": [[21, 8, 1, 0, "are_adjacencies_initialized", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [21, 8, 1, 0, "are_area_jacobians_initialized", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."], [21, 8, 1, 0, "build_from_full_mesh", "Helper function that automatically builds include_vertex using construct_is_on_surface."], [21, 10, 1, 0, "can_collide", "A function that takes two vertex IDs and returns true if the vertices (and faces or edges containing the vertices) can collide. By default all primitives can collide with all other primitives."], [21, 8, 1, 0, "construct_faces_to_edges", "Construct a matrix that maps from the faces' edges to rows in the edges matrix."], [21, 8, 1, 0, "construct_is_on_surface", "Construct a vector of bools indicating whether each vertex is on the surface."], [21, 8, 1, 0, "dim", "Get the dimension of the mesh."], [21, 8, 1, 0, "displace_vertices", "Compute the vertex positions from vertex displacements on the full mesh."], [21, 8, 1, 0, "edge_area", "Get the barycentric area of an edge."], [21, 8, 1, 0, "edge_area_gradient", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points. :param ei: Edge ID."], [21, 8, 1, 0, "edge_areas", "Get the barycentric area of the edges."], [21, 10, 1, 0, "edge_vertex_adjacencies", "Get the edge-vertex adjacency matrix."], [21, 10, 1, 0, "edges", "Get the edges of the collision mesh."], [21, 10, 1, 0, "faces", "Get the faces of the collision mesh."], [21, 10, 1, 0, "faces_to_edges", "Get the mapping from faces to edges of the collision mesh."], [21, 10, 1, 0, "full_ndof", "Get the number of degrees of freedom in the full mesh."], [21, 10, 1, 0, "full_num_vertices", "Get the number of vertices in the full mesh."], [21, 8, 1, 0, "init_adjacencies", "Initialize vertex-vertex and edge-vertex adjacencies."], [21, 8, 1, 0, "init_area_jacobians", "Initialize vertex and edge areas."], [21, 8, 1, 0, "is_vertex_on_boundary", "Is a vertex on the boundary of the collision mesh?"], [21, 8, 1, 0, "map_displacements", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."], [21, 10, 1, 0, "ndof", "Get the number of degrees of freedom in the collision mesh."], [21, 10, 1, 0, "num_edges", "Get the number of edges in the collision mesh."], [21, 10, 1, 0, "num_faces", "Get the number of faces in the collision mesh."], [21, 10, 1, 0, "num_vertices", "Get the number of vertices in the collision mesh."], [21, 10, 1, 0, "rest_positions", "Get the vertices of the collision mesh at rest."], [21, 8, 1, 0, "to_full_dof", "Overloaded function."], [21, 8, 1, 0, "to_full_vertex_id", "Map a vertex ID to the corresponding vertex ID in the full mesh."], [21, 8, 1, 0, "vertex_area", "Get the barycentric area of a vertex."], [21, 8, 1, 0, "vertex_area_gradient", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points. :param vi: Vertex ID."], [21, 10, 1, 0, "vertex_areas", "Get the barycentric area of the vertices."], [21, 10, 1, 0, "vertex_vertex_adjacencies", "Get the vertex-vertex adjacency matrix."], [21, 8, 1, 0, "vertices", "Compute the vertex positions from the positions of the full mesh."]], "ipctk.CollisionMesh.build_from_full_mesh": [[21, 9, 2, 0, "edges", "The edge matrix of mesh."], [21, 9, 2, 0, "faces", "The face matrix of mesh."], [21, 9, 2, 0, "full_rest_positions", "The full vertices at rest."]], "ipctk.CollisionMesh.construct_faces_to_edges": [[21, 9, 2, 0, "edges", "The edge matrix of mesh."], [21, 9, 2, 0, "faces", "The face matrix of mesh."]], "ipctk.CollisionMesh.construct_is_on_surface": [[21, 9, 2, 0, "edges", "The surface edges of the mesh."], [21, 9, 2, 0, "num_vertices", "The number of vertices in the mesh."]], "ipctk.CollisionMesh.displace_vertices": [[21, 9, 2, 0, "full_displacements", "The vertex displacements on the full mesh."]], "ipctk.CollisionMesh.edge_area": [[21, 9, 2, 0, "ei", "Edge ID."]], "ipctk.CollisionMesh.is_vertex_on_boundary": [[21, 9, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.map_displacements": [[21, 9, 2, 0, "full_displacements", "The vertex displacements on the full mesh."]], "ipctk.CollisionMesh.to_full_vertex_id": [[21, 9, 2, 0, "id", "Vertex ID in the collision mesh."]], "ipctk.CollisionMesh.vertex_area": [[21, 9, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.vertices": [[21, 9, 2, 0, "full_positions", "The vertex positions of the full mesh."]], "ipctk.ContinuousCollisionCandidate": [[18, 8, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [18, 8, 1, 0, "print_ccd_query", ""]], "ipctk.ContinuousCollisionCandidate.ccd": [[18, 9, 2, 0, "conservative_rescaling", "Conservative rescaling value used to avoid taking steps exactly to impact."], [18, 9, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [18, 9, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [18, 9, 2, 0, "max_iterations", "Maximum iterations used by Tight-Inclusion CCD."], [18, 9, 2, 0, "min_distance", "Minimum separation distance between primitives."], [18, 9, 2, 0, "tmax", "Maximum time (normalized) to look for collisions. Should be in [0, 1]."], [18, 9, 2, 0, "tolerance", "CCD tolerance used by Tight-Inclusion CCD."], [18, 9, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [18, 9, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.EdgeEdgeCandidate": [[18, 8, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [18, 10, 1, 0, "edge0_id", "ID of the first edge"], [18, 10, 1, 0, "edge1_id", "ID of the second edge"], [18, 8, 1, 0, "num_vertices", ""], [18, 8, 1, 0, "print_ccd_query", ""], [18, 8, 1, 0, "vertex_ids", ""]], "ipctk.EdgeEdgeCandidate.ccd": [[18, 9, 2, 0, "conservative_rescaling", "Conservative rescaling value used to avoid taking steps exactly to impact."], [18, 9, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [18, 9, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [18, 9, 2, 0, "max_iterations", "Maximum iterations used by Tight-Inclusion CCD."], [18, 9, 2, 0, "tmax", "Maximum time (normalized) to look for collisions. Should be in [0, 1]."], [18, 9, 2, 0, "tolerance", "CCD tolerance used by Tight-Inclusion CCD."], [18, 9, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [18, 9, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.EdgeEdgeConstraint": [[20, 8, 1, 0, "compute_potential", ""], [20, 8, 1, 0, "compute_potential_gradient", ""], [20, 8, 1, 0, "compute_potential_hessian", ""]], "ipctk.EdgeEdgeFrictionConstraint": [[23, 8, 1, 0, "compute_potential", ""]], "ipctk.EdgeFaceCandidate": [[18, 10, 1, 0, "edge_id", "ID of the edge"], [18, 10, 1, 0, "face_id", "ID of the face"]], "ipctk.EdgeVertexCandidate": [[18, 8, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [18, 10, 1, 0, "edge_id", "ID of the edge"], [18, 8, 1, 0, "num_vertices", ""], [18, 8, 1, 0, "print_ccd_query", ""], [18, 10, 1, 0, "vertex_id", "ID of the vertex"], [18, 8, 1, 0, "vertex_ids", ""]], "ipctk.EdgeVertexCandidate.ccd": [[18, 9, 2, 0, "conservative_rescaling", "Conservative rescaling value used to avoid taking steps exactly to impact."], [18, 9, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [18, 9, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [18, 9, 2, 0, "max_iterations", "Maximum iterations used by Tight-Inclusion CCD."], [18, 9, 2, 0, "tmax", "Maximum time (normalized) to look for collisions. Should be in [0, 1]."], [18, 9, 2, 0, "tolerance", "CCD tolerance used by Tight-Inclusion CCD."], [18, 9, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [18, 9, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.EdgeVertexFrictionConstraint": [[23, 8, 1, 0, "compute_potential", ""]], "ipctk.FaceVertexCandidate": [[18, 8, 1, 0, "ccd", ""], [18, 10, 1, 0, "face_id", "ID of the face"], [18, 8, 1, 0, "num_vertices", ""], [18, 8, 1, 0, "print_ccd_query", ""], [18, 10, 1, 0, "vertex_id", "ID of the vertex"], [18, 8, 1, 0, "vertex_ids", ""]], "ipctk.FaceVertexFrictionConstraint": [[23, 8, 1, 0, "compute_potential", ""]], "ipctk.FrictionConstraint": [[23, 7, 1, 0, "DiffWRT", "Bases: pybind11_object"], [23, 10, 1, 0, "closest_point", "Barycentric coordinates of the closest point(s)"], [23, 8, 1, 0, "compute_force", "Overloaded function."], [23, 8, 1, 0, "compute_force_jacobian", "Overloaded function."], [23, 8, 1, 0, "compute_potential_gradient", "Compute the friction dissapative potential gradient wrt velocities."], [23, 8, 1, 0, "compute_potential_hessian", "Compute the friction dissapative potential hessian wrt velocities."], [23, 10, 1, 0, "mu", "Coefficient of friction"], [23, 10, 1, 0, "normal_force_magnitude", "Contact force magnitude"], [23, 10, 1, 0, "tangent_basis", "Tangent basis of the contact (max size 3\u00d72)"], [23, 10, 1, 0, "weight", "Weight"], [23, 10, 1, 0, "weight_gradient", "Gradient of weight with respect to all DOF"]], "ipctk.FrictionConstraint.DiffWRT": [[23, 10, 1, 0, "name", ""]], "ipctk.FrictionConstraint.compute_potential_gradient": [[23, 9, 2, 0, "edges", "Edges of the mesh"], [23, 9, 2, 0, "epsv_times_h", "$epsilon_vh$"], [23, 9, 2, 0, "faces", "Faces of the mesh"], [23, 9, 2, 0, "velocities", "Velocities of the vertices (rowwise)"]], "ipctk.FrictionConstraint.compute_potential_hessian": [[23, 9, 2, 0, "edges", "Edges of the mesh"], [23, 9, 2, 0, "epsv_times_h", "$epsilon_vh$"], [23, 9, 2, 0, "faces", "Faces of the mesh"], [23, 9, 2, 0, "project_hessian_to_psd", "Project the hessian to PSD"], [23, 9, 2, 0, "velocities", "Velocities of the vertices (rowwise)"]], "ipctk.FrictionConstraints": [[23, 8, 1, 0, "build", "Overloaded function."], [23, 8, 1, 0, "clear", "Clear the friction constraints."], [23, 8, 1, 0, "compute_force", "Overloaded function."], [23, 8, 1, 0, "compute_force_jacobian", "Overloaded function."], [23, 8, 1, 0, "compute_potential", "Compute the friction dissapative potential from the given velocity."], [23, 8, 1, 0, "compute_potential_gradient", "Compute the gradient of the friction dissapative potential wrt the velocity."], [23, 8, 1, 0, "compute_potential_hessian", "Compute the Hessian of the friction dissapative potential wrt the velocity."], [23, 8, 1, 0, "empty", "Get if the friction constraints are empty."]], "ipctk.HashGrid": [[17, 8, 1, 0, "build", "Overloaded function."], [17, 8, 1, 0, "cellSize", ""], [17, 8, 1, 0, "clear", "Clear the hash grid."], [17, 8, 1, 0, "detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [17, 8, 1, 0, "detect_edge_face_candidates", "Find the candidate edge-face intersections."], [17, 8, 1, 0, "detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [17, 8, 1, 0, "detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [17, 8, 1, 0, "domainMax", ""], [17, 8, 1, 0, "domainMin", ""], [17, 8, 1, 0, "gridSize", ""]], "ipctk.PlaneVertexConstraint": [[20, 8, 1, 0, "num_vertices", ""], [20, 8, 1, 0, "vertex_ids", ""]], "ipctk.SpatialHash": [[17, 8, 1, 0, "build", "Overloaded function."], [17, 8, 1, 0, "clear", ""], [17, 8, 1, 0, "detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [17, 8, 1, 0, "detect_edge_face_candidates", "Find the candidate edge-face intersections."], [17, 8, 1, 0, "detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [17, 8, 1, 0, "detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [17, 8, 1, 0, "queryEdgeForEdges", "Overloaded function."], [17, 8, 1, 0, "queryEdgeForEdgesWithBBoxCheck", "Overloaded function."], [17, 8, 1, 0, "queryEdgeForPE", ""], [17, 8, 1, 0, "queryEdgeForTriangles", "Overloaded function."], [17, 8, 1, 0, "queryPointForEdges", ""], [17, 8, 1, 0, "queryPointForPrimitives", "Overloaded function."], [17, 8, 1, 0, "queryPointForTriangles", "Overloaded function."], [17, 8, 1, 0, "queryTriangleForEdges", ""], [17, 8, 1, 0, "queryTriangleForPoints", "Overloaded function."]], "ipctk.SweepAndTiniestQueue": [[17, 8, 1, 0, "build", "Overloaded function."], [17, 8, 1, 0, "clear", "Clear any built data."], [17, 8, 1, 0, "detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [17, 8, 1, 0, "detect_edge_face_candidates", "Find the candidate edge-face intersections."], [17, 8, 1, 0, "detect_edge_vertex_candidates", "Find the candidate edge-vertex collisisons."], [17, 8, 1, 0, "detect_face_vertex_candidates", "Find the candidate face-vertex collisions."]], "ipctk.VertexVertexCandidate": [[18, 8, 1, 0, "num_vertices", ""], [18, 10, 1, 0, "vertex0_id", "ID of the first vertex"], [18, 10, 1, 0, "vertex1_id", "ID of the second vertex"], [18, 8, 1, 0, "vertex_ids", "Get the indices of the vertices"]], "ipctk.VertexVertexCandidate.vertex_ids": [[18, 9, 2, 0, "edges", "edge matrix of mesh"], [18, 9, 2, 0, "faces", "face matrix of mesh"]], "ipctk.VertexVertexFrictionConstraint": [[23, 8, 1, 0, "compute_potential", ""]], "ipctk.barrier": [[16, 9, 2, 0, "d", "distance"], [16, 9, 2, 0, "dhat", "activation distance of the barrier"]], "ipctk.barrier_gradient": [[16, 9, 2, 0, "d", "distance"], [16, 9, 2, 0, "dhat", "activation distance of the barrier"]], "ipctk.barrier_hessian": [[16, 9, 2, 0, "d", "distance"], [16, 9, 2, 0, "dhat", "activation distance of the barrier"]], "ipctk.df1_x_minus_f1_over_x3": [[23, 9, 2, 0, "epsv_times_h", "Mollifier parameter \\epsilon_v h."], [23, 9, 2, 0, "x", "The tangential relative speed."]], "ipctk.edge_edge_cross_squarednorm": [[22, 9, 2, 0, "ea0", "first vertex of the first edge"], [22, 9, 2, 0, "ea1", "second vertex of the first edge"], [22, 9, 2, 0, "eb0", "first vertex of the second edge"], [22, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_cross_squarednorm_gradient": [[22, 9, 2, 0, "ea0", "first vertex of the first edge"], [22, 9, 2, 0, "ea1", "second vertex of the first edge"], [22, 9, 2, 0, "eb0", "first vertex of the second edge"], [22, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_cross_squarednorm_hessian": [[22, 9, 2, 0, "ea0", "first vertex of the first edge"], [22, 9, 2, 0, "ea1", "second vertex of the first edge"], [22, 9, 2, 0, "eb0", "first vertex of the second edge"], [22, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_distance_type": [[22, 9, 2, 0, "ea0", "first vertex of the first edge"], [22, 9, 2, 0, "ea1", "second vertex of the first edge"], [22, 9, 2, 0, "eb0", "first vertex of the second edge"], [22, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_mollifier_threshold": [[22, 9, 2, 0, "ea0_rest", "rest position of the first vertex of the first edge"], [22, 9, 2, 0, "ea1_rest", "rest position of the second vertex of the first edge"], [22, 9, 2, 0, "eb0_rest", "rest position of the first vertex of the second edge"], [22, 9, 2, 0, "eb1_rest", "rest position of the second vertex of the second edge"]], "ipctk.edge_edge_relative_velocity": [[23, 9, 2, 0, "coords", "Two parametric coordinates of the closest points on the edges"], [23, 9, 2, 0, "dea0", "Velocity of the first endpoint of the first edge"], [23, 9, 2, 0, "dea1", "Velocity of the second endpoint of the first edge"], [23, 9, 2, 0, "deb0", "Velocity of the first endpoint of the second edge"], [23, 9, 2, 0, "deb1", "Velocity of the second endpoint of the second edge"]], "ipctk.f0_SF": [[23, 9, 2, 0, "epsv_times_h", "Mollifier parameter \\epsilon_v h."], [23, 9, 2, 0, "x", "The tangential relative speed."]], "ipctk.f1_SF_over_x": [[23, 9, 2, 0, "epsv_times_h", "Mollifier parameter \\epsilon_v h."], [23, 9, 2, 0, "x", "The tangential relative speed."]], "ipctk.initial_barrier_stiffness": [[16, 9, 2, 0, "average_mass", "Average mass of all bodies."], [16, 9, 2, 0, "bbox_diagonal", "Length of the diagonal of the bounding box of the scene."], [16, 9, 2, 0, "dhat", "Activation distance of the barrier."], [16, 9, 2, 0, "dmin", "Minimum distance between elements."], [16, 9, 2, 0, "grad_barrier", "Gradient of the barrier potential."], [16, 9, 2, 0, "grad_energy", "Gradient of the elasticity energy function."], [16, 9, 2, 0, "min_barrier_stiffness_scale", "Scale used to premultiply the minimum barrier stiffness."]], "ipctk.line_line_distance": [[22, 9, 2, 0, "ea0", "first vertex of the edge defining the first line"], [22, 9, 2, 0, "ea1", "second vertex of the edge defining the first line"], [22, 9, 2, 0, "eb0", "first vertex of the edge defining the second line"], [22, 9, 2, 0, "eb1", "second vertex of the edge defining the second line"]], "ipctk.line_line_distance_gradient": [[22, 9, 2, 0, "ea0", "first vertex of the edge defining the first line"], [22, 9, 2, 0, "ea1", "second vertex of the edge defining the first line"], [22, 9, 2, 0, "eb0", "first vertex of the edge defining the second line"], [22, 9, 2, 0, "eb1", "second vertex of the edge defining the second line"]], "ipctk.line_line_distance_hessian": [[22, 9, 2, 0, "ea0", "first vertex of the edge defining the first line"], [22, 9, 2, 0, "ea1", "second vertex of the edge defining the first line"], [22, 9, 2, 0, "eb0", "first vertex of the edge defining the second line"], [22, 9, 2, 0, "eb1", "second vertex of the edge defining the second line"]], "ipctk.point_edge_distance_type": [[22, 9, 2, 0, "e0", "first vertex of the edge"], [22, 9, 2, 0, "e1", "second vertex of the edge"], [22, 9, 2, 0, "p", "point"]], "ipctk.point_edge_relative_velocity": [[23, 9, 2, 0, "alpha", "Parametric coordinate of the closest point on the edge"], [23, 9, 2, 0, "de0", "Velocity of the first endpoint of the edge"], [23, 9, 2, 0, "de1", "Velocity of the second endpoint of the edge"], [23, 9, 2, 0, "dp", "Velocity of the point"]], "ipctk.point_line_distance": [[22, 9, 2, 0, "e0", "first vertex of the edge defining the line"], [22, 9, 2, 0, "e1", "second vertex of the edge defining the line"], [22, 9, 2, 0, "p", "point"]], "ipctk.point_line_distance_gradient": [[22, 9, 2, 0, "e0", "first vertex of the edge defining the line."], [22, 9, 2, 0, "e1", "second vertex of the edge defining the line."], [22, 9, 2, 0, "p", "point"]], "ipctk.point_line_distance_hessian": [[22, 9, 2, 0, "e0", "first vertex of the edge defining the line"], [22, 9, 2, 0, "e1", "second vertex of the edge defining the line"], [22, 9, 2, 0, "p", "point"]], "ipctk.point_point_distance": [[22, 9, 2, 0, "p0", "first point"], [22, 9, 2, 0, "p1", "second point"]], "ipctk.point_point_distance_gradient": [[22, 9, 2, 0, "p0", "first point"], [22, 9, 2, 0, "p1", "second point"]], "ipctk.point_point_distance_hessian": [[22, 9, 2, 0, "p0", "first point"], [22, 9, 2, 0, "p1", "second point"]], "ipctk.point_point_relative_velocity": [[23, 9, 2, 0, "dp0", "Velocity of the first point"], [23, 9, 2, 0, "dp1", "Velocity of the second point"]], "ipctk.point_point_relative_velocity_matrix": [[23, 9, 2, 0, "dim", "Dimension (2 or 3)"]], "ipctk.point_point_relative_velocity_matrix_jacobian": [[23, 9, 2, 0, "dim", "Dimension (2 or 3)"]], "ipctk.point_point_tangent_basis": [[23, 9, 2, 0, "p0", "First point"], [23, 9, 2, 0, "p1", "Second point"]], "ipctk.point_triangle_distance_type": [[22, 9, 2, 0, "p", "point"], [22, 9, 2, 0, "t0", "first vertex of the triangle"], [22, 9, 2, 0, "t1", "second vertex of the triangle"], [22, 9, 2, 0, "t2", "third vertex of the triangle"]], "ipctk.point_triangle_relative_velocity": [[23, 9, 2, 0, "coords", "Baricentric coordinates of the closest point on the triangle"], [23, 9, 2, 0, "dp", "Velocity of the point"], [23, 9, 2, 0, "dt0", "Velocity of the first vertex of the triangle"], [23, 9, 2, 0, "dt1", "Velocity of the second vertex of the triangle"], [23, 9, 2, 0, "dt2", "Velocity of the third vertex of the triangle"]], "ipctk.point_triangle_tangent_basis": [[23, 9, 2, 0, "p", "Point"], [23, 9, 2, 0, "t0", "Triangle's first vertex"], [23, 9, 2, 0, "t1", "Triangle's second vertex"], [23, 9, 2, 0, "t2", "Triangle's third vertex"]], "ipctk.update_barrier_stiffness": [[16, 9, 2, 0, "barrier_stiffness", "Current barrier stiffness."], [16, 9, 2, 0, "bbox_diagonal", "Length of the diagonal of the bounding box of the scene."], [16, 9, 2, 0, "dhat_epsilon_scale", "Update if distance is less than this fraction of the diagonal."], [16, 9, 2, 0, "dmin", "Minimum distance between elements."], [16, 9, 2, 0, "max_barrier_stiffness", "Maximum stiffness of the barrier."], [16, 9, 2, 0, "min_distance", "Current minimum distance between elements."], [16, 9, 2, 0, "prev_min_distance", "Previous minimum distance between elements."]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:functionParam", "3": "cpp:member", "4": "cpp:enum", "5": "cpp:enumerator", "6": "cpp:templateTypeParam", "7": "py:class", "8": "py:method", "9": "py:parameter", "10": "py:property", "11": "py:function"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "functionParam", "C++ function parameter"], "3": ["cpp", "member", "C++ member"], "4": ["cpp", "enum", "C++ enum"], "5": ["cpp", "enumerator", "C++ enumerator"], "6": ["cpp", "templateTypeParam", "C++ type template parameter"], "7": ["py", "class", "Python class"], "8": ["py", "method", "Python method"], "9": ["py", "parameter", "Python parameter"], "10": ["py", "property", "Python property"], "11": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "2023": 0, "03": 0, "14": 0, "pr": 0, "25": 0, "ad": 0, "chang": 0, "01": 0, "17": 0, "22": 0, "2022": 0, "02": 0, "21": 0, "7": 0, "remov": 0, "2021": 0, "10": 0, "05": 0, "9e2cc2a": 0, "09": 0, "08": 0, "acf2a80": 0, "07": 0, "26": 0, "1479aae": 0, "e24c76d": 0, "fix": [0, 2], "a20f7a2": 0, "15": 0, "7301b42": 0, "86ae4e5": 0, "4d16954": 0, "b3808e1": 0, "06": 0, "18": 0, "aa59aeb": 0, "245b13b": 0, "11": 0, "5c34dcd": 0, "24056cc": 0, "81d65f3": 0, "04": 0, "59ec167": 0, "664d65f": 0, "9b4ebfc": 0, "29": 0, "293d0ad": 0, "c8a6d5": 0, "9c7493": 0, "b510253": 0, "a395175": 0, "12": 0, "deee6d0": 0, "2020": 0, "20": 0, "93143ad": 0, "4553509": 0, "51f4903": 0, "9be6c0f": 0, "cb8b53f": 0, "4a5f84f": 0, "1d51a61": 0, "b737fb0": 0, "6ee60a": 0, "cc3947d": 0, "5582582": 0, "b48ba0e": 0, "9a4576b": 0, "19": 0, "31a37e0": 0, "acb7664": 0, "7dd2ab7": 0, "contributor": 1, "coven": 1, "code": [1, 25], "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": 1, "1": 1, "correct": 1, "2": 1, "warn": [1, 22], "3": 1, "temporari": 1, "ban": 1, "4": 1, "perman": 1, "attribut": 1, "contribut": [2, 13, 15], "type": [2, 10, 22], "report": 2, "bug": 2, "implement": 2, "featur": [2, 13], "write": 2, "document": [2, 25], "submit": 2, "feedback": 2, "c": 3, "build": [3, 13, 15], "depend": [3, 13], "option": [3, 13], "usag": [3, 13], "unit": [3, 13], "test": [3, 13], "barrier": [4, 16], "adapt": [4, 16], "stiff": [4, 16], "broad": [5, 17], "phase": [5, 17], "candid": [6, 18], "continu": [7, 19], "collis": [7, 8, 9, 19, 20, 21], "detect": [7, 19], "constraint": [8, 11, 20, 23], "vertex": [8, 11, 20, 23], "edg": [8, 10, 11, 20, 22, 23], "face": [8, 20], "plane": [8, 10, 20, 22], "mesh": [9, 21], "distanc": [10, 22], "mollifi": [10, 11, 22, 23], "line": [10, 22], "point": [10, 22], "triangl": [10, 11, 22, 23], "friction": [11, 23], "smooth": [11, 23], "normal": [11, 23], "forc": [11, 23], "magnitud": [11, 23], "tangent": [11, 23], "basi": [11, 23], "jacobian": [11, 23], "rel": [11, 23], "veloc": [11, 23], "multipli": [11, 23], "matrici": [11, 23], "matrix": [11, 23], "util": [12, 24], "ipc": 13, "toolkit": 13, "descript": 13, "limit": 13, "python": [13, 15], "bind": 13, "citat": [13, 15], "licens": [13, 14, 15], "instal": 15, "exampl": 15, "note": [18, 19, 22], "logger": 24, "multi": 24, "thread": 24, "style": 25, "guid": 25, "format": 25, "name": 25, "convent": 25, "gener": 25, "specif": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Changelog": [[0, "changelog"]], "2023-03-14 (pr-25)": [[0, "pr-25"]], "Added": [[0, "added"], [0, "id2"], [0, "id3"], [0, "id5"], [0, "id8"], [0, "id15"], [0, "id23"], [0, "id24"], [0, "id26"], [0, "id29"], [0, "id31"], [0, "id32"], [0, "id33"], [0, "id43"], [0, "id44"], [0, "id45"], [0, "id46"], [0, "id49"], [0, "id53"], [0, "id55"]], "Changed": [[0, "changed"], [0, "id1"], [0, "id6"], [0, "id7"], [0, "id11"], [0, "id14"], [0, "id16"], [0, "id17"], [0, "id18"], [0, "id19"], [0, "id20"], [0, "id22"], [0, "id25"], [0, "id27"], [0, "id30"], [0, "id35"], [0, "id36"], [0, "id47"], [0, "id50"], [0, "id51"], [0, "id54"], [0, "id56"]], "2023-01-17 (pr-22)": [[0, "pr-22"]], "2022-02-21 (pr-7)": [[0, "pr-7"]], "Removed": [[0, "removed"], [0, "id13"]], "2021-10-05 (9e2cc2a)": [[0, "e2cc2a"]], "2021-09-05 (9e2cc2a)": [[0, "id4"]], "2021-08-21 (acf2a80)": [[0, "acf2a80"]], "2021-07-26 (1479aae)": [[0, "aae"]], "2021-07-22 (e24c76d)": [[0, "e24c76d"]], "Fixed": [[0, "fixed"], [0, "id9"], [0, "id10"], [0, "id12"], [0, "id21"], [0, "id28"], [0, "id38"], [0, "id39"], [0, "id40"], [0, "id41"], [0, "id42"], [0, "id52"]], "2021-07-17 (a20f7a2)": [[0, "a20f7a2"]], "2021-07-15 (7301b42)": [[0, "b42"]], "2021-07-08 (86ae4e5)": [[0, "ae4e5"]], "2021-07-05 (4d16954)": [[0, "d16954"]], "2021-07-05 (b3808e1)": [[0, "b3808e1"]], "2021-06-18 (aa59aeb)": [[0, "aa59aeb"]], "2021-05-18 (245b13b)": [[0, "b13b"]], "2021-05-11 (5c34dcd)": [[0, "c34dcd"]], "2021-05-06 (24056cc)": [[0, "cc"]], "2021-05-06 (81d65f3)": [[0, "d65f3"]], "2021-05-04 (59ec167)": [[0, "ec167"]], "2021-05-03 (664d65f)": [[0, "d65f"]], "2021-05-03 (9b4ebfc)": [[0, "b4ebfc"]], "2021-04-29 (293d0ad)": [[0, "d0ad"]], "2021-04-21 (c8a6d5)": [[0, "c8a6d5"]], "2021-02-11 (9c7493)": [[0, "c7493"]], "2021-02-01 (b510253)": [[0, "b510253"]], "2021-02-01 (a395175)": [[0, "a395175"]], "2021-01-12 (deee6d0)": [[0, "deee6d0"]], "2021-01-09 (deee6d0)": [[0, "id34"]], "2020-11-20 (93143ad)": [[0, "ad"]], "2020-11-06 (4553509)": [[0, "id37"]], "2020-10-22 (51f4903)": [[0, "f4903"]], "2020-10-22 (9be6c0f)": [[0, "be6c0f"]], "2020-10-10 (cb8b53f)": [[0, "cb8b53f"]], "2020-10-10 (4a5f84f)": [[0, "a5f84f"]], "2020-10-10 (1d51a61)": [[0, "d51a61"]], "2020-10-09 (b737fb0)": [[0, "b737fb0"]], "2020-10-08 (6ee60ae)": [[0, "ee60ae"]], "2020-10-08 (cc3947d)": [[0, "cc3947d"]], "2020-10-07 (5582582)": [[0, "id48"]], "2020-10-06 (b48ba0e)": [[0, "b48ba0e"]], "2020-10-05 (9a4576b)": [[0, "a4576b"]], "2020-09-19 (31a37e0)": [[0, "a37e0"]], "2020-09-19 (acb7664)": [[0, "acb7664"]], "2020-09-04 (7dd2ab7)": [[0, "dd2ab7"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "Contributing": [[2, "contributing"], [13, "contributing"], [15, "contributing"]], "Types of Contributions": [[2, "types-of-contributions"]], "Report Bugs": [[2, "report-bugs"]], "Fix Bugs": [[2, "fix-bugs"]], "Implement Features": [[2, "implement-features"]], "Write Documentation": [[2, "write-documentation"]], "Submit Feedback": [[2, "submit-feedback"]], "C++": [[3, "c"]], "Build": [[3, "build"], [13, "build"]], "Dependencies": [[3, "dependencies"], [3, "id1"], [13, "dependencies"], [13, "id1"]], "Optional": [[3, "optional"], [13, "optional"]], "Usage": [[3, "usage"], [13, "usage"]], "Unit Tests": [[3, "unit-tests"], [13, "unit-tests"]], "Barrier": [[4, "barrier"], [16, "barrier"]], "Adaptive Barrier Stiffness": [[4, "adaptive-barrier-stiffness"], [16, "adaptive-barrier-stiffness"]], "Broad Phase": [[5, "broad-phase"], [17, "broad-phase"]], "Candidates": [[6, "candidates"], [18, "candidates"]], "Continuous Collision Detection": [[7, "continuous-collision-detection"], [19, "continuous-collision-detection"]], "Collision Constraints": [[8, "collision-constraints"], [8, "id1"], [20, "collision-constraints"], [20, "id1"]], "Collision Constraint": [[8, "collision-constraint"], [20, "collision-constraint"]], "Vertex-Vertex Collision Constraint": [[8, "vertex-vertex-collision-constraint"], [20, "vertex-vertex-collision-constraint"]], "Edge-Vertex Collision Constraint": [[8, "edge-vertex-collision-constraint"], [20, "edge-vertex-collision-constraint"]], "Edge-Edge Collision Constraint": [[8, "edge-edge-collision-constraint"], [20, "edge-edge-collision-constraint"]], "Face-Vertex Collision Constraint": [[8, "face-vertex-collision-constraint"], [20, "face-vertex-collision-constraint"]], "Plane-Vertex Collision Constraint": [[8, "plane-vertex-collision-constraint"], [20, "plane-vertex-collision-constraint"]], "Collision Mesh": [[9, "collision-mesh"], [21, "collision-mesh"]], "Distance": [[10, "distance"], [22, "distance"]], "Distance Type": [[10, "distance-type"], [22, "distance-type"]], "Edge-Edge Mollifier": [[10, "edge-edge-mollifier"], [22, "edge-edge-mollifier"]], "Edge-Edge": [[10, "edge-edge"], [22, "edge-edge"]], "Line-Line": [[10, "line-line"], [22, "line-line"]], "Point-Edge": [[10, "point-edge"], [22, "point-edge"]], "Point-Line": [[10, "point-line"], [22, "point-line"]], "Point-Plane": [[10, "point-plane"], [22, "point-plane"]], "Point-Point": [[10, "point-point"], [22, "point-point"]], "Point-Triangle": [[10, "point-triangle"], [22, "point-triangle"]], "Friction": [[11, "friction"], [23, "friction"]], "Friction Constraints": [[11, "friction-constraints"], [23, "friction-constraints"]], "Friction Constraint": [[11, "friction-constraint"], [23, "friction-constraint"]], "Vertex-Vertex Friction Constraint": [[11, "vertex-vertex-friction-constraint"], [23, "vertex-vertex-friction-constraint"]], "Edge-Vertex Friction Constraint": [[11, "edge-vertex-friction-constraint"], [23, "edge-vertex-friction-constraint"]], "Edge-Edge Friction Constraint": [[11, "edge-edge-friction-constraint"], [23, "edge-edge-friction-constraint"]], "Triangle-Vertex Friction Constraint": [[11, "triangle-vertex-friction-constraint"], [23, "triangle-vertex-friction-constraint"]], "Smooth Mollifier": [[11, "smooth-mollifier"], [23, "smooth-mollifier"]], "Normal Force Magnitude": [[11, "normal-force-magnitude"], [23, "normal-force-magnitude"]], "Tangent Basis": [[11, "tangent-basis"], [23, "tangent-basis"]], "Tangent Basis Jacobians": [[11, "tangent-basis-jacobians"], [23, "tangent-basis-jacobians"]], "Relative Velocity": [[11, "relative-velocity"], [23, "relative-velocity"]], "Relative Velocity as Multiplier Matricies": [[11, "relative-velocity-as-multiplier-matricies"], [23, "relative-velocity-as-multiplier-matricies"]], "Relative Velocity Matrix Jacobians": [[11, "relative-velocity-matrix-jacobians"], [23, "relative-velocity-matrix-jacobians"]], "Utils": [[12, "utils"], [24, "utils"]], "IPC Toolkit": [[13, "ipc-toolkit"]], "Description": [[13, "description"]], "Features": [[13, "features"]], "Limitations": [[13, "limitations"]], "Python Bindings": [[13, "python-bindings"]], "Citation": [[13, "citation"], [15, "citation"]], "License": [[13, "license"], [14, "license"], [15, "license"]], "Python": [[15, "python"]], "Build and Install": [[15, "build-and-install"]], "Examples": [[15, "examples"]], "Note": [[18, null], [18, null], [19, null], [19, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null], [22, null]], "Warning": [[22, null], [22, null], [22, null]], "Logger": [[24, "logger"]], "Multi-Threading": [[24, "multi-threading"]], "Style Guide": [[25, "style-guide"]], "Code Formatting": [[25, "code-formatting"]], "Naming conventions": [[25, "naming-conventions"]], "General": [[25, "general"]], "Specific": [[25, "specific"]], "Documentation": [[25, "documentation"]]}, "indexentries": {"ipc::barrier (c++ function)": [[4, "_CPPv4I0EN3ipc7barrierE1TRK1TKd"]], "ipc::barrier_gradient (c++ function)": [[4, "_CPPv4N3ipc16barrier_gradientEKdKd"]], "ipc::barrier_hessian (c++ function)": [[4, "_CPPv4N3ipc15barrier_hessianEKdKd"]], "ipc::initial_barrier_stiffness (c++ function)": [[4, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd"]], "ipc::update_barrier_stiffness (c++ function)": [[4, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd"]], "ipc::aabb (c++ class)": [[5, "_CPPv4N3ipc4AABBE"]], "ipc::aabb::aabb (c++ function)": [[5, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d"], [5, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB"], [5, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB"], [5, "_CPPv4N3ipc4AABB4AABBEv"]], "ipc::aabb::conservative_inflation (c++ function)": [[5, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd"]], "ipc::aabb::from_point (c++ function)": [[5, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd"], [5, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd"]], "ipc::aabb::intersects (c++ function)": [[5, "_CPPv4NK3ipc4AABB10intersectsERK4AABB"]], "ipc::aabb::max (c++ member)": [[5, "_CPPv4N3ipc4AABB3maxE"]], "ipc::aabb::min (c++ member)": [[5, "_CPPv4N3ipc4AABB3minE"]], "ipc::aabb::vertex_ids (c++ member)": [[5, "_CPPv4N3ipc4AABB10vertex_idsE"]], "ipc::broadphase (c++ class)": [[5, "_CPPv4N3ipc10BroadPhaseE"]], "ipc::broadphase::build (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"]], "ipc::broadphase::can_vertices_collide (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase20can_vertices_collideE"]], "ipc::broadphase::clear (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase5clearEv"]], "ipc::broadphase::default_can_vertices_collide (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase28default_can_vertices_collideE6size_t6size_t"]], "ipc::broadphase::detect_collision_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates"]], "ipc::broadphase::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::broadphase::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::broadphase::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::broadphase::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::broadphase::make_broad_phase (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod"]], "ipc::broadphase::~broadphase (c++ function)": [[5, "_CPPv4N3ipc10BroadPhaseD0Ev"]], "ipc::broadphasemethod (c++ enum)": [[5, "_CPPv4N3ipc16BroadPhaseMethodE"]], "ipc::broadphasemethod::brute_force (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11BRUTE_FORCEE"]], "ipc::broadphasemethod::hash_grid (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod9HASH_GRIDE"]], "ipc::broadphasemethod::num_methods (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11NUM_METHODSE"]], "ipc::broadphasemethod::spatial_hash (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod12SPATIAL_HASHE"]], "ipc::broadphasemethod::sweep_and_tiniest_queue (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod23SWEEP_AND_TINIEST_QUEUEE"]], "ipc::broadphasemethod::sweep_and_tiniest_queue_gpu (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod27SWEEP_AND_TINIEST_QUEUE_GPUE"]], "ipc::bruteforce (c++ class)": [[5, "_CPPv4N3ipc10BruteForceE"]], "ipc::bruteforce::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::bruteforce::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::bruteforce::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::bruteforce::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::default_broad_phase_method (c++ member)": [[5, "_CPPv4N3ipc26DEFAULT_BROAD_PHASE_METHODE"]], "ipc::hashgrid (c++ class)": [[5, "_CPPv4N3ipc8HashGridE"]], "ipc::hashgrid::build (c++ function)": [[5, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"]], "ipc::hashgrid::cellsize (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid8cellSizeEv"]], "ipc::hashgrid::clear (c++ function)": [[5, "_CPPv4N3ipc8HashGrid5clearEv"]], "ipc::hashgrid::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::hashgrid::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::hashgrid::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::hashgrid::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::hashgrid::domainmax (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid9domainMaxEv"]], "ipc::hashgrid::domainmin (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid9domainMinEv"]], "ipc::hashgrid::gridsize (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid8gridSizeEv"]], "ipc::spatialhash (c++ class)": [[5, "_CPPv4N3ipc11SpatialHashE"]], "ipc::spatialhash::spatialhash (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"], [5, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"], [5, "_CPPv4N3ipc11SpatialHash11SpatialHashEv"]], "ipc::spatialhash::build (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"]], "ipc::spatialhash::clear (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash5clearEv"]], "ipc::spatialhash::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::spatialhash::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::spatialhash::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::spatialhash::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::spatialhash::edgestartind (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash12edgeStartIndE"]], "ipc::spatialhash::leftbottomcorner (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash16leftBottomCornerE"]], "ipc::spatialhash::one_div_voxelsize (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash17one_div_voxelSizeE"]], "ipc::spatialhash::pointandedgeoccupancy (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash21pointAndEdgeOccupancyE"]], "ipc::spatialhash::queryedgeforedges (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi"], [5, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi"], [5, "_CPPv4NK3ipc11SpatialHash17queryEdgeForEdgesEiR13unordered_setIiE"]], "ipc::spatialhash::queryedgeforedgeswithbboxcheck (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiEiR13unordered_setIiE"], [5, "_CPPv4NK3ipc11SpatialHash30queryEdgeForEdgesWithBBoxCheckERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEEdi"]], "ipc::spatialhash::queryedgeforpe (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash14queryEdgeForPEERK11VectorMax3dRK11VectorMax3dRNSt6vectorIiEERNSt6vectorIiEEd"]], "ipc::spatialhash::queryedgefortriangles (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd"], [5, "_CPPv4NK3ipc11SpatialHash21queryEdgeForTrianglesEiR13unordered_setIiE"]], "ipc::spatialhash::querypointforedges (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash18queryPointForEdgesEiR13unordered_setIiE"]], "ipc::spatialhash::querypointforprimitives (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiER13unordered_setIiER13unordered_setIiEd"], [5, "_CPPv4NK3ipc11SpatialHash23queryPointForPrimitivesEiR13unordered_setIiER13unordered_setIiER13unordered_setIiE"]], "ipc::spatialhash::querypointfortriangles (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dR13unordered_setIiEd"], [5, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesERK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd"], [5, "_CPPv4NK3ipc11SpatialHash22queryPointForTrianglesEiR13unordered_setIiE"]], "ipc::spatialhash::querytriangleforedges (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash21queryTriangleForEdgesERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd"]], "ipc::spatialhash::querytriangleforpoints (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd"], [5, "_CPPv4NK3ipc11SpatialHash22queryTriangleForPointsERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dR13unordered_setIiEd"]], "ipc::spatialhash::righttopcorner (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash14rightTopCornerE"]], "ipc::spatialhash::tristartind (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash11triStartIndE"]], "ipc::spatialhash::voxel (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash5voxelE"]], "ipc::spatialhash::voxelcount (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash10voxelCountE"]], "ipc::spatialhash::voxelcount0x1 (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash13voxelCount0x1E"]], "ipc::sweepandtiniestqueue (c++ class)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueueE"]], "ipc::sweepandtiniestqueue::build (c++ function)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"]], "ipc::sweepandtiniestqueue::clear (c++ function)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueue5clearEv"]], "ipc::sweepandtiniestqueue::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::sweepandtiniestqueue::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::sweepandtiniestqueue::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::sweepandtiniestqueue::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::candidates (c++ class)": [[6, "_CPPv4N3ipc10CandidatesE"]], "ipc::candidates::candidates (c++ function)": [[6, "_CPPv4N3ipc10Candidates10CandidatesEv"]], "ipc::candidates::build (c++ function)": [[6, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod"], [6, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod"]], "ipc::candidates::clear (c++ function)": [[6, "_CPPv4N3ipc10Candidates5clearEv"]], "ipc::candidates::compute_collision_free_stepsize (c++ function)": [[6, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl"]], "ipc::candidates::ee_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13ee_candidatesE"]], "ipc::candidates::empty (c++ function)": [[6, "_CPPv4NK3ipc10Candidates5emptyEv"]], "ipc::candidates::ev_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13ev_candidatesE"]], "ipc::candidates::fv_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13fv_candidatesE"]], "ipc::candidates::is_step_collision_free (c++ function)": [[6, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl"]], "ipc::candidates::operator[] (c++ function)": [[6, "_CPPv4N3ipc10CandidatesixE6size_t"], [6, "_CPPv4NK3ipc10CandidatesixE6size_t"]], "ipc::candidates::save_obj (c++ function)": [[6, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::candidates::size (c++ function)": [[6, "_CPPv4NK3ipc10Candidates4sizeEv"]], "ipc::collisionstencil (c++ class)": [[6, "_CPPv4N3ipc16CollisionStencilE"]], "ipc::collisionstencil::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::dof (c++ function)": [[6, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil12num_verticesEv"]], "ipc::collisionstencil::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::vertices (c++ function)": [[6, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::~collisionstencil (c++ function)": [[6, "_CPPv4N3ipc16CollisionStencilD0Ev"]], "ipc::continuouscollisioncandidate (c++ class)": [[6, "_CPPv4N3ipc28ContinuousCollisionCandidateE"]], "ipc::continuouscollisioncandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::continuouscollisioncandidate::print_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc28ContinuousCollisionCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::continuouscollisioncandidate::~continuouscollisioncandidate (c++ function)": [[6, "_CPPv4N3ipc28ContinuousCollisionCandidateD0Ev"]], "ipc::edgeedgecandidate (c++ class)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidateE"]], "ipc::edgeedgecandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::edgeedgecandidate (c++ function)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll"]], "ipc::edgeedgecandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::edgeedgecandidate::edge0_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate8edge0_idE"]], "ipc::edgeedgecandidate::edge1_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate8edge1_idE"]], "ipc::edgeedgecandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate12num_verticesEv"]], "ipc::edgeedgecandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateneERK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateltERK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateeqERK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::print_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgeedgecandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgefacecandidate (c++ class)": [[6, "_CPPv4N3ipc17EdgeFaceCandidateE"]], "ipc::edgefacecandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate"]], "ipc::edgefacecandidate::edgefacecandidate (c++ function)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll"]], "ipc::edgefacecandidate::edge_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate7edge_idE"]], "ipc::edgefacecandidate::face_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate7face_idE"]], "ipc::edgefacecandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateneERK17EdgeFaceCandidate"]], "ipc::edgefacecandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateltERK17EdgeFaceCandidate"]], "ipc::edgefacecandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateeqERK17EdgeFaceCandidate"]], "ipc::edgevertexcandidate (c++ class)": [[6, "_CPPv4N3ipc19EdgeVertexCandidateE"]], "ipc::edgevertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::edgevertexcandidate (c++ function)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll"]], "ipc::edgevertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::edgevertexcandidate::edge_id (c++ member)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate7edge_idE"]], "ipc::edgevertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate12num_verticesEv"]], "ipc::edgevertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateneERK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateltERK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateeqERK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::print_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgevertexcandidate::vertex_id (c++ member)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate9vertex_idE"]], "ipc::edgevertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::facevertexcandidate (c++ class)": [[6, "_CPPv4N3ipc19FaceVertexCandidateE"]], "ipc::facevertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate"]], "ipc::facevertexcandidate::facevertexcandidate (c++ function)": [[6, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll"]], "ipc::facevertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::facevertexcandidate::face_id (c++ member)": [[6, "_CPPv4N3ipc19FaceVertexCandidate7face_idE"]], "ipc::facevertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate12num_verticesEv"]], "ipc::facevertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateneERK19FaceVertexCandidate"]], "ipc::facevertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateltERK19FaceVertexCandidate"]], "ipc::facevertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateeqERK19FaceVertexCandidate"]], "ipc::facevertexcandidate::print_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate15print_ccd_queryERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::facevertexcandidate::vertex_id (c++ member)": [[6, "_CPPv4N3ipc19FaceVertexCandidate9vertex_idE"]], "ipc::facevertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexcandidate (c++ class)": [[6, "_CPPv4N3ipc21VertexVertexCandidateE"]], "ipc::vertexvertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::vertexvertexcandidate (c++ function)": [[6, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll"]], "ipc::vertexvertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate12num_verticesEv"]], "ipc::vertexvertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateneERK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateltERK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateeqERK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::vertex0_id (c++ member)": [[6, "_CPPv4N3ipc21VertexVertexCandidate10vertex0_idE"]], "ipc::vertexvertexcandidate::vertex1_id (c++ member)": [[6, "_CPPv4N3ipc21VertexVertexCandidate10vertex1_idE"]], "ipc::vertexvertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::default_ccd_conservative_rescaling (c++ member)": [[7, "_CPPv4N3ipc34DEFAULT_CCD_CONSERVATIVE_RESCALINGE"]], "ipc::default_ccd_max_iterations (c++ member)": [[7, "_CPPv4N3ipc26DEFAULT_CCD_MAX_ITERATIONSE"]], "ipc::default_ccd_tolerance (c++ member)": [[7, "_CPPv4N3ipc21DEFAULT_CCD_TOLERANCEE"]], "ipc::compute_collision_free_stepsize (c++ function)": [[7, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl"]], "ipc::edge_edge_ccd (c++ function)": [[7, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd"]], "ipc::is_step_collision_free (c++ function)": [[7, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl"]], "ipc::point_edge_ccd (c++ function)": [[7, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd"]], "ipc::point_point_ccd (c++ function)": [[7, "_CPPv4N3ipc15point_point_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd"]], "ipc::point_triangle_ccd (c++ function)": [[7, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd"]], "ipc::collisionconstraint (c++ class)": [[8, "_CPPv4N3ipc19CollisionConstraintE"]], "ipc::collisionconstraint::compute_potential (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::collisionconstraint::compute_potential_gradient (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::collisionconstraint::compute_potential_hessian (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb"]], "ipc::collisionconstraint::minimum_distance (c++ member)": [[8, "_CPPv4N3ipc19CollisionConstraint16minimum_distanceE"]], "ipc::collisionconstraint::weight (c++ member)": [[8, "_CPPv4N3ipc19CollisionConstraint6weightE"]], "ipc::collisionconstraint::weight_gradient (c++ member)": [[8, "_CPPv4N3ipc19CollisionConstraint15weight_gradientE"]], "ipc::collisionconstraint::~collisionconstraint (c++ function)": [[8, "_CPPv4N3ipc19CollisionConstraintD0Ev"]], "ipc::collisionconstraints (c++ class)": [[8, "_CPPv4N3ipc20CollisionConstraintsE"]], "ipc::collisionconstraints::collisionconstraints (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints20CollisionConstraintsEv"]], "ipc::collisionconstraints::are_shape_derivatives_enabled (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints29are_shape_derivatives_enabledEv"]], "ipc::collisionconstraints::build (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd"], [8, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod"]], "ipc::collisionconstraints::clear (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints5clearEv"]], "ipc::collisionconstraints::compute_minimum_distance (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE"], [12, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE"]], "ipc::collisionconstraints::compute_potential (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::collisionconstraints::compute_potential_gradient (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::collisionconstraints::compute_potential_hessian (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb"]], "ipc::collisionconstraints::compute_shape_derivative (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::collisionconstraints::ee_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14ee_constraintsE"]], "ipc::collisionconstraints::empty (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints5emptyEv"]], "ipc::collisionconstraints::ev_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14ev_constraintsE"]], "ipc::collisionconstraints::fv_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14fv_constraintsE"]], "ipc::collisionconstraints::operator[] (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraintsixE6size_t"], [8, "_CPPv4NK3ipc20CollisionConstraintsixE6size_t"]], "ipc::collisionconstraints::pv_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14pv_constraintsE"]], "ipc::collisionconstraints::set_are_shape_derivatives_enabled (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints33set_are_shape_derivatives_enabledEKb"]], "ipc::collisionconstraints::set_use_convergent_formulation (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints30set_use_convergent_formulationEKb"]], "ipc::collisionconstraints::size (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints4sizeEv"]], "ipc::collisionconstraints::use_convergent_formulation (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints26use_convergent_formulationEv"]], "ipc::collisionconstraints::vv_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14vv_constraintsE"]], "ipc::edgeedgeconstraint (c++ class)": [[8, "_CPPv4N3ipc18EdgeEdgeConstraintE"]], "ipc::edgeedgeconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint"]], "ipc::edgeedgeconstraint::edgeedgeconstraint (c++ function)": [[8, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidated"], [8, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintElld"]], "ipc::edgeedgeconstraint::compute_potential (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::edgeedgeconstraint::compute_potential_gradient (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::edgeedgeconstraint::compute_potential_hessian (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb"]], "ipc::edgeedgeconstraint::eps_x (c++ member)": [[8, "_CPPv4N3ipc18EdgeEdgeConstraint5eps_xE"]], "ipc::edgevertexconstraint (c++ class)": [[8, "_CPPv4N3ipc20EdgeVertexConstraintE"]], "ipc::edgevertexconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint"]], "ipc::edgevertexconstraint::edgevertexcandidate (c++ function)": [[8, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll"]], "ipc::edgevertexconstraint::edgevertexconstraint (c++ function)": [[8, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintERK19EdgeVertexCandidate"]], "ipc::facevertexconstraint (c++ class)": [[8, "_CPPv4N3ipc20FaceVertexConstraintE"]], "ipc::facevertexconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint"]], "ipc::facevertexconstraint::facevertexcandidate (c++ function)": [[8, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll"]], "ipc::facevertexconstraint::facevertexconstraint (c++ function)": [[8, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintERK19FaceVertexCandidate"]], "ipc::planevertexconstraint (c++ class)": [[8, "_CPPv4N3ipc21PlaneVertexConstraintE"]], "ipc::planevertexconstraint::planevertexconstraint (c++ function)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl"]], "ipc::planevertexconstraint::num_vertices (c++ function)": [[8, "_CPPv4NK3ipc21PlaneVertexConstraint12num_verticesEv"]], "ipc::planevertexconstraint::plane_normal (c++ member)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint12plane_normalE"]], "ipc::planevertexconstraint::plane_origin (c++ member)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint12plane_originE"]], "ipc::planevertexconstraint::vertex_id (c++ member)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint9vertex_idE"]], "ipc::planevertexconstraint::vertex_ids (c++ function)": [[8, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexconstraint (c++ class)": [[8, "_CPPv4N3ipc22VertexVertexConstraintE"]], "ipc::vertexvertexconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint"]], "ipc::vertexvertexconstraint::vertexvertexcandidate (c++ function)": [[8, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll"]], "ipc::vertexvertexconstraint::vertexvertexconstraint (c++ function)": [[8, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintERK21VertexVertexCandidate"]], "ipc::collisionmesh (c++ class)": [[9, "_CPPv4N3ipc13CollisionMeshE"]], "ipc::collisionmesh::collisionmesh (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE"], [9, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE"], [9, "_CPPv4N3ipc13CollisionMesh13CollisionMeshEv"]], "ipc::collisionmesh::are_adjacencies_initialized (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh27are_adjacencies_initializedEv"]], "ipc::collisionmesh::are_area_jacobians_initialized (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh30are_area_jacobians_initializedEv"]], "ipc::collisionmesh::build_from_full_mesh (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::can_collide (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh11can_collideE"]], "ipc::collisionmesh::construct_faces_to_edges (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::construct_is_on_surface (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::dim (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh3dimEv"]], "ipc::collisionmesh::displace_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::edge_area (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t"]], "ipc::collisionmesh::edge_area_gradient (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t"]], "ipc::collisionmesh::edge_areas (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh10edge_areasEv"]], "ipc::collisionmesh::edge_vertex_adjacencies (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh23edge_vertex_adjacenciesEv"]], "ipc::collisionmesh::edges (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh5edgesEv"]], "ipc::collisionmesh::faces (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh5facesEv"]], "ipc::collisionmesh::faces_to_edges (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh14faces_to_edgesEv"]], "ipc::collisionmesh::full_ndof (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9full_ndofEv"]], "ipc::collisionmesh::full_num_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17full_num_verticesEv"]], "ipc::collisionmesh::init_adjacencies (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh16init_adjacenciesEv"]], "ipc::collisionmesh::init_area_jacobians (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh19init_area_jacobiansEv"]], "ipc::collisionmesh::is_vertex_on_boundary (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi"]], "ipc::collisionmesh::map_displacements (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::ndof (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh4ndofEv"]], "ipc::collisionmesh::num_edges (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9num_edgesEv"]], "ipc::collisionmesh::num_faces (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9num_facesEv"]], "ipc::collisionmesh::num_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh12num_verticesEv"]], "ipc::collisionmesh::rest_positions (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh14rest_positionsEv"]], "ipc::collisionmesh::to_full_dof (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE"], [9, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE"]], "ipc::collisionmesh::to_full_vertex_id (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t"]], "ipc::collisionmesh::vertex_area (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t"]], "ipc::collisionmesh::vertex_area_gradient (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t"]], "ipc::collisionmesh::vertex_areas (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh12vertex_areasEv"]], "ipc::collisionmesh::vertex_vertex_adjacencies (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh25vertex_vertex_adjacenciesEv"]], "ipc::collisionmesh::vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::~collisionmesh (c++ function)": [[9, "_CPPv4N3ipc13CollisionMeshD0Ev"]], "ipc::edgeedgedistancetype (c++ enum)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceTypeE"]], "ipc::edgeedgedistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType4AUTOE"]], "ipc::edgeedgedistancetype::ea0_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA0_EBE"]], "ipc::edgeedgedistancetype::ea0_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB0E"]], "ipc::edgeedgedistancetype::ea0_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB1E"]], "ipc::edgeedgedistancetype::ea1_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA1_EBE"]], "ipc::edgeedgedistancetype::ea1_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB0E"]], "ipc::edgeedgedistancetype::ea1_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB1E"]], "ipc::edgeedgedistancetype::ea_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType5EA_EBE"]], "ipc::edgeedgedistancetype::ea_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB0E"]], "ipc::edgeedgedistancetype::ea_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB1E"]], "ipc::pointedgedistancetype (c++ enum)": [[10, "_CPPv4N3ipc21PointEdgeDistanceTypeE"]], "ipc::pointedgedistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4AUTOE"]], "ipc::pointedgedistancetype::p_e (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType3P_EE"]], "ipc::pointedgedistancetype::p_e0 (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4P_E0E"]], "ipc::pointedgedistancetype::p_e1 (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4P_E1E"]], "ipc::pointtriangledistancetype (c++ enum)": [[10, "_CPPv4N3ipc25PointTriangleDistanceTypeE"]], "ipc::pointtriangledistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4AUTOE"]], "ipc::pointtriangledistancetype::p_e0 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E0E"]], "ipc::pointtriangledistancetype::p_e1 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E1E"]], "ipc::pointtriangledistancetype::p_e2 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E2E"]], "ipc::pointtriangledistancetype::p_t (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType3P_TE"]], "ipc::pointtriangledistancetype::p_t0 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T0E"]], "ipc::pointtriangledistancetype::p_t1 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T1E"]], "ipc::pointtriangledistancetype::p_t2 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T2E"]], "ipc::edge_edge_cross_squarednorm (c++ function)": [[10, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::edge_edge_cross_squarednorm_gradient (c++ function)": [[10, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::edge_edge_cross_squarednorm_hessian (c++ function)": [[10, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::edge_edge_distance (c++ function)": [[10, "_CPPv4I0000EN3ipc18edge_edge_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE20EdgeEdgeDistanceType"]], "ipc::edge_edge_distance_gradient (c++ function)": [[10, "_CPPv4I00000EN3ipc27edge_edge_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE20EdgeEdgeDistanceType"]], "ipc::edge_edge_distance_hessian (c++ function)": [[10, "_CPPv4I00000EN3ipc26edge_edge_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE20EdgeEdgeDistanceType"]], "ipc::edge_edge_distance_type (c++ function)": [[10, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::edge_edge_mollifier (c++ function)": [[10, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd"], [10, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td"]], "ipc::edge_edge_mollifier_gradient (c++ function)": [[10, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE"], [10, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td"]], "ipc::edge_edge_mollifier_hessian (c++ function)": [[10, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE"], [10, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td"]], "ipc::edge_edge_mollifier_threshold (c++ function)": [[10, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::line_line_distance (c++ function)": [[10, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::line_line_distance_gradient (c++ function)": [[10, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::line_line_distance_hessian (c++ function)": [[10, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_edge_distance (c++ function)": [[10, "_CPPv4I000EN3ipc19point_edge_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE21PointEdgeDistanceType"]], "ipc::point_edge_distance_gradient (c++ function)": [[10, "_CPPv4I0000EN3ipc28point_edge_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE21PointEdgeDistanceType"]], "ipc::point_edge_distance_hessian (c++ function)": [[10, "_CPPv4I0000EN3ipc27point_edge_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE21PointEdgeDistanceType"]], "ipc::point_edge_distance_type (c++ function)": [[10, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE"]], "ipc::point_line_distance (c++ function)": [[10, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE"]], "ipc::point_line_distance_gradient (c++ function)": [[10, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::point_line_distance_hessian (c++ function)": [[10, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_plane_distance (c++ function)": [[10, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE"], [10, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE"]], "ipc::point_plane_distance_gradient (c++ function)": [[10, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE"], [10, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::point_plane_distance_hessian (c++ function)": [[10, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE"], [10, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_point_distance (c++ function)": [[10, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE"]], "ipc::point_point_distance_gradient (c++ function)": [[10, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::point_point_distance_hessian (c++ function)": [[10, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_triangle_distance (c++ function)": [[10, "_CPPv4I0000EN3ipc23point_triangle_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE25PointTriangleDistanceType"]], "ipc::point_triangle_distance_gradient (c++ function)": [[10, "_CPPv4I00000EN3ipc32point_triangle_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE25PointTriangleDistanceType"]], "ipc::point_triangle_distance_hessian (c++ function)": [[10, "_CPPv4I00000EN3ipc31point_triangle_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE25PointTriangleDistanceType"]], "ipc::point_triangle_distance_type (c++ function)": [[10, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE"]], "ipc::edgeedgefrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraintE"]], "ipc::edgeedgefrictionconstraint::edgeedgecandidate (c++ function)": [[11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll"]], "ipc::edgeedgefrictionconstraint::edgeedgefrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraint"], [11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::edgeedgefrictionconstraint::compute_potential (c++ function)": [[11, "_CPPv4I0ENK3ipc26EdgeEdgeFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::edgevertexfrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc28EdgeVertexFrictionConstraintE"]], "ipc::edgevertexfrictionconstraint::edgevertexcandidate (c++ function)": [[11, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll"]], "ipc::edgevertexfrictionconstraint::edgevertexfrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraint"], [11, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::edgevertexfrictionconstraint::compute_potential (c++ function)": [[11, "_CPPv4I0ENK3ipc28EdgeVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::facevertexfrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc28FaceVertexFrictionConstraintE"]], "ipc::facevertexfrictionconstraint::facevertexcandidate (c++ function)": [[11, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll"]], "ipc::facevertexfrictionconstraint::facevertexfrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraint"], [11, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::facevertexfrictionconstraint::compute_potential (c++ function)": [[11, "_CPPv4I0ENK3ipc28FaceVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::frictionconstraint (c++ class)": [[11, "_CPPv4N3ipc18FrictionConstraintE"]], "ipc::frictionconstraint::diffwrt (c++ enum)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRTE"]], "ipc::frictionconstraint::diffwrt::u (c++ enumerator)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRT1UE"]], "ipc::frictionconstraint::diffwrt::ut (c++ enumerator)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRT2UtE"]], "ipc::frictionconstraint::diffwrt::x (c++ enumerator)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRT1XE"]], "ipc::frictionconstraint::closest_point (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint13closest_pointE"]], "ipc::frictionconstraint::compute_force (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb"], [11, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb"]], "ipc::frictionconstraint::compute_force_jacobian (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd"], [11, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd"]], "ipc::frictionconstraint::compute_potential_gradient (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::frictionconstraint::compute_potential_hessian (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb"]], "ipc::frictionconstraint::mu (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint2muE"]], "ipc::frictionconstraint::normal_force_magnitude (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint22normal_force_magnitudeE"]], "ipc::frictionconstraint::tangent_basis (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint13tangent_basisE"]], "ipc::frictionconstraint::weight (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint6weightE"]], "ipc::frictionconstraint::weight_gradient (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint15weight_gradientE"]], "ipc::frictionconstraint::~frictionconstraint (c++ function)": [[11, "_CPPv4N3ipc18FrictionConstraintD0Ev"]], "ipc::frictionconstraints (c++ class)": [[11, "_CPPv4N3ipc19FrictionConstraintsE"]], "ipc::frictionconstraints::frictionconstraints (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints19FrictionConstraintsEv"]], "ipc::frictionconstraints::build (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddRKN5Eigen8VectorXdERKNSt8functionIFdddEEE"], [11, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd"]], "ipc::frictionconstraints::clear (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints5clearEv"]], "ipc::frictionconstraints::compute_force (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb"], [11, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb"]], "ipc::frictionconstraints::compute_force_jacobian (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd"], [11, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd"]], "ipc::frictionconstraints::compute_potential (c++ function)": [[11, "_CPPv4I0ENK3ipc19FrictionConstraints17compute_potentialE1TRK13CollisionMeshRK7MatrixXI1TEd"]], "ipc::frictionconstraints::compute_potential_gradient (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEd"]], "ipc::frictionconstraints::compute_potential_hessian (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEdb"]], "ipc::frictionconstraints::default_blend_mu (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd"]], "ipc::frictionconstraints::ee_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14ee_constraintsE"]], "ipc::frictionconstraints::empty (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints5emptyEv"]], "ipc::frictionconstraints::ev_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14ev_constraintsE"]], "ipc::frictionconstraints::fv_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14fv_constraintsE"]], "ipc::frictionconstraints::operator[] (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraintsixEK6size_t"], [11, "_CPPv4NK3ipc19FrictionConstraintsixEK6size_t"]], "ipc::frictionconstraints::size (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints4sizeEv"]], "ipc::frictionconstraints::vv_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14vv_constraintsE"]], "ipc::vertexvertexfrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc30VertexVertexFrictionConstraintE"]], "ipc::vertexvertexfrictionconstraint::vertexvertexcandidate (c++ function)": [[11, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll"]], "ipc::vertexvertexfrictionconstraint::vertexvertexfrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraint"], [11, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::vertexvertexfrictionconstraint::compute_potential (c++ function)": [[11, "_CPPv4I0ENK3ipc30VertexVertexFrictionConstraint17compute_potentialE1TRK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::compute_normal_force_magnitude (c++ function)": [[11, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd"]], "ipc::compute_normal_force_magnitude_gradient (c++ function)": [[11, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd"]], "ipc::df1_x_minus_f1_over_x3 (c++ function)": [[11, "_CPPv4I0EN3ipc22df1_x_minus_f1_over_x3E1TRK1TKd"]], "ipc::edge_edge_relative_velocity (c++ function)": [[11, "_CPPv4I00000EN3ipc27edge_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI11DerivedDEA0EERKN5Eigen10MatrixBaseI11DerivedDEA1EERKN5Eigen10MatrixBaseI11DerivedDEB0EERKN5Eigen10MatrixBaseI11DerivedDEB1EERKN5Eigen10MatrixBaseI13DerivedCoordsEE"]], "ipc::edge_edge_relative_velocity_matrix (c++ function)": [[11, "_CPPv4I00EN3ipc34edge_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE"]], "ipc::edge_edge_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4I00EN3ipc43edge_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE"]], "ipc::edge_edge_tangent_basis (c++ function)": [[11, "_CPPv4I00000EN3ipc23edge_edge_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::edge_edge_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4I0000EN3ipc32edge_edge_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::f0_sf (c++ function)": [[11, "_CPPv4I0EN3ipc5f0_SFE1TRK1TKd"]], "ipc::f1_sf_over_x (c++ function)": [[11, "_CPPv4I0EN3ipc12f1_SF_over_xE1TRK1TKd"]], "ipc::point_edge_relative_velocity (c++ function)": [[11, "_CPPv4I0000EN3ipc28point_edge_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDE0EERKN5Eigen10MatrixBaseI10DerivedDE1EERK1T"]], "ipc::point_edge_relative_velocity_matrix (c++ function)": [[11, "_CPPv4I0EN3ipc35point_edge_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL9EEEKiRK1T"]], "ipc::point_edge_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4I0EN3ipc44point_edge_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL9EEEKiRK1T"]], "ipc::point_edge_tangent_basis (c++ function)": [[11, "_CPPv4I0000EN3ipc24point_edge_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE"]], "ipc::point_edge_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4I000EN3ipc33point_edge_tangent_basis_jacobianE9MatrixMaxIdXL27EEXL2EEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE"]], "ipc::point_point_relative_velocity (c++ function)": [[11, "_CPPv4I00EN3ipc29point_point_relative_velocityEDaRKN5Eigen10MatrixBaseI10DerivedDP0EERKN5Eigen10MatrixBaseI10DerivedDP1EE"]], "ipc::point_point_relative_velocity_matrix (c++ function)": [[11, "_CPPv4I0EN3ipc36point_point_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL6EEEKi"]], "ipc::point_point_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4I0EN3ipc45point_point_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL3EEXL6EEEKi"]], "ipc::point_point_tangent_basis (c++ function)": [[11, "_CPPv4I000EN3ipc25point_point_tangent_basisE9MatrixMaxI1TXL3EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE"]], "ipc::point_point_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4I00EN3ipc34point_point_tangent_basis_jacobianE9MatrixMaxIdXL18EEXL2EEERKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE"]], "ipc::point_triangle_relative_velocity (c++ function)": [[11, "_CPPv4I00000EN3ipc32point_triangle_relative_velocityEDaRKN5Eigen10MatrixBaseI9DerivedDPEERKN5Eigen10MatrixBaseI10DerivedDT0EERKN5Eigen10MatrixBaseI10DerivedDT1EERKN5Eigen10MatrixBaseI10DerivedDT2EERKN5Eigen10MatrixBaseI13DerivedCoordsEE"]], "ipc::point_triangle_relative_velocity_matrix (c++ function)": [[11, "_CPPv4I00EN3ipc39point_triangle_relative_velocity_matrixE9MatrixMaxI1TXL3EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE"]], "ipc::point_triangle_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4I00EN3ipc48point_triangle_relative_velocity_matrix_jacobianE9MatrixMaxI1TXL6EEXL12EEEKiRKN5Eigen10MatrixBaseI13DerivedCoordsEE"]], "ipc::point_triangle_tangent_basis (c++ function)": [[11, "_CPPv4I00000EN3ipc28point_triangle_tangent_basisEN5Eigen6MatrixI1TXL3EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE"]], "ipc::point_triangle_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4I0000EN3ipc37point_triangle_tangent_basis_jacobianEN5Eigen6MatrixIdXL36EEXL2EEEERKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE"]], "ipc::has_intersections (c++ function)": [[12, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod"]], "barrier() (in module ipctk)": [[16, "ipctk.barrier"]], "barrier_gradient() (in module ipctk)": [[16, "ipctk.barrier_gradient"]], "barrier_hessian() (in module ipctk)": [[16, "ipctk.barrier_hessian"]], "initial_barrier_stiffness() (in module ipctk)": [[16, "ipctk.initial_barrier_stiffness"]], "update_barrier_stiffness() (in module ipctk)": [[16, "ipctk.update_barrier_stiffness"]], "aabb (class in ipctk)": [[17, "ipctk.AABB"]], "broadphase (class in ipctk)": [[17, "ipctk.BroadPhase"]], "broadphasemethod (class in ipctk)": [[17, "ipctk.BroadPhaseMethod"]], "bruteforce (class in ipctk)": [[17, "ipctk.BruteForce"]], "hashgrid (class in ipctk)": [[17, "ipctk.HashGrid"]], "spatialhash (class in ipctk)": [[17, "ipctk.SpatialHash"]], "sweepandtiniestqueue (class in ipctk)": [[17, "ipctk.SweepAndTiniestQueue"]], "build() (ipctk.broadphase method)": [[17, "ipctk.BroadPhase.build"]], "build() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.build"]], "build() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.build"]], "build() (ipctk.sweepandtiniestqueue method)": [[17, "ipctk.SweepAndTiniestQueue.build"]], "can_vertices_collide (ipctk.broadphase property)": [[17, "ipctk.BroadPhase.can_vertices_collide"]], "cellsize() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.cellSize"]], "clear() (ipctk.broadphase method)": [[17, "ipctk.BroadPhase.clear"]], "clear() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.clear"]], "clear() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.clear"]], "clear() (ipctk.sweepandtiniestqueue method)": [[17, "ipctk.SweepAndTiniestQueue.clear"]], "conservative_inflation() (ipctk.aabb static method)": [[17, "ipctk.AABB.conservative_inflation"]], "detect_collision_candidates() (ipctk.broadphase method)": [[17, "ipctk.BroadPhase.detect_collision_candidates"]], "detect_edge_edge_candidates() (ipctk.broadphase method)": [[17, "ipctk.BroadPhase.detect_edge_edge_candidates"]], "detect_edge_edge_candidates() (ipctk.bruteforce method)": [[17, "ipctk.BruteForce.detect_edge_edge_candidates"]], "detect_edge_edge_candidates() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.detect_edge_edge_candidates"]], "detect_edge_edge_candidates() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.detect_edge_edge_candidates"]], "detect_edge_edge_candidates() (ipctk.sweepandtiniestqueue method)": [[17, "ipctk.SweepAndTiniestQueue.detect_edge_edge_candidates"]], "detect_edge_face_candidates() (ipctk.broadphase method)": [[17, "ipctk.BroadPhase.detect_edge_face_candidates"]], "detect_edge_face_candidates() (ipctk.bruteforce method)": [[17, "ipctk.BruteForce.detect_edge_face_candidates"]], "detect_edge_face_candidates() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.detect_edge_face_candidates"]], "detect_edge_face_candidates() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.detect_edge_face_candidates"]], "detect_edge_face_candidates() (ipctk.sweepandtiniestqueue method)": [[17, "ipctk.SweepAndTiniestQueue.detect_edge_face_candidates"]], "detect_edge_vertex_candidates() (ipctk.broadphase method)": [[17, "ipctk.BroadPhase.detect_edge_vertex_candidates"]], "detect_edge_vertex_candidates() (ipctk.bruteforce method)": [[17, "ipctk.BruteForce.detect_edge_vertex_candidates"]], "detect_edge_vertex_candidates() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.detect_edge_vertex_candidates"]], "detect_edge_vertex_candidates() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.detect_edge_vertex_candidates"]], "detect_edge_vertex_candidates() (ipctk.sweepandtiniestqueue method)": [[17, "ipctk.SweepAndTiniestQueue.detect_edge_vertex_candidates"]], "detect_face_vertex_candidates() (ipctk.broadphase method)": [[17, "ipctk.BroadPhase.detect_face_vertex_candidates"]], "detect_face_vertex_candidates() (ipctk.bruteforce method)": [[17, "ipctk.BruteForce.detect_face_vertex_candidates"]], "detect_face_vertex_candidates() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.detect_face_vertex_candidates"]], "detect_face_vertex_candidates() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.detect_face_vertex_candidates"]], "detect_face_vertex_candidates() (ipctk.sweepandtiniestqueue method)": [[17, "ipctk.SweepAndTiniestQueue.detect_face_vertex_candidates"]], "domainmax() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.domainMax"]], "domainmin() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.domainMin"]], "from_point() (ipctk.aabb static method)": [[17, "ipctk.AABB.from_point"]], "gridsize() (ipctk.hashgrid method)": [[17, "ipctk.HashGrid.gridSize"]], "intersects() (ipctk.aabb method)": [[17, "ipctk.AABB.intersects"]], "make_broad_phase() (ipctk.broadphase static method)": [[17, "ipctk.BroadPhase.make_broad_phase"]], "max (ipctk.aabb property)": [[17, "ipctk.AABB.max"]], "min (ipctk.aabb property)": [[17, "ipctk.AABB.min"]], "name (ipctk.broadphasemethod property)": [[17, "ipctk.BroadPhaseMethod.name"]], "queryedgeforedges() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryEdgeForEdges"]], "queryedgeforedgeswithbboxcheck() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryEdgeForEdgesWithBBoxCheck"]], "queryedgeforpe() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryEdgeForPE"]], "queryedgefortriangles() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryEdgeForTriangles"]], "querypointforedges() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryPointForEdges"]], "querypointforprimitives() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryPointForPrimitives"]], "querypointfortriangles() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryPointForTriangles"]], "querytriangleforedges() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryTriangleForEdges"]], "querytriangleforpoints() (ipctk.spatialhash method)": [[17, "ipctk.SpatialHash.queryTriangleForPoints"]], "vertex_ids (ipctk.aabb property)": [[17, "ipctk.AABB.vertex_ids"]], "candidates (class in ipctk)": [[18, "ipctk.Candidates"]], "continuouscollisioncandidate (class in ipctk)": [[18, "ipctk.ContinuousCollisionCandidate"]], "edgeedgecandidate (class in ipctk)": [[18, "ipctk.EdgeEdgeCandidate"]], "edgefacecandidate (class in ipctk)": [[18, "ipctk.EdgeFaceCandidate"]], "edgevertexcandidate (class in ipctk)": [[18, "ipctk.EdgeVertexCandidate"]], "facevertexcandidate (class in ipctk)": [[18, "ipctk.FaceVertexCandidate"]], "vertexvertexcandidate (class in ipctk)": [[18, "ipctk.VertexVertexCandidate"]], "build() (ipctk.candidates method)": [[18, "ipctk.Candidates.build"]], "ccd() (ipctk.continuouscollisioncandidate method)": [[18, "ipctk.ContinuousCollisionCandidate.ccd"]], "ccd() (ipctk.edgeedgecandidate method)": [[18, "ipctk.EdgeEdgeCandidate.ccd"]], "ccd() (ipctk.edgevertexcandidate method)": [[18, "ipctk.EdgeVertexCandidate.ccd"]], "ccd() (ipctk.facevertexcandidate method)": [[18, "ipctk.FaceVertexCandidate.ccd"]], "clear() (ipctk.candidates method)": [[18, "ipctk.Candidates.clear"]], "compute_collision_free_stepsize() (ipctk.candidates method)": [[18, "ipctk.Candidates.compute_collision_free_stepsize"]], "edge0_id (ipctk.edgeedgecandidate property)": [[18, "ipctk.EdgeEdgeCandidate.edge0_id"]], "edge1_id (ipctk.edgeedgecandidate property)": [[18, "ipctk.EdgeEdgeCandidate.edge1_id"]], "edge_id (ipctk.edgefacecandidate property)": [[18, "ipctk.EdgeFaceCandidate.edge_id"]], "edge_id (ipctk.edgevertexcandidate property)": [[18, "ipctk.EdgeVertexCandidate.edge_id"]], "empty() (ipctk.candidates method)": [[18, "ipctk.Candidates.empty"]], "face_id (ipctk.edgefacecandidate property)": [[18, "ipctk.EdgeFaceCandidate.face_id"]], "face_id (ipctk.facevertexcandidate property)": [[18, "ipctk.FaceVertexCandidate.face_id"]], "is_step_collision_free() (ipctk.candidates method)": [[18, "ipctk.Candidates.is_step_collision_free"]], "num_vertices() (ipctk.edgeedgecandidate method)": [[18, "ipctk.EdgeEdgeCandidate.num_vertices"]], "num_vertices() (ipctk.edgevertexcandidate method)": [[18, "ipctk.EdgeVertexCandidate.num_vertices"]], "num_vertices() (ipctk.facevertexcandidate method)": [[18, "ipctk.FaceVertexCandidate.num_vertices"]], "num_vertices() (ipctk.vertexvertexcandidate method)": [[18, "ipctk.VertexVertexCandidate.num_vertices"]], "print_ccd_query() (ipctk.continuouscollisioncandidate method)": [[18, "ipctk.ContinuousCollisionCandidate.print_ccd_query"]], "print_ccd_query() (ipctk.edgeedgecandidate method)": [[18, "ipctk.EdgeEdgeCandidate.print_ccd_query"]], "print_ccd_query() (ipctk.edgevertexcandidate method)": [[18, "ipctk.EdgeVertexCandidate.print_ccd_query"]], "print_ccd_query() (ipctk.facevertexcandidate method)": [[18, "ipctk.FaceVertexCandidate.print_ccd_query"]], "save_obj() (ipctk.candidates method)": [[18, "ipctk.Candidates.save_obj"]], "vertex0_id (ipctk.vertexvertexcandidate property)": [[18, "ipctk.VertexVertexCandidate.vertex0_id"]], "vertex1_id (ipctk.vertexvertexcandidate property)": [[18, "ipctk.VertexVertexCandidate.vertex1_id"]], "vertex_id (ipctk.edgevertexcandidate property)": [[18, "ipctk.EdgeVertexCandidate.vertex_id"]], "vertex_id (ipctk.facevertexcandidate property)": [[18, "ipctk.FaceVertexCandidate.vertex_id"]], "vertex_ids() (ipctk.edgeedgecandidate method)": [[18, "ipctk.EdgeEdgeCandidate.vertex_ids"]], "vertex_ids() (ipctk.edgevertexcandidate method)": [[18, "ipctk.EdgeVertexCandidate.vertex_ids"]], "vertex_ids() (ipctk.facevertexcandidate method)": [[18, "ipctk.FaceVertexCandidate.vertex_ids"]], "vertex_ids() (ipctk.vertexvertexcandidate method)": [[18, "ipctk.VertexVertexCandidate.vertex_ids"]], "compute_collision_free_stepsize() (in module ipctk)": [[19, "ipctk.compute_collision_free_stepsize"]], "edge_edge_ccd() (in module ipctk)": [[19, "ipctk.edge_edge_ccd"]], "is_step_collision_free() (in module ipctk)": [[19, "ipctk.is_step_collision_free"]], "point_edge_ccd() (in module ipctk)": [[19, "ipctk.point_edge_ccd"]], "point_point_ccd() (in module ipctk)": [[19, "ipctk.point_point_ccd"]], "point_triangle_ccd() (in module ipctk)": [[19, "ipctk.point_triangle_ccd"]], "collisionconstraint (class in ipctk)": [[20, "ipctk.CollisionConstraint"]], "collisionconstraints (class in ipctk)": [[20, "ipctk.CollisionConstraints"]], "edgeedgeconstraint (class in ipctk)": [[20, "ipctk.EdgeEdgeConstraint"]], "edgevertexconstraint (class in ipctk)": [[20, "ipctk.EdgeVertexConstraint"]], "facevertexconstraint (class in ipctk)": [[20, "ipctk.FaceVertexConstraint"]], "planevertexconstraint (class in ipctk)": [[20, "ipctk.PlaneVertexConstraint"]], "vertexvertexconstraint (class in ipctk)": [[20, "ipctk.VertexVertexConstraint"]], "are_shape_derivatives_enabled (ipctk.collisionconstraints property)": [[20, "ipctk.CollisionConstraints.are_shape_derivatives_enabled"]], "build() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.build"]], "clear() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.clear"]], "compute_minimum_distance() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.compute_minimum_distance"]], "compute_potential() (ipctk.collisionconstraint method)": [[20, "ipctk.CollisionConstraint.compute_potential"]], "compute_potential() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.compute_potential"]], "compute_potential() (ipctk.edgeedgeconstraint method)": [[20, "ipctk.EdgeEdgeConstraint.compute_potential"]], "compute_potential_gradient() (ipctk.collisionconstraint method)": [[20, "ipctk.CollisionConstraint.compute_potential_gradient"]], "compute_potential_gradient() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.compute_potential_gradient"]], "compute_potential_gradient() (ipctk.edgeedgeconstraint method)": [[20, "ipctk.EdgeEdgeConstraint.compute_potential_gradient"]], "compute_potential_hessian() (ipctk.collisionconstraint method)": [[20, "ipctk.CollisionConstraint.compute_potential_hessian"]], "compute_potential_hessian() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.compute_potential_hessian"]], "compute_potential_hessian() (ipctk.edgeedgeconstraint method)": [[20, "ipctk.EdgeEdgeConstraint.compute_potential_hessian"]], "compute_shape_derivative() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.compute_shape_derivative"]], "empty() (ipctk.collisionconstraints method)": [[20, "ipctk.CollisionConstraints.empty"]], "num_vertices() (ipctk.planevertexconstraint method)": [[20, "ipctk.PlaneVertexConstraint.num_vertices"]], "use_convergent_formulation (ipctk.collisionconstraints property)": [[20, "ipctk.CollisionConstraints.use_convergent_formulation"]], "vertex_ids() (ipctk.planevertexconstraint method)": [[20, "ipctk.PlaneVertexConstraint.vertex_ids"]], "collisionmesh (class in ipctk)": [[21, "ipctk.CollisionMesh"]], "are_adjacencies_initialized() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.are_adjacencies_initialized"]], "are_area_jacobians_initialized() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.are_area_jacobians_initialized"]], "build_from_full_mesh() (ipctk.collisionmesh static method)": [[21, "ipctk.CollisionMesh.build_from_full_mesh"]], "can_collide (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.can_collide"]], "construct_faces_to_edges() (ipctk.collisionmesh static method)": [[21, "ipctk.CollisionMesh.construct_faces_to_edges"]], "construct_is_on_surface() (ipctk.collisionmesh static method)": [[21, "ipctk.CollisionMesh.construct_is_on_surface"]], "dim() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.dim"]], "displace_vertices() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.displace_vertices"]], "edge_area() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.edge_area"]], "edge_area_gradient() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.edge_area_gradient"]], "edge_areas() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.edge_areas"]], "edge_vertex_adjacencies (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.edge_vertex_adjacencies"]], "edges (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.edges"]], "faces (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.faces"]], "faces_to_edges (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.faces_to_edges"]], "full_ndof (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.full_ndof"]], "full_num_vertices (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.full_num_vertices"]], "init_adjacencies() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.init_adjacencies"]], "init_area_jacobians() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.init_area_jacobians"]], "is_vertex_on_boundary() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.is_vertex_on_boundary"]], "map_displacements() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.map_displacements"]], "ndof (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.ndof"]], "num_edges (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.num_edges"]], "num_faces (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.num_faces"]], "num_vertices (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.num_vertices"]], "rest_positions (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.rest_positions"]], "to_full_dof() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.to_full_dof"]], "to_full_vertex_id() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.to_full_vertex_id"]], "vertex_area() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.vertex_area"]], "vertex_area_gradient() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.vertex_area_gradient"]], "vertex_areas (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.vertex_areas"]], "vertex_vertex_adjacencies (ipctk.collisionmesh property)": [[21, "ipctk.CollisionMesh.vertex_vertex_adjacencies"]], "vertices() (ipctk.collisionmesh method)": [[21, "ipctk.CollisionMesh.vertices"]], "edgeedgedistancetype (class in ipctk)": [[22, "ipctk.EdgeEdgeDistanceType"]], "pointedgedistancetype (class in ipctk)": [[22, "ipctk.PointEdgeDistanceType"]], "pointtriangledistancetype (class in ipctk)": [[22, "ipctk.PointTriangleDistanceType"]], "edge_edge_cross_squarednorm() (in module ipctk)": [[22, "ipctk.edge_edge_cross_squarednorm"]], "edge_edge_cross_squarednorm_gradient() (in module ipctk)": [[22, "ipctk.edge_edge_cross_squarednorm_gradient"]], "edge_edge_cross_squarednorm_hessian() (in module ipctk)": [[22, "ipctk.edge_edge_cross_squarednorm_hessian"]], "edge_edge_distance() (in module ipctk)": [[22, "ipctk.edge_edge_distance"]], "edge_edge_distance_gradient() (in module ipctk)": [[22, "ipctk.edge_edge_distance_gradient"]], "edge_edge_distance_hessian() (in module ipctk)": [[22, "ipctk.edge_edge_distance_hessian"]], "edge_edge_distance_type() (in module ipctk)": [[22, "ipctk.edge_edge_distance_type"]], "edge_edge_mollifier() (in module ipctk)": [[22, "ipctk.edge_edge_mollifier"]], "edge_edge_mollifier_gradient() (in module ipctk)": [[22, "ipctk.edge_edge_mollifier_gradient"]], "edge_edge_mollifier_hessian() (in module ipctk)": [[22, "ipctk.edge_edge_mollifier_hessian"]], "edge_edge_mollifier_threshold() (in module ipctk)": [[22, "ipctk.edge_edge_mollifier_threshold"]], "line_line_distance() (in module ipctk)": [[22, "ipctk.line_line_distance"]], "line_line_distance_gradient() (in module ipctk)": [[22, "ipctk.line_line_distance_gradient"]], "line_line_distance_hessian() (in module ipctk)": [[22, "ipctk.line_line_distance_hessian"]], "point_edge_distance() (in module ipctk)": [[22, "ipctk.point_edge_distance"]], "point_edge_distance_gradient() (in module ipctk)": [[22, "ipctk.point_edge_distance_gradient"]], "point_edge_distance_hessian() (in module ipctk)": [[22, "ipctk.point_edge_distance_hessian"]], "point_edge_distance_type() (in module ipctk)": [[22, "ipctk.point_edge_distance_type"]], "point_line_distance() (in module ipctk)": [[22, "ipctk.point_line_distance"]], "point_line_distance_gradient() (in module ipctk)": [[22, "ipctk.point_line_distance_gradient"]], "point_line_distance_hessian() (in module ipctk)": [[22, "ipctk.point_line_distance_hessian"]], "point_point_distance() (in module ipctk)": [[22, "ipctk.point_point_distance"]], "point_point_distance_gradient() (in module ipctk)": [[22, "ipctk.point_point_distance_gradient"]], "point_point_distance_hessian() (in module ipctk)": [[22, "ipctk.point_point_distance_hessian"]], "point_triangle_distance() (in module ipctk)": [[22, "ipctk.point_triangle_distance"]], "point_triangle_distance_gradient() (in module ipctk)": [[22, "ipctk.point_triangle_distance_gradient"]], "point_triangle_distance_hessian() (in module ipctk)": [[22, "ipctk.point_triangle_distance_hessian"]], "point_triangle_distance_type() (in module ipctk)": [[22, "ipctk.point_triangle_distance_type"]], "edgeedgefrictionconstraint (class in ipctk)": [[23, "ipctk.EdgeEdgeFrictionConstraint"]], "edgevertexfrictionconstraint (class in ipctk)": [[23, "ipctk.EdgeVertexFrictionConstraint"]], "facevertexfrictionconstraint (class in ipctk)": [[23, "ipctk.FaceVertexFrictionConstraint"]], "frictionconstraint (class in ipctk)": [[23, "ipctk.FrictionConstraint"]], "frictionconstraint.diffwrt (class in ipctk)": [[23, "ipctk.FrictionConstraint.DiffWRT"]], "frictionconstraints (class in ipctk)": [[23, "ipctk.FrictionConstraints"]], "vertexvertexfrictionconstraint (class in ipctk)": [[23, "ipctk.VertexVertexFrictionConstraint"]], "build() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.build"]], "clear() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.clear"]], "closest_point (ipctk.frictionconstraint property)": [[23, "ipctk.FrictionConstraint.closest_point"]], "compute_force() (ipctk.frictionconstraint method)": [[23, "ipctk.FrictionConstraint.compute_force"]], "compute_force() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.compute_force"]], "compute_force_jacobian() (ipctk.frictionconstraint method)": [[23, "ipctk.FrictionConstraint.compute_force_jacobian"]], "compute_force_jacobian() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.compute_force_jacobian"]], "compute_normal_force_magnitude() (in module ipctk)": [[23, "ipctk.compute_normal_force_magnitude"]], "compute_normal_force_magnitude_gradient() (in module ipctk)": [[23, "ipctk.compute_normal_force_magnitude_gradient"]], "compute_potential() (ipctk.edgeedgefrictionconstraint method)": [[23, "ipctk.EdgeEdgeFrictionConstraint.compute_potential"]], "compute_potential() (ipctk.edgevertexfrictionconstraint method)": [[23, "ipctk.EdgeVertexFrictionConstraint.compute_potential"]], "compute_potential() (ipctk.facevertexfrictionconstraint method)": [[23, "ipctk.FaceVertexFrictionConstraint.compute_potential"]], "compute_potential() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.compute_potential"]], "compute_potential() (ipctk.vertexvertexfrictionconstraint method)": [[23, "ipctk.VertexVertexFrictionConstraint.compute_potential"]], "compute_potential_gradient() (ipctk.frictionconstraint method)": [[23, "ipctk.FrictionConstraint.compute_potential_gradient"]], "compute_potential_gradient() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.compute_potential_gradient"]], "compute_potential_hessian() (ipctk.frictionconstraint method)": [[23, "ipctk.FrictionConstraint.compute_potential_hessian"]], "compute_potential_hessian() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.compute_potential_hessian"]], "df1_x_minus_f1_over_x3() (in module ipctk)": [[23, "ipctk.df1_x_minus_f1_over_x3"]], "edge_edge_relative_velocity() (in module ipctk)": [[23, "ipctk.edge_edge_relative_velocity"]], "edge_edge_relative_velocity_matrix() (in module ipctk)": [[23, "ipctk.edge_edge_relative_velocity_matrix"]], "edge_edge_relative_velocity_matrix_jacobian() (in module ipctk)": [[23, "ipctk.edge_edge_relative_velocity_matrix_jacobian"]], "edge_edge_tangent_basis() (in module ipctk)": [[23, "ipctk.edge_edge_tangent_basis"]], "edge_edge_tangent_basis_jacobian() (in module ipctk)": [[23, "ipctk.edge_edge_tangent_basis_jacobian"]], "empty() (ipctk.frictionconstraints method)": [[23, "ipctk.FrictionConstraints.empty"]], "f0_sf() (in module ipctk)": [[23, "ipctk.f0_SF"]], "f1_sf_over_x() (in module ipctk)": [[23, "ipctk.f1_SF_over_x"]], "mu (ipctk.frictionconstraint property)": [[23, "ipctk.FrictionConstraint.mu"]], "name (ipctk.frictionconstraint.diffwrt property)": [[23, "ipctk.FrictionConstraint.DiffWRT.name"]], "normal_force_magnitude (ipctk.frictionconstraint property)": [[23, "ipctk.FrictionConstraint.normal_force_magnitude"]], "point_edge_relative_velocity() (in module ipctk)": [[23, "ipctk.point_edge_relative_velocity"]], "point_edge_relative_velocity_matrix() (in module ipctk)": [[23, "ipctk.point_edge_relative_velocity_matrix"]], "point_edge_relative_velocity_matrix_jacobian() (in module ipctk)": [[23, "ipctk.point_edge_relative_velocity_matrix_jacobian"]], "point_edge_tangent_basis() (in module ipctk)": [[23, "ipctk.point_edge_tangent_basis"]], "point_edge_tangent_basis_jacobian() (in module ipctk)": [[23, "ipctk.point_edge_tangent_basis_jacobian"]], "point_point_relative_velocity() (in module ipctk)": [[23, "ipctk.point_point_relative_velocity"]], "point_point_relative_velocity_matrix() (in module ipctk)": [[23, "ipctk.point_point_relative_velocity_matrix"]], "point_point_relative_velocity_matrix_jacobian() (in module ipctk)": [[23, "ipctk.point_point_relative_velocity_matrix_jacobian"]], "point_point_tangent_basis() (in module ipctk)": [[23, "ipctk.point_point_tangent_basis"]], "point_point_tangent_basis_jacobian() (in module ipctk)": [[23, "ipctk.point_point_tangent_basis_jacobian"]], "point_triangle_relative_velocity() (in module ipctk)": [[23, "ipctk.point_triangle_relative_velocity"]], "point_triangle_relative_velocity_matrix() (in module ipctk)": [[23, "ipctk.point_triangle_relative_velocity_matrix"]], "point_triangle_relative_velocity_matrix_jacobian() (in module ipctk)": [[23, "ipctk.point_triangle_relative_velocity_matrix_jacobian"]], "point_triangle_tangent_basis() (in module ipctk)": [[23, "ipctk.point_triangle_tangent_basis"]], "point_triangle_tangent_basis_jacobian() (in module ipctk)": [[23, "ipctk.point_triangle_tangent_basis_jacobian"]], "tangent_basis (ipctk.frictionconstraint property)": [[23, "ipctk.FrictionConstraint.tangent_basis"]], "weight (ipctk.frictionconstraint property)": [[23, "ipctk.FrictionConstraint.weight"]], "weight_gradient (ipctk.frictionconstraint property)": [[23, "ipctk.FrictionConstraint.weight_gradient"]], "loggerlevel (class in ipctk)": [[24, "ipctk.LoggerLevel"]], "get_num_threads() (in module ipctk)": [[24, "ipctk.get_num_threads"]], "set_logger_level() (in module ipctk)": [[24, "ipctk.set_logger_level"]], "set_num_threads() (in module ipctk)": [[24, "ipctk.set_num_threads"]]}, "docurls": ["changelog.html", "code_of_conduct.html", "contributing.html", "cpp.html", "cpp-api/barrier.html", "cpp-api/broad_phase.html", "cpp-api/candidates.html", "cpp-api/ccd.html", "cpp-api/collision_constraints.html", "cpp-api/collision_mesh.html", "cpp-api/distance.html", "cpp-api/friction.html", "cpp-api/utils.html", "index.html", "license.html", "python.html", "python-api/barrier.html", "python-api/broad_phase.html", "python-api/candidates.html", "python-api/ccd.html", "python-api/collision_constraints.html", "python-api/collision_mesh.html", "python-api/distance.html", "python-api/friction.html", "python-api/utils.html", "style_guide.html"]})