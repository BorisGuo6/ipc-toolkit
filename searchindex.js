Search.setIndex({"titles": ["Changelog", "Contributor Covenant Code of Conduct", "Contributing", "C++", "Barrier", "CCD", "Collision Constraints", "Collision Mesh", "Distance", "Friction", "Main Functions", "Utils", "IPC Toolkit", "License", "Python", "Barrier", "CCD", "Collision Constraints", "Collision Mesh", "Distance", "Friction", "Main Functions", "Utils", "Style Guide"], "terms": {"all": [0, 1, 3, 7, 12, 13, 18], "notabl": 0, "thi": [0, 1, 2, 3, 7, 8, 12, 13, 14, 18, 19, 23], "project": [0, 2, 3, 5, 6, 8, 10, 12, 14, 23], "document": [0, 12, 13, 14], "file": [0, 2, 3, 12, 13, 14], "minimum": [0, 11, 16, 21], "distanc": [0, 4, 11, 12, 15, 16, 21], "option": [0, 19], "paramet": [0, 4, 7, 8, 11, 15, 16, 18, 19, 21, 22], "ccd": [0, 3, 12, 21], "function": [0, 3, 4, 7, 8, 12, 14, 15, 16, 18, 19, 23], "const": [0, 4, 7, 8, 10, 11], "doubl": [0, 4, 5, 7, 8, 10, 11], "min_dist": [0, 10, 16, 21], "0": [0, 1, 4, 5, 8, 10, 15, 16, 19, 21], "i": [0, 1, 2, 3, 7, 8, 12, 13, 14, 16, 18, 19, 21, 23], "place": 0, "first": [0, 2, 8, 12, 14, 16, 19], "argument": [0, 8, 10], "which": [0, 1, 12, 14], "can": [0, 3, 7, 12, 14, 18], "break": 0, "call": [0, 3, 7, 12, 18], "code": [0, 2], "were": [0, 1], "previous": 0, "us": [0, 1, 2, 3, 5, 7, 11, 12, 13, 14, 16, 18, 21, 22, 23], "collisionmesh": [0, 7, 10, 11, 16, 18, 21, 22], "wrap": 0, "up": 0, "face": [0, 7, 16, 17, 18, 23], "edg": [0, 7, 12, 16, 17, 18, 23], "singl": [0, 1], "data": [0, 3, 12], "structur": 0, "support": 0, "ignor": 0, "intern": 0, "vertic": [0, 7, 11, 16, 17, 18, 21, 22, 23], "instead": 0, "user": 0, "should": [0, 7, 16], "map": [0, 3, 7, 12, 18], "from": [0, 1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18], "full": [0, 7, 12, 16, 18, 21], "mesh": [0, 10, 11, 16, 21, 22, 23], "surfac": [0, 7, 16, 18, 21], "also": [0, 1], "includ": [0, 1, 2, 3, 7, 12, 13], "to_full_dof": [0, 7, 18], "reduc": 0, "gradient": [0, 7, 8, 18, 19], "hessian": [0, 7, 8, 18, 19], "": [0, 1, 3, 12], "dof": 0, "implicit": 0, "sourc": [0, 2], "folder": 0, "organ": [0, 12, 14], "point": [0, 7, 18, 23], "plane": 0, "collis": [0, 3, 11, 12, 16, 21, 22, 23], "v": 0, "static": [0, 5, 7, 18], "analyt": 0, "contact": [0, 12, 14, 16], "cmake": [0, 3, 12], "target": 0, "name": [0, 2, 3, 12], "ipc": [0, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16], "toolkit": [0, 2, 3, 5, 6, 8, 10, 14], "updat": 0, "system": [0, 2, 3, 12, 14], "modern": 0, "fetchcont": [0, 3, 12], "download": [0, 3, 12], "extern": [0, 1, 3, 12], "strategi": 0, "when": [0, 1, 3, 12], "tight": [0, 3, 5, 12, 16], "inclus": [0, 1, 3, 5, 12, 16], "onli": [0, 2], "perform": [0, 16], "no_zero_toi": 0, "true": [0, 3, 7, 12, 16, 18, 21], "detect_edge_face_collision_candidates_brute_forc": 0, "3d": [0, 8, 12, 19], "intersect": [0, 3, 11, 12, 14, 16, 21, 22], "broad": [0, 11, 12, 21, 22], "phase": [0, 11, 12, 21, 22], "abil": 0, "save": 0, "an": [0, 1, 2, 3, 7, 8, 12, 13, 14, 18, 19, 23], "obj": 0, "candid": [0, 10], "test": [0, 14], "has_intersect": [0, 11, 22], "pass": 0, "after": 0, "possibl": [0, 2], "numer": [0, 23], "round": 0, "problem": 0, "hashgrid": 0, "aabb": 0, "are_overlap": 0, "get": [0, 2, 7, 16, 18, 22, 23], "ignore_codimensional_vertic": 0, "brute": 0, "forc": 0, "method": [0, 5, 11, 16, 21, 22], "inflat": [0, 16], "spatialhash": 0, "replac": [0, 3, 12], "vertex": [0, 7, 8, 16, 18, 19, 21, 23], "group": 0, "id": [0, 7, 16, 18], "more": [0, 2, 12], "power": 0, "can_collid": [0, 7, 18], "By": [0, 7, 18], "default": [0, 3, 5, 7, 12, 18], "everyth": 0, "collid": [0, 7, 18], "same": [0, 3, 12], "befor": [0, 12, 14, 23], "reorder": 0, "construct_constraint_set": 0, "is_collision_fre": 0, "compute_collision_free_steps": [0, 10, 16, 21], "update_barrier_stiff": 0, "now": 0, "requir": [0, 3, 12], "constraint_set": 0, "rather": 0, "than": [0, 3, 12], "build": [0, 5, 6, 7, 8, 10, 16, 18], "drop": 0, "dhat": [0, 4, 15, 17], "2d": [0, 8, 12, 19], "verison": 0, "initial_barrier_stiff": 0, "comput": [0, 7, 8, 11, 12, 16, 18, 19, 21], "constraint": 0, "set": [0, 1, 3, 12, 14, 16, 22, 23], "barrier": [0, 12], "becaus": 0, "ar": [0, 1, 2, 3, 7, 8, 12, 19], "lot": 0, "renam": 0, "directori": [0, 3, 5, 6, 8, 10, 12], "src": 0, "spatial_hash": [0, 5, 16], "broad_phas": 0, "select": [0, 7], "hash_grid": [0, 5, 16, 21, 22], "brute_forc": [0, 5, 16], "toler": [0, 5, 10, 16, 21], "maximum": [0, 5, 16, 21, 22], "iter": [0, 5, 16, 21], "fals": [0, 18], "tight_inclusion_with_no_zero_toi": 0, "ON": 0, "construct_friction_constraint_set": [0, 10], "clear": [0, 16], "given": [0, 2], "friction_constraint_set": 0, "tightinclus": 0, "degener": 0, "char": 0, "except": 0, "std": [0, 3, 7, 12, 18], "gave": 0, "dhat_epsilon_scal": 0, "valu": [0, 4, 5, 8, 15, 16, 19, 21, 23], "1e": [0, 5, 16, 21], "9": [0, 19], "warn": [0, 22], "order": 0, "flip": 0, "bbox_diagon": 0, "bug": [0, 12, 14], "output": [0, 5, 6, 8, 10], "min": 0, "move": 0, "eigen_ext": 0, "namespac": 0, "max": 0, "size": [0, 1, 7, 16, 18, 21], "matric": 0, "eigen": [0, 3, 7, 8, 10, 11, 12], "vectorx": 0, "vectormax": 0, "1": [0, 4, 8, 15, 16, 17, 18, 19, 21, 22], "matrixxx": 0, "arraymax": 0, "util": [0, 3, 12, 23], "check": [0, 3, 12], "triangl": [0, 12], "gmp": [0, 3, 12], "exact": [0, 3, 12], "voxel_size_heurist": 0, "cpp": 0, "suggest": 0, "good": 0, "voxel": 0, "averag": 0, "length": [0, 8, 19], "consid": [0, 1, 12, 14], "displac": [0, 7, 18, 23], "result": 0, "better": 0, "larg": [0, 12, 14], "memori": 0, "usag": 0, "tbb": [0, 3, 12], "parallel": [0, 3, 8, 12, 19], "loop": 0, "main": [0, 3, 12], "compute_potenti": [0, 17], "compute_friction_potenti": [0, 10], "etc": 0, "addverticesfromedg": 0, "add": [0, 3, 12], "connect": [0, 13], "avoid": [0, 1, 5, 16], "duplic": 0, "arraymax3": 0, "over": [0, 16], "vectorx3": 0, "simplifi": 0, "some": [0, 14], "refer": 0, "origin": [0, 3, 8, 12, 14], "base": [0, 8, 17, 19], "modif": 0, "benchmark": 0, "indic": [0, 7, 16, 18], "faster": [0, 3, 12], "multithread": 0, "todo": 0, "improv": 0, "fulli": 0, "integr": [0, 12, 14], "hpp": [0, 3, 12], "switch": 0, "correct": [0, 3, 12], "conserv": [0, 3, 5, 12, 16], "wang": 0, "ferguson": [0, 12, 14], "et": 0, "al": 0, "etienn": [0, 3, 12], "vouga": [0, 3, 12], "see": [0, 1, 12, 14], "readm": 0, "md": 0, "seper": 0, "thick": 0, "codimension": 0, "increment": [0, 12, 14], "potenti": [0, 8, 10, 12, 14], "li": [0, 12, 14], "friction": [0, 12], "model": 0, "formul": 0, "further": 0, "f2e": 0, "similar": 0, "f": 0, "recommend": [0, 12, 14], "If": [0, 2, 8, 12, 14, 16, 19], "provid": [0, 1, 3, 12, 13, 14, 23], "simpl": [0, 14], "linear": [0, 3, 12, 16, 21], "search": 0, "done": 0, "per": 0, "vectorxd": [0, 7], "matrixxd": [0, 7, 10, 11], "version": [0, 1, 2, 3, 12], "local": [0, 2], "form": [0, 12, 14], "hash": [0, 3, 12, 18], "grid": 0, "we": [0, 1, 3, 12, 14, 23], "without": [0, 1, 13], "spatial": 0, "multipl": 0, "pair": [0, 8, 19, 23], "psd": 0, "wa": [0, 1, 14], "complet": 0, "broken": 0, "matrix": [0, 7, 16, 18, 21, 23], "never": 0, "mollif": [0, 8, 19], "ee": 0, "have": [0, 1, 7, 18], "type": [0, 16], "pp": 0, "pe": 0, "need": [0, 7], "store": 0, "threshold": [0, 8, 19], "eps_x": [0, 8, 19], "like": [0, 1, 12, 14], "normal": [0, 8, 16], "small": 0, "anywai": 0, "assert": 0, "one": [0, 8, 19], "boolean": [0, 11, 22], "compute_friction_potential_hessian": [0, 10], "control": 0, "exclud": 0, "e": [0, 1, 3, 7, 12, 18, 23], "g": [0, 3, 12, 23], "self": [0, 11, 16, 17, 18, 22], "second": [0, 4, 8, 15, 16, 19], "take": [0, 1, 5, 7, 16, 18], "alreadi": 0, "world": 0, "bound": [0, 16], "box": [0, 16], "diagon": 0, "input": 0, "average_mass": 0, "min_barrier_stiffness_scal": 0, "typo": 0, "intial_barrier_stiff": 0, "frictionconstraint": 0, "inform": [0, 1, 3, 12], "tangent": 0, "basi": 0, "magnitud": 0, "closest": [0, 8, 19], "coeffici": [0, 8, 19], "unit": 0, "compar": 0, "compon": 0, "compute_friction_bas": 0, "It": 0, "mu": 0, "put": 0, "insid": 0, "dure": [0, 1], "handl": 0, "multipli": 0, "alwai": [0, 2], "line": 0, "edge_edge_tangent_basi": 0, "spdlog": [0, 3, 12], "log": [0, 3, 12, 22], "header": [0, 3, 12], "prefix": [0, 3, 12, 23], "edgeedgeconstraint": [0, 6, 17], "mollifi": 0, "dhat_squar": 0, "non": [0, 8, 11, 19], "squar": [0, 8, 19], "epsv_times_h_squar": 0, "epsv_times_h": 0, "rest": [0, 7, 8, 18, 19, 23], "posit": [0, 1, 7, 8, 18, 19, 23], "v_rest": 0, "compute_barrier_potenti": [0, 10], "longer": 0, "member": [1, 7, 16, 19, 22, 23], "leader": 1, "make": [1, 2, 12, 14], "particip": 1, "commun": 1, "harass": 1, "free": [1, 12, 13, 14, 16, 21], "experi": 1, "everyon": 1, "regardless": 1, "ag": 1, "bodi": [1, 12], "visibl": 1, "invis": 1, "disabl": [1, 3, 12], "ethnic": 1, "sex": 1, "characterist": 1, "gender": 1, "ident": 1, "express": [1, 13], "level": [1, 3, 12, 22], "educ": 1, "socio": 1, "econom": 1, "statu": 1, "nation": 1, "person": [1, 13], "appear": 1, "race": 1, "religion": 1, "sexual": 1, "orient": 1, "act": 1, "interact": 1, "wai": [1, 2, 3, 12, 14], "contribut": 1, "open": [1, 2, 12, 14], "welcom": [1, 2], "divers": 1, "healthi": 1, "exampl": [1, 3, 12], "behavior": 1, "environ": 1, "demonstr": 1, "empathi": 1, "kind": [1, 13], "toward": 1, "other": [1, 7, 12, 13, 14, 18], "peopl": 1, "Being": 1, "respect": 1, "differ": [1, 3, 12], "opinion": 1, "viewpoint": 1, "give": 1, "gracefulli": 1, "accept": 1, "construct": [1, 7, 18], "feedback": 1, "apolog": 1, "those": [1, 2], "affect": 1, "mistak": 1, "learn": 1, "focus": 1, "what": 1, "best": [1, 2], "just": 1, "u": 1, "individu": 1, "overal": 1, "unaccept": 1, "The": [1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22], "languag": 1, "imageri": 1, "attent": 1, "advanc": 1, "ani": [1, 2, 11, 12, 13, 16, 21], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 2], "polit": 1, "attack": 1, "public": [1, 3, 7, 12, 23], "privat": 1, "publish": [1, 13], "physic": [1, 12], "email": 1, "address": 1, "explicit": 1, "permiss": [1, 13], "could": [1, 2], "reason": 1, "inappropri": 1, "profession": 1, "clarifi": 1, "appropri": 1, "fair": 1, "action": [1, 13], "thei": [1, 2], "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "right": [1, 4, 13, 15], "remov": 1, "edit": 1, "reject": 1, "commit": 1, "wiki": 1, "issu": [1, 2, 12, 14], "align": 1, "moder": 1, "decis": 1, "appli": [1, 7, 18], "within": 1, "space": 1, "offici": [1, 2], "repres": 1, "mail": 1, "post": [1, 2], "via": 1, "social": 1, "media": 1, "account": 1, "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 13], "instanc": 1, "abus": 1, "otherwis": [1, 13], "mai": 1, "report": [1, 12, 14], "zfergu": 1, "nyu": 1, "edu": 1, "complaint": 1, "review": 1, "investig": 1, "promptli": 1, "fairli": 1, "oblig": 1, "privaci": 1, "secur": 1, "incid": 1, "follow": [1, 3, 12, 13, 23], "impact": [1, 5, 16], "determin": [1, 7, 8, 11, 16, 18, 19, 21, 22], "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "A": [1, 7, 8, 11, 13, 14, 16, 18, 19, 21, 22], "written": 1, "clariti": 1, "around": 1, "natur": 1, "explan": 1, "why": 1, "apologi": 1, "request": [1, 12, 14, 23], "through": [1, 2, 3, 12], "seri": 1, "continu": [1, 12, 16, 23], "No": 1, "involv": 1, "unsolicit": 1, "specifi": 1, "period": 1, "time": [1, 16], "well": 1, "channel": 1, "term": 1, "lead": 1, "seriou": 1, "sustain": 1, "sort": 1, "allow": [1, 16, 21], "pattern": 1, "aggress": 1, "disparag": 1, "class": [1, 5, 6, 7, 8, 16, 17, 18, 19, 22, 23], "adapt": [1, 12], "avail": 1, "http": [1, 2, 3, 12, 14], "www": 1, "org": 1, "code_of_conduct": 1, "html": 1, "inspir": 1, "mozilla": 1, "ladder": 1, "For": [1, 3, 12, 14], "answer": 1, "common": 1, "question": 1, "about": [1, 2], "faq": 1, "translat": 1, "greatli": 2, "appreci": [2, 12, 14], "everi": 2, "littl": 2, "bit": 2, "help": [2, 8, 19], "credit": 2, "github": [2, 3, 12, 14], "com": [2, 3, 12], "sim": [2, 3, 12, 13, 14], "you": [2, 3, 12, 14], "pleas": [2, 12, 14, 23], "your": [2, 3, 12, 14, 23], "oper": 2, "compil": 2, "detail": [2, 12, 14], "setup": [2, 14], "might": 2, "troubleshoot": 2, "step": [2, 5, 16, 21], "reproduc": 2, "look": [2, 16], "anyth": 2, "tag": 2, "want": [2, 3, 12], "whoever": 2, "enhanc": 2, "timer": 2, "suitabl": 2, "start": [2, 16, 21, 23], "softwar": [2, 12, 13, 14], "whether": [2, 7, 13, 18], "part": 2, "doc": 2, "even": 2, "web": 2, "blog": 2, "articl": [2, 12, 14], "send": 2, "propos": 2, "explain": 2, "how": 2, "would": [2, 12, 14], "work": [2, 12, 14], "keep": 2, "scope": 2, "narrow": [2, 12], "easier": 2, "rememb": 2, "volunt": 2, "driven": 2, "easiest": [3, 12, 14], "exist": [3, 12, 14], "do": [3, 12, 13, 14], "3": [3, 4, 12, 15, 19], "14": [3, 12], "process": [3, 12], "fetchcontent_declar": [3, 12], "ipc_toolkit": [3, 12, 14], "git_repositori": [3, 12], "git": [3, 12], "git_tag": [3, 12], "ipc_toolkit_git_tag": [3, 12], "git_shallow": [3, 12], "fetchcontent_makeavail": [3, 12], "where": [3, 12], "link": [3, 12], "against": [3, 12], "target_link_librari": [3, 12], "project_nam": [3, 12], "librari": [3, 12, 14], "binari": [3, 12], "algebra": [3, 12], "libigl": [3, 12], "basic": [3, 12], "geometri": [3, 12], "predic": [3, 12], "robin": [3, 12], "unordered_set": [3, 7, 12], "unordered_map": [3, 12], "abseil": [3, 12], "ration": [3, 12], "arithmet": [3, 12], "enabl": [3, 12], "ipc_toolkit_with_rational_intersect": [3, 12], "must": [3, 12, 14], "instal": [3, 12], "detect": [3, 12, 16, 23], "inexact": [3, 12], "comparison": [3, 12], "ipc_toolkit_with_correct_ccd": [3, 12], "ensur": [3, 12], "our": [3, 12, 14], "algorithm": [3, 12, 16, 21], "piec": [3, 12], "To": [3, 12], "ipc_toolkit_build_unit_test": [3, 12], "ipc_toolkit_build_test": [3, 12], "catch2": [3, 12], "framework": [3, 12], "finit": [3, 12], "diff": [3, 12], "nlohman": [3, 12], "json": [3, 12], "load": [3, 12], "templat": [4, 8], "typenam": [4, 8], "t": [4, 8], "d": [4, 15], "grow": [4, 15], "infin": [4, 15], "x": [4, 7, 8, 18, 19], "approach": [4, 15], "b": [4, 8, 15, 16, 19, 21, 23], "hat": [4, 15], "2": [4, 15], "ln": [4, 15], "left": [4, 15], "frac": [4, 15], "activ": [4, 8, 15, 19], "return": [4, 7, 8, 11, 15, 16, 18, 19, 21, 22], "barrier_gradi": [4, 15], "deriv": [4, 12, 15], "wrt": [4, 7, 8, 15, 18, 19], "barrier_hessian": [4, 15], "enum": [5, 8, 23], "broadphasemethod": [5, 10, 11, 16, 21, 22], "enumer": [5, 8, 16], "implement": [5, 12, 14, 16], "sweep_and_tiniest_queu": [5, 16], "sweep_and_tiniest_queue_gpu": [5, 16], "num_method": 5, "doxygenstruct": [5, 6], "cannot": [5, 6, 10], "find": [5, 6, 10], "continuouscollisioncandid": [5, 16], "doxygen": [5, 6, 8, 10, 23], "xml": [5, 6, 8, 10], "doxyoutput": [5, 6, 8, 10], "vertexvertexcandid": [5, 16, 17], "edgevertexcandid": [5, 16, 17], "edgeedgecandid": [5, 16, 17], "edgefacecandid": [5, 16], "facevertexcandid": [5, 16, 17], "constexpr": 5, "default_ccd_toler": [5, 10], "6": 5, "long": [5, 10], "default_ccd_max_iter": [5, 10], "10": 5, "000": 5, "000l": 5, "number": [5, 7, 12, 14, 16, 18, 21, 22], "default_ccd_conservative_resc": 5, "8": [5, 16], "rescal": [5, 16], "exactli": [5, 16], "collisionconstraint": [6, 11, 17], "vertexvertexconstraint": [6, 17], "edgevertexconstraint": [6, 17], "facevertexconstraint": [6, 17], "planevertexconstraint": [6, 17], "encapsol": 7, "transform": 7, "go": 7, "volumetr": 7, "fe": 7, "inlin": [7, 8], "new": [7, 12, 14], "object": 7, "immut": 7, "so": [7, 13], "constructor": 7, "rest_posit": [7, 18, 23], "matrixxi": 7, "sparsematrix": 7, "displacement_map": 7, "directli": 7, "vector": [7, 18], "bool": [7, 10, 11, 16, 17, 18, 21, 22], "include_vertex": [7, 18], "full_rest_posit": [7, 18], "each": [7, 18], "index": 7, "void": [7, 8], "init_adjac": [7, 18], "initi": [7, 16, 18], "adjac": [7, 11, 18], "init_area_jacobian": [7, 18], "area": [7, 18], "destroi": 7, "size_t": 7, "num_vertic": [7, 16, 17, 18], "num_edg": [7, 18], "num_fac": [7, 18], "dim": [7, 18], "dimens": [7, 18], "ndof": [7, 18], "degre": [7, 18], "freedom": [7, 18], "full_num_vertic": [7, 18], "full_ndof": [7, 18], "faces_to_edg": [7, 18], "full_posit": [7, 18], "full_vertic": [7, 18], "displace_vertic": [7, 18], "full_displac": [7, 18], "map_displac": [7, 18], "to_full_vertex_id": [7, 18], "correspond": [7, 18], "quantiti": [7, 18], "chain": [7, 18], "rule": [7, 18], "equal": [7, 18], "int": [7, 16, 17, 18, 21, 22], "vertex_vertex_adjac": [7, 18], "edge_vertex_adjac": [7, 18], "are_adjacencies_initi": [7, 18], "been": [7, 18], "is_vertex_on_boundari": [7, 18], "vi": [7, 18], "boundari": [7, 18], "vertex_area": [7, 18], "barycentr": [7, 18], "sparsevector": 7, "vertex_area_gradi": [7, 18], "edge_area": [7, 18], "ei": [7, 18], "edge_area_gradi": [7, 18], "are_area_jacobians_initi": [7, 18], "jacobian": [7, 18], "default_can_collid": 7, "two": [7, 8, 16, 18, 19, 21], "contain": [7, 18], "primit": [7, 16, 18], "build_from_full_mesh": [7, 18], "helper": [7, 18], "automat": [7, 8, 18, 19], "construct_is_on_surfac": [7, 18], "construct_faces_to_edg": [7, 18], "row": [7, 16, 18, 21], "pointedgedistancetyp": [8, 19], "between": [8, 11, 12, 16, 19, 21], "p_e0": [8, 19], "zero": [8, 19], "p_e1": [8, 19], "p_e": [8, 19], "interior": [8, 19], "auto": [8, 19], "edgeedgedistancetyp": [8, 19], "ea0_eb0": [8, 19], "ea0_eb1": [8, 19], "ea1_eb0": [8, 19], "ea1_eb1": [8, 19], "ea_eb0": [8, 19], "ea_eb1": [8, 19], "ea0_eb": [8, 19], "ea1_eb": [8, 19], "ea_eb": [8, 19], "pointtriangledistancetyp": [8, 19], "p_t0": [8, 19], "p_t1": [8, 19], "p_t2": [8, 19], "p_e2": [8, 19], "p_t": [8, 19], "derivedp": 8, "derivede0": 8, "derivede1": 8, "point_edge_distance_typ": [8, 19], "matrixbas": 8, "p": [8, 19], "e0": [8, 19, 23], "e1": [8, 19, 23], "derivedea0": 8, "derivedea1": 8, "derivedeb0": 8, "derivedeb1": 8, "edge_edge_distance_typ": [8, 19], "ea0": [8, 19], "ea1": [8, 19], "eb0": [8, 19], "eb1": [8, 19], "derivedt0": 8, "derivedt1": 8, "derivedt2": 8, "point_triangle_distance_typ": [8, 19], "t0": [8, 19], "t1": [8, 19], "t2": [8, 19], "third": [8, 19], "edge_edge_mollifier_threshold": [8, 19], "ea0_rest": [8, 19], "ea1_rest": [8, 19], "eb0_rest": [8, 19], "eb1_rest": [8, 19], "edge_edge_cross_squarednorm": [8, 19], "norm": [8, 19], "cross": [8, 19], "product": [8, 19], "derivedgrad": 8, "edge_edge_cross_squarednorm_gradi": [8, 19], "plainobjectbas": 8, "grad": 8, "out": [8, 13], "derivedhess": 8, "edge_edge_cross_squarednorm_hessian": [8, 19], "hess": 8, "edge_edge_mollifi": [8, 19], "smooth": [8, 12, 19], "close": [8, 19], "premultipli": [8, 19], "edge_edge_mollifier_gradi": [8, 19], "edge_edge_mollifier_hessian": [8, 19], "doxygenfunct": [8, 10], "unabl": [8, 10], "resolv": [8, 10], "edge_edge_dist": [8, 19], "match": [8, 10], "dtype": [8, 19], "edge_edge_distance_gradi": [8, 19], "edge_edge_distance_hessian": [8, 19], "line_line_dist": [8, 19], "infinit": [8, 19], "actual": [8, 19], "defin": [8, 19], "line_line_distance_gradi": [8, 19], "line_line_distance_hessian": [8, 19], "point_edge_dist": [8, 19], "point_edge_distance_gradi": [8, 19], "point_edge_distance_hessian": [8, 19], "point_line_dist": [8, 19], "point_line_distance_gradi": [8, 19], "point_line_distance_hessian": [8, 19], "derivedorigin": 8, "derivednorm": 8, "point_plane_dist": [8, 19], "point_plane_distance_gradi": [8, 19], "point_plane_distance_hessian": [8, 19], "derivedp0": 8, "derivedp1": 8, "point_point_dist": [8, 19], "p0": [8, 19], "p1": [8, 19], "point_point_distance_gradi": [8, 19], "point_point_distance_hessian": [8, 19], "point_triangle_dist": [8, 19], "point_triangle_distance_gradi": [8, 19], "point_triangle_distance_hessian": [8, 19], "compute_barrier_potential_gradi": 10, "compute_barrier_potential_hessian": 10, "compute_friction_potential_gradi": 10, "is_step_collision_fre": [10, 16, 21], "vertices_t0": [10, 16, 21], "vertices_t1": [10, 16, 21], "broad_phase_method": [10, 11, 16, 21, 22], "default_broad_phase_method": [10, 11], "max_iter": [10, 16, 21], "compute_minimum_dist": 11, "element": [11, 12, 16, 21, 23], "ha": [11, 22], "reusabl": [12, 14], "simul": [12, 14], "its": 12, "stiff": 12, "lag": 12, "dissip": 12, "As": 12, "doe": 12, "solver": 12, "polyfem": 12, "rigid": 12, "dynam": [12, 14], "both": 12, "pybind11": [12, 14], "contributor": [12, 14], "come": [12, 14], "fix": [12, 14], "tutori": [12, 14], "highli": [12, 14], "submit": [12, 14], "pull": [12, 14, 23], "simpli": [12, 14], "fork": [12, 14], "repositori": [12, 14], "cite": [12, 14], "author": [12, 13, 14], "zachari": [12, 14], "titl": [12, 14], "url": [12, 14], "io": [12, 14], "year": [12, 14], "2020": [12, 13, 14], "addition": [12, 14], "paper": [12, 14], "li2020ipc": [12, 14], "minchen": [12, 14], "teseo": [12, 14], "schneider": [12, 14], "timothi": [12, 14], "langloi": [12, 14], "deni": [12, 14], "zorin": [12, 14], "daniel": [12, 14], "panozzo": [12, 14], "chenfanfu": [12, 14], "jiang": [12, 14], "danni": [12, 14], "m": [12, 14, 16, 17, 18, 19, 21, 22], "kaufman": [12, 14], "invers": [12, 14], "deform": [12, 14], "journal": [12, 14], "acm": [12, 14], "tran": [12, 14], "graph": [12, 14], "siggraph": [12, 14], "volum": [12, 14], "39": [12, 14], "4": [12, 14, 16, 17], "articleno": [12, 14], "49": [12, 14], "mit": [12, 13, 14], "copyright": 13, "c": [13, 14], "herebi": 13, "grant": 13, "charg": 13, "obtain": 13, "copi": 13, "associ": 13, "deal": 13, "restrict": 13, "limit": 13, "modifi": 13, "merg": 13, "distribut": 13, "sublicens": 13, "sell": 13, "permit": 13, "whom": 13, "furnish": 13, "subject": 13, "condit": 13, "abov": 13, "notic": 13, "shall": 13, "substanti": 13, "portion": 13, "THE": 13, "AS": 13, "warranti": 13, "OF": 13, "OR": 13, "impli": 13, "BUT": 13, "NOT": 13, "TO": 13, "merchant": 13, "fit": 13, "FOR": 13, "particular": 13, "purpos": 13, "AND": 13, "noninfring": 13, "IN": 13, "NO": 13, "holder": 13, "BE": 13, "liabl": 13, "claim": 13, "damag": 13, "liabil": 13, "contract": 13, "tort": 13, "aris": 13, "WITH": 13, "bind": 14, "current": 14, "built": 14, "scratch": 14, "py": 14, "script": 14, "setuptool": 14, "them": 14, "success": 14, "import": 14, "ipctk": [14, 15, 16, 17, 18, 19, 21, 22], "jupyt": 14, "notebook": 14, "ipynb": 14, "featur": 14, "txt": 14, "float": [15, 16, 17, 18, 19, 21], "numpi": [16, 17, 18, 19, 21, 22], "ndarrai": [16, 17, 18, 19, 21, 22], "float64": [16, 17, 18, 19, 21, 22], "n": [16, 17, 18, 19, 21, 22], "int32": [16, 17, 18], "tmax": 16, "06": [16, 21], "10000000": [16, 21], "conservative_resc": 16, "tupl": 16, "end": [16, 21, 23], "indici": 16, "triangular": 16, "separ": 16, "had": 16, "interv": 16, "print_ccd_queri": 16, "none": [16, 18, 22], "properti": [16, 18], "vertex0_id": 16, "vertex1_id": 16, "vertex_id": [16, 17], "list": [16, 17, 18], "edge_id": 16, "edge0_id": 16, "edge1_id": 16, "face_id": 16, "arg": [16, 18, 19], "kwarg": [16, 18, 19], "overload": [16, 18, 19], "inflation_radiu": 16, "discret": 16, "amount": 16, "assum": [16, 21], "trajectori": [16, 21], "maxim": [16, 21], "empti": 16, "occur": [16, 21], "save_obj": 16, "filenam": [16, 23], "str": 16, "collisionstencil": 17, "compute_potential_gradi": 17, "compute_potential_hessian": 17, "project_hessian_to_psd": 17, "collect": 18, "abc": 18, "callabl": 18, "scipi": 18, "spars": 18, "csc_matrix": 18, "param": 18, "tsl": 18, "robin_set": 18, "absl": 18, "lts_20220623": 18, "hash_intern": 18, "equal_to": 18, "alloc": 18, "rh": 18, "power_of_two_growth_polici": 18, "2ul": 18, "segment": 19, "12": 19, "7": 19, "loggerlevel": 22, "trace": 22, "debug": 22, "info": 22, "error": 22, "critic": 22, "off": 22, "set_logger_level": 22, "get_num_thread": 22, "set_num_thread": 22, "nthread": 22, "clangformat": 23, "autom": 23, "push": 23, "creat": 23, "In": 23, "stick": 23, "snake_cas": 23, "variabl": 23, "pascalcas": 23, "struct": 23, "all_cap": 23, "constant": 23, "m_": 23, "set_memb": 23, "materi": 23, "coordin": 23, "veloc": 23, "suffix": 23, "_t0": 23, "_t1": 23}, "objects": {"": [[5, 0, 1, "_CPPv4N3ipc16BroadPhaseMethodE", "ipc::BroadPhaseMethod", "Enumeration of implemented broad phase methods."], [5, 1, 1, "_CPPv4N3ipc16BroadPhaseMethod11BRUTE_FORCEE", "ipc::BroadPhaseMethod::BRUTE_FORCE", ""], [5, 1, 1, "_CPPv4N3ipc16BroadPhaseMethod9HASH_GRIDE", "ipc::BroadPhaseMethod::HASH_GRID", ""], [5, 1, 1, "_CPPv4N3ipc16BroadPhaseMethod11NUM_METHODSE", "ipc::BroadPhaseMethod::NUM_METHODS", ""], [5, 1, 1, "_CPPv4N3ipc16BroadPhaseMethod12SPATIAL_HASHE", "ipc::BroadPhaseMethod::SPATIAL_HASH", ""], [5, 1, 1, "_CPPv4N3ipc16BroadPhaseMethod23SWEEP_AND_TINIEST_QUEUEE", "ipc::BroadPhaseMethod::SWEEP_AND_TINIEST_QUEUE", ""], [5, 1, 1, "_CPPv4N3ipc16BroadPhaseMethod27SWEEP_AND_TINIEST_QUEUE_GPUE", "ipc::BroadPhaseMethod::SWEEP_AND_TINIEST_QUEUE_GPU", ""], [11, 2, 1, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE", "ipc::CollisionConstraints::compute_minimum_distance", "Computes the minimum distance between any non-adjacent elements."], [11, 3, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::CollisionConstraints::compute_minimum_distance::mesh", "[in] The collision mesh."], [11, 3, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-vertices", "ipc::CollisionConstraints::compute_minimum_distance::vertices", "[in] Vertices of the collision mesh."], [7, 4, 1, "_CPPv4N3ipc13CollisionMeshE", "ipc::CollisionMesh", "A class for encapsolating the transformation/selections needed to go from a volumetric FE mesh to a surface collision mesh."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object directly from the collision mesh vertices."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object from a full mesh vertices."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshEv", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh indexed into the full mesh vertices."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh indexed into the full mesh vertices."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-full_rest_positions", "ipc::CollisionMesh::CollisionMesh::full_rest_positions", "The vertices of the full mesh at rest."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-include_vertex", "ipc::CollisionMesh::CollisionMesh::include_vertex", "Vector of bools indicating whether each vertex should be included in the collision mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-rest_positions", "ipc::CollisionMesh::CollisionMesh::rest_positions", "The vertices of the collision mesh at rest."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh27are_adjacencies_initializedEv", "ipc::CollisionMesh::are_adjacencies_initialized", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh30are_area_jacobians_initializedEv", "ipc::CollisionMesh::are_area_jacobians_initialized", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionMesh::build_from_full_mesh", "Helper function that automatically builds include_vertex using construct_is_on_surface."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::build_from_full_mesh::edges", "The edge matrix of mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::build_from_full_mesh::faces", "The face matrix of mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-full_rest_positions", "ipc::CollisionMesh::build_from_full_mesh::full_rest_positions", "The full vertices at rest."], [7, 5, 1, "_CPPv4N3ipc13CollisionMesh11can_collideE", "ipc::CollisionMesh::can_collide", "A function that takes two vertex IDs and returns true if the vertices (and faces or edges containing the vertices) can collide."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionMesh::construct_faces_to_edges", "Construct a matrix that maps from the faces' edges to rows in the edges matrix."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::construct_faces_to_edges::edges", "The edge matrix of mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::construct_faces_to_edges::faces", "The face matrix of mesh."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE", "ipc::CollisionMesh::construct_is_on_surface", "Construct a vector of bools indicating whether each vertex is on the surface."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::construct_is_on_surface::edges", "The surface edges of the mesh."], [7, 3, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE-p-num_vertices", "ipc::CollisionMesh::construct_is_on_surface::num_vertices", "The number of vertices in the mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh3dimEv", "ipc::CollisionMesh::dim", "Get the dimension of the mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::displace_vertices", "Compute the vertex positions from vertex displacements on the full mesh."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::displace_vertices::full_displacements", "The vertex displacements on the full mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t", "ipc::CollisionMesh::edge_area", "Get the barycentric area of an edge."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t-p-ei", "ipc::CollisionMesh::edge_area::ei", "Edge ID."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t", "ipc::CollisionMesh::edge_area_gradient", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t-p-ei", "ipc::CollisionMesh::edge_area_gradient::ei", "Edge ID."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh10edge_areasEv", "ipc::CollisionMesh::edge_areas", "Get the barycentric area of the edges."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh23edge_vertex_adjacenciesEv", "ipc::CollisionMesh::edge_vertex_adjacencies", "Get the edge-vertex adjacency matrix."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh5edgesEv", "ipc::CollisionMesh::edges", "Get the edges of the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh5facesEv", "ipc::CollisionMesh::faces", "Get the faces of the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh14faces_to_edgesEv", "ipc::CollisionMesh::faces_to_edges", "Get the mapping from faces to edges of the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh9full_ndofEv", "ipc::CollisionMesh::full_ndof", "Get the number of degrees of freedom in the full mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh17full_num_verticesEv", "ipc::CollisionMesh::full_num_vertices", "Get the number of vertices in the full mesh."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh16init_adjacenciesEv", "ipc::CollisionMesh::init_adjacencies", "Initialize vertex-vertex and edge-vertex adjacencies."], [7, 2, 1, "_CPPv4N3ipc13CollisionMesh19init_area_jacobiansEv", "ipc::CollisionMesh::init_area_jacobians", "Initialize vertex and edge areas."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi", "ipc::CollisionMesh::is_vertex_on_boundary", "Is a vertex on the boundary of the collision mesh?"], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi-p-vi", "ipc::CollisionMesh::is_vertex_on_boundary::vi", "Vertex ID."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::map_displacements", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::map_displacements::full_displacements", "The vertex displacements on the full mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh4ndofEv", "ipc::CollisionMesh::ndof", "Get the number of degrees of freedom in the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh9num_edgesEv", "ipc::CollisionMesh::num_edges", "Get the number of edges in the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh9num_facesEv", "ipc::CollisionMesh::num_faces", "Get the number of faces in the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh12num_verticesEv", "ipc::CollisionMesh::num_vertices", "Get the number of vertices in the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh14rest_positionsEv", "ipc::CollisionMesh::rest_positions", "Get the vertices of the collision mesh at rest."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::to_full_dof", "Map a matrix quantity on the collision mesh to the full mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE", "ipc::CollisionMesh::to_full_dof", "Map a vector quantity on the collision mesh to the full mesh."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE-p-X", "ipc::CollisionMesh::to_full_dof::X", "Matrix quantity on the collision mesh with size equal to ndof() \u00d7 ndof()."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE-p-x", "ipc::CollisionMesh::to_full_dof::x", "Vector quantity on the collision mesh with size equal to ndof()."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t", "ipc::CollisionMesh::to_full_vertex_id", "Map a vertex ID to the corresponding vertex ID in the full mesh."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t-p-id", "ipc::CollisionMesh::to_full_vertex_id::id", "Vertex ID in the collision mesh."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t", "ipc::CollisionMesh::vertex_area", "Get the barycentric area of a vertex."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area::vi", "Vertex ID."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t", "ipc::CollisionMesh::vertex_area_gradient", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area_gradient::vi", "Vertex ID."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh12vertex_areasEv", "ipc::CollisionMesh::vertex_areas", "Get the barycentric area of the vertices."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh25vertex_vertex_adjacenciesEv", "ipc::CollisionMesh::vertex_vertex_adjacencies", "Get the vertex-vertex adjacency matrix."], [7, 2, 1, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::vertices", "Compute the vertex positions from the positions of the full mesh."], [7, 3, 2, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::vertices::full_positions", "Compute the vertex positions from the positions of the full mesh."], [7, 2, 1, "_CPPv4N3ipc13CollisionMeshD0Ev", "ipc::CollisionMesh::~CollisionMesh", "Destroy the Collision Mesh object."], [5, 5, 1, "_CPPv4N3ipc34DEFAULT_CCD_CONSERVATIVE_RESCALINGE", "ipc::DEFAULT_CCD_CONSERVATIVE_RESCALING", "The default conservative rescaling value used to avoid taking steps exactly to impact."], [5, 5, 1, "_CPPv4N3ipc26DEFAULT_CCD_MAX_ITERATIONSE", "ipc::DEFAULT_CCD_MAX_ITERATIONS", "The default maximum number of iterations used with Tight-Inclusion CCD."], [5, 5, 1, "_CPPv4N3ipc21DEFAULT_CCD_TOLERANCEE", "ipc::DEFAULT_CCD_TOLERANCE", "The default tolerance used with Tight-Inclusion CCD."], [8, 0, 1, "_CPPv4N3ipc20EdgeEdgeDistanceTypeE", "ipc::EdgeEdgeDistanceType", "Closest pair between two edges."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType4AUTOE", "ipc::EdgeEdgeDistanceType::AUTO", "Automatically determine the closest pair."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA0_EBE", "ipc::EdgeEdgeDistanceType::EA0_EB", "The edges are closest at vertex 0 of edge A and the interior of edge B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB0E", "ipc::EdgeEdgeDistanceType::EA0_EB0", "The edges are closest at vertex 0 of edge A and 0 of edge B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB1E", "ipc::EdgeEdgeDistanceType::EA0_EB1", "The edges are closest at vertex 0 of edge A and 1 of edge B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA1_EBE", "ipc::EdgeEdgeDistanceType::EA1_EB", "The edges are closest at vertex 1 of edge A and the interior of edge B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB0E", "ipc::EdgeEdgeDistanceType::EA1_EB0", "The edges are closest at vertex 1 of edge A and 0 of edge B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB1E", "ipc::EdgeEdgeDistanceType::EA1_EB1", "The edges are closest at vertex 1 of edge A and 1 of edge B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType5EA_EBE", "ipc::EdgeEdgeDistanceType::EA_EB", "The edges are closest at an interior point of edge A and B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB0E", "ipc::EdgeEdgeDistanceType::EA_EB0", "The edges are closest at the interior of edge A and vertex 0 of edge B."], [8, 1, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB1E", "ipc::EdgeEdgeDistanceType::EA_EB1", "The edges are closest at the interior of edge A and vertex 1 of edge B."], [8, 0, 1, "_CPPv4N3ipc21PointEdgeDistanceTypeE", "ipc::PointEdgeDistanceType", "Closest pair between a point and edge."], [8, 1, 1, "_CPPv4N3ipc21PointEdgeDistanceType4AUTOE", "ipc::PointEdgeDistanceType::AUTO", "Automatically determine the closest pair."], [8, 1, 1, "_CPPv4N3ipc21PointEdgeDistanceType3P_EE", "ipc::PointEdgeDistanceType::P_E", "The point is closest to the interior of the edge."], [8, 1, 1, "_CPPv4N3ipc21PointEdgeDistanceType4P_E0E", "ipc::PointEdgeDistanceType::P_E0", "The point is closest to edge vertex zero."], [8, 1, 1, "_CPPv4N3ipc21PointEdgeDistanceType4P_E1E", "ipc::PointEdgeDistanceType::P_E1", "The point is closest to edge vertex one."], [8, 0, 1, "_CPPv4N3ipc25PointTriangleDistanceTypeE", "ipc::PointTriangleDistanceType", "Closest pair between a point and triangle."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType4AUTOE", "ipc::PointTriangleDistanceType::AUTO", "Automatically determine the closest pair."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E0E", "ipc::PointTriangleDistanceType::P_E0", "The point is closest to triangle edge zero (vertex zero to one)."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E1E", "ipc::PointTriangleDistanceType::P_E1", "The point is closest to triangle edge one (vertex one to two)."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E2E", "ipc::PointTriangleDistanceType::P_E2", "The point is closest to triangle edge two (vertex two to zero)."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType3P_TE", "ipc::PointTriangleDistanceType::P_T", "The point is closest to the interior of the triangle."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T0E", "ipc::PointTriangleDistanceType::P_T0", "The point is closest to triangle vertex zero."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T1E", "ipc::PointTriangleDistanceType::P_T1", "The point is closest to triangle vertex one."], [8, 1, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T2E", "ipc::PointTriangleDistanceType::P_T2", "The point is closest to triangle vertex two."], [4, 2, 1, "_CPPv4I0EN3ipc7barrierE1TRK1TKd", "ipc::barrier", "Function that grows to infinity as x approaches 0 from the right."], [4, 6, 2, "_CPPv4I0EN3ipc7barrierE1TRK1TKd", "ipc::barrier::T", "Function that grows to infinity as x approaches 0 from the right."], [4, 3, 2, "_CPPv4I0EN3ipc7barrierE1TRK1TKd-p-d", "ipc::barrier::d", "The distance."], [4, 3, 2, "_CPPv4I0EN3ipc7barrierE1TRK1TKd-p-dhat", "ipc::barrier::dhat", "Activation distance of the barrier."], [4, 2, 1, "_CPPv4N3ipc16barrier_gradientEKdKd", "ipc::barrier_gradient", "Derivative of the barrier function."], [4, 3, 2, "_CPPv4N3ipc16barrier_gradientEKdKd-p-d", "ipc::barrier_gradient::d", "The distance."], [4, 3, 2, "_CPPv4N3ipc16barrier_gradientEKdKd-p-dhat", "ipc::barrier_gradient::dhat", "Activation distance of the barrier."], [4, 2, 1, "_CPPv4N3ipc15barrier_hessianEKdKd", "ipc::barrier_hessian", "Second derivative of the barrier function."], [4, 3, 2, "_CPPv4N3ipc15barrier_hessianEKdKd-p-d", "ipc::barrier_hessian::d", "The distance."], [4, 3, 2, "_CPPv4N3ipc15barrier_hessianEKdKd-p-dhat", "ipc::barrier_hessian::dhat", "Activation distance of the barrier."], [8, 2, 1, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm", "Compute the squared norm of the edge-edge cross product."], [8, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEA0", "Compute the squared norm of the edge-edge cross product."], [8, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEA1", "Compute the squared norm of the edge-edge cross product."], [8, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEB0", "Compute the squared norm of the edge-edge cross product."], [8, 6, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_cross_squarednorm::DerivedEB1", "Compute the squared norm of the edge-edge cross product."], [8, 3, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0", "ipc::edge_edge_cross_squarednorm::ea0", "The first vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1", "ipc::edge_edge_cross_squarednorm::ea1", "The second vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb0", "ipc::edge_edge_cross_squarednorm::eb0", "The first vertex of the second edge."], [8, 3, 2, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb1", "ipc::edge_edge_cross_squarednorm::eb1", "The second vertex of the second edge."], [8, 2, 1, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient", "Compute the gradient of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEA0", "Compute the gradient of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEA1", "Compute the gradient of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEB0", "Compute the gradient of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedEB1", "Compute the gradient of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_cross_squarednorm_gradient::DerivedGrad", "Compute the gradient of the squared norm of the edge cross product."], [8, 3, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea0", "ipc::edge_edge_cross_squarednorm_gradient::ea0", "[in] The first vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea1", "ipc::edge_edge_cross_squarednorm_gradient::ea1", "[in] The second vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb0", "ipc::edge_edge_cross_squarednorm_gradient::eb0", "[in] The first vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb1", "ipc::edge_edge_cross_squarednorm_gradient::eb1", "[in] The second vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::edge_edge_cross_squarednorm_gradient::grad", "[out] The gradient of the squared norm of the edge cross product wrt ea0, ea1, eb0, and eb1."], [8, 2, 1, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian", "Compute the hessian of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEA0", "Compute the hessian of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEA1", "Compute the hessian of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEB0", "Compute the hessian of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedEB1", "Compute the hessian of the squared norm of the edge cross product."], [8, 6, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_cross_squarednorm_hessian::DerivedHess", "Compute the hessian of the squared norm of the edge cross product."], [8, 3, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea0", "ipc::edge_edge_cross_squarednorm_hessian::ea0", "The first vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea1", "ipc::edge_edge_cross_squarednorm_hessian::ea1", "The second vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb0", "ipc::edge_edge_cross_squarednorm_hessian::eb0", "The first vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb1", "ipc::edge_edge_cross_squarednorm_hessian::eb1", "The second vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::edge_edge_cross_squarednorm_hessian::hess", "[out] The hessian of the squared norm of the edge cross product wrt ea0, ea1, eb0, and eb1."], [8, 2, 1, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type", "Determine the closest pair between two edges."], [8, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEA0", "Determine the closest pair between two edges."], [8, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEA1", "Determine the closest pair between two edges."], [8, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEB0", "Determine the closest pair between two edges."], [8, 6, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_distance_type::DerivedEB1", "Determine the closest pair between two edges."], [8, 3, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0", "ipc::edge_edge_distance_type::ea0", "The first vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1", "ipc::edge_edge_distance_type::ea1", "The second vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb0", "ipc::edge_edge_distance_type::eb0", "The first vertex of the second edge."], [8, 3, 2, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb1", "ipc::edge_edge_distance_type::eb1", "The second vertex of the second edge."], [8, 2, 1, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier", "Compute a mollifier for the edge-edge distance."], [8, 2, 1, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td", "ipc::edge_edge_mollifier", "Mollifier function for edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEA0", "Compute a mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEA1", "Compute a mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEB0", "Compute a mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd", "ipc::edge_edge_mollifier::DerivedEB1", "Compute a mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td", "ipc::edge_edge_mollifier::T", "Mollifier function for edge-edge distance."], [8, 3, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-ea0", "ipc::edge_edge_mollifier::ea0", "The first vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-ea1", "ipc::edge_edge_mollifier::ea1", "The second vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-eb0", "ipc::edge_edge_mollifier::eb0", "The first vertex of the second edge."], [8, 3, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-eb1", "ipc::edge_edge_mollifier::eb1", "The second vertex of the second edge."], [8, 3, 2, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [8, 3, 2, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [8, 3, 2, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td-p-x", "ipc::edge_edge_mollifier::x", "Squared norm of the edge-edge cross product."], [8, 2, 1, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient", "Compute the gradient of the mollifier for the edge-edge distance."], [8, 2, 1, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td", "ipc::edge_edge_mollifier_gradient", "The gradient of the mollifier function for edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEA0", "Compute the gradient of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEA1", "Compute the gradient of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEB0", "Compute the gradient of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedEB1", "Compute the gradient of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::edge_edge_mollifier_gradient::DerivedGrad", "Compute the gradient of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td", "ipc::edge_edge_mollifier_gradient::T", "The gradient of the mollifier function for edge-edge distance."], [8, 3, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea0", "ipc::edge_edge_mollifier_gradient::ea0", "[in] The first vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea1", "ipc::edge_edge_mollifier_gradient::ea1", "[in] The second vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb0", "ipc::edge_edge_mollifier_gradient::eb0", "[in] The first vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eb1", "ipc::edge_edge_mollifier_gradient::eb1", "[in] The second vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [8, 3, 2, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [8, 3, 2, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::edge_edge_mollifier_gradient::grad", "[out] The gradient of the mollifier."], [8, 3, 2, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td-p-x", "ipc::edge_edge_mollifier_gradient::x", "Squared norm of the edge-edge cross product."], [8, 2, 1, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian", "Compute the hessian of the mollifier for the edge-edge distance."], [8, 2, 1, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td", "ipc::edge_edge_mollifier_hessian", "The hessian of the mollifier function for edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEA0", "Compute the hessian of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEA1", "Compute the hessian of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEB0", "Compute the hessian of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedEB1", "Compute the hessian of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::edge_edge_mollifier_hessian::DerivedHess", "Compute the hessian of the mollifier for the edge-edge distance."], [8, 6, 2, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td", "ipc::edge_edge_mollifier_hessian::T", "The hessian of the mollifier function for edge-edge distance."], [8, 3, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea0", "ipc::edge_edge_mollifier_hessian::ea0", "[in] The first vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea1", "ipc::edge_edge_mollifier_hessian::ea1", "[in] The second vertex of the first edge."], [8, 3, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb0", "ipc::edge_edge_mollifier_hessian::eb0", "[in] The first vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eb1", "ipc::edge_edge_mollifier_hessian::eb1", "[in] The second vertex of the second edge."], [8, 3, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [8, 3, 2, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [8, 3, 2, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::edge_edge_mollifier_hessian::hess", "[out] The hessian of the mollifier."], [8, 3, 2, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td-p-x", "ipc::edge_edge_mollifier_hessian::x", "Squared norm of the edge-edge cross product."], [8, 2, 1, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold", "Compute the threshold of the mollifier edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEA0", "Compute the threshold of the mollifier edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEA1", "Compute the threshold of the mollifier edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEB0", "Compute the threshold of the mollifier edge-edge distance."], [8, 6, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::edge_edge_mollifier_threshold::DerivedEB1", "Compute the threshold of the mollifier edge-edge distance."], [8, 3, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0_rest", "ipc::edge_edge_mollifier_threshold::ea0_rest", "The rest position of the first vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1_rest", "ipc::edge_edge_mollifier_threshold::ea1_rest", "The rest position of the second vertex of the first edge."], [8, 3, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb0_rest", "ipc::edge_edge_mollifier_threshold::eb0_rest", "The rest position of the first vertex of the second edge."], [8, 3, 2, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-eb1_rest", "ipc::edge_edge_mollifier_threshold::eb1_rest", "The rest position of the second vertex of the second edge."], [11, 2, 1, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod", "ipc::has_intersections", "Determine if the mesh has self intersections."], [11, 3, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-broad_phase_method", "ipc::has_intersections::broad_phase_method", "The broad phase method to use."], [11, 3, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-mesh", "ipc::has_intersections::mesh", "The collision mesh."], [11, 3, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-vertices", "ipc::has_intersections::vertices", "Vertices of the collision mesh."], [8, 2, 1, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance", "Compute the distance between a two infinite lines in 3D."], [8, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEA0", "Compute the distance between a two infinite lines in 3D."], [8, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEA1", "Compute the distance between a two infinite lines in 3D."], [8, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEB0", "Compute the distance between a two infinite lines in 3D."], [8, 6, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::DerivedEB1", "Compute the distance between a two infinite lines in 3D."], [8, 3, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea0", "ipc::line_line_distance::ea0", "The first vertex of the edge defining the second line."], [8, 3, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE-p-ea1", "ipc::line_line_distance::ea1", "The second vertex of the edge defining the second line."], [8, 3, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::eb0", "Compute the distance between a two infinite lines in 3D."], [8, 3, 2, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE", "ipc::line_line_distance::eb1", "Compute the distance between a two infinite lines in 3D."], [8, 2, 1, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient", "Compute the gradient of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEA0", "Compute the gradient of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEA1", "Compute the gradient of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEB0", "Compute the gradient of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedEB1", "Compute the gradient of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a two lines in 3D."], [8, 3, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea0", "ipc::line_line_distance_gradient::ea0", "[in] The first vertex of the edge defining the second line."], [8, 3, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-ea1", "ipc::line_line_distance_gradient::ea1", "[in] The second vertex of the edge defining the second line."], [8, 3, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::eb0", "Compute the gradient of the distance between a two lines in 3D."], [8, 3, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::line_line_distance_gradient::eb1", "Compute the gradient of the distance between a two lines in 3D."], [8, 3, 2, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::line_line_distance_gradient::grad", "[out] The gradient of the distance wrt ea0, ea1, eb0, and eb1."], [8, 2, 1, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian", "Compute the hessian of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEA0", "Compute the hessian of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEA1", "Compute the hessian of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEB0", "Compute the hessian of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedEB1", "Compute the hessian of the distance between a two lines in 3D."], [8, 6, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::DerivedHess", "Compute the hessian of the distance between a two lines in 3D."], [8, 3, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea0", "ipc::line_line_distance_hessian::ea0", "[in] The first vertex of the edge defining the second line."], [8, 3, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-ea1", "ipc::line_line_distance_hessian::ea1", "[in] The second vertex of the edge defining the second line."], [8, 3, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::eb0", "Compute the hessian of the distance between a two lines in 3D."], [8, 3, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::line_line_distance_hessian::eb1", "Compute the hessian of the distance between a two lines in 3D."], [8, 3, 2, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::line_line_distance_hessian::hess", "[out] The hessian of the distance wrt ea0, ea1, eb0, and eb1."], [8, 2, 1, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type", "Determine the closest pair between a point and edge."], [8, 6, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type::DerivedE0", "Determine the closest pair between a point and edge."], [8, 6, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type::DerivedE1", "Determine the closest pair between a point and edge."], [8, 6, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_edge_distance_type::DerivedP", "Determine the closest pair between a point and edge."], [8, 3, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e0", "ipc::point_edge_distance_type::e0", "The first vertex of the edge."], [8, 3, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e1", "ipc::point_edge_distance_type::e1", "The second vertex of the edge."], [8, 3, 2, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-p", "ipc::point_edge_distance_type::p", "The point."], [8, 2, 1, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance", "Compute the distance between a point and line in 2D or 3D."], [8, 6, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance::DerivedE0", "Compute the distance between a point and line in 2D or 3D."], [8, 6, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance::DerivedE1", "Compute the distance between a point and line in 2D or 3D."], [8, 6, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE", "ipc::point_line_distance::DerivedP", "Compute the distance between a point and line in 2D or 3D."], [8, 3, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e0", "ipc::point_line_distance::e0", "The first vertex of the edge defining the line."], [8, 3, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-e1", "ipc::point_line_distance::e1", "The second vertex of the edge defining the line."], [8, 3, 2, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE-p-p", "ipc::point_line_distance::p", "The point."], [8, 2, 1, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient", "Compute the gradient of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedE0", "Compute the gradient of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedE1", "Compute the gradient of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_line_distance_gradient::DerivedP", "Compute the gradient of the distance between a point and line."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-e0", "ipc::point_line_distance_gradient::e0", "[in] The first vertex of the edge defining the line."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-e1", "ipc::point_line_distance_gradient::e1", "[in] The second vertex of the edge defining the line."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_line_distance_gradient::grad", "[out] The gradient of the distance wrt p, e0, and e1."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p", "ipc::point_line_distance_gradient::p", "[in] The point."], [8, 2, 1, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian", "Compute the hessian of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedE0", "Compute the hessian of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedE1", "Compute the hessian of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedHess", "Compute the hessian of the distance between a point and line."], [8, 6, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_line_distance_hessian::DerivedP", "Compute the hessian of the distance between a point and line."], [8, 3, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-e0", "ipc::point_line_distance_hessian::e0", "[in] The first vertex of the edge defining the line."], [8, 3, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-e1", "ipc::point_line_distance_hessian::e1", "[in] The second vertex of the edge defining the line."], [8, 3, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_line_distance_hessian::hess", "[out] The hessian of the distance wrt p, e0, and e1."], [8, 3, 2, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p", "ipc::point_line_distance_hessian::p", "[in] The point."], [8, 2, 1, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance", "Compute the distance between a point and a plane."], [8, 2, 1, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance", "Compute the distance between a point and a plane."], [8, 6, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance::DerivedNormal", "Compute the distance between a point and a plane."], [8, 6, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance::DerivedOrigin", "Compute the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedP", "Compute the distance between a point and a plane."], [8, 6, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE", "ipc::point_plane_distance::DerivedP", "Compute the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedT0", "Compute the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedT1", "Compute the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_plane_distance::DerivedT2", "Compute the distance between a point and a plane."], [8, 3, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE-p-normal", "ipc::point_plane_distance::normal", "The normal of the plane."], [8, 3, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE-p-origin", "ipc::point_plane_distance::origin", "The origin of the plane."], [8, 3, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-p", "ipc::point_plane_distance::p", "The point."], [8, 3, 2, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE-p-p", "ipc::point_plane_distance::p", "The point."], [8, 3, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t0", "ipc::point_plane_distance::t0", "The first vertex of the triangle."], [8, 3, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t1", "ipc::point_plane_distance::t1", "The second vertex of the triangle."], [8, 3, 2, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t2", "ipc::point_plane_distance::t2", "The third vertex of the triangle."], [8, 2, 1, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient", "Compute the gradient of the distance between a point and a plane."], [8, 2, 1, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedGrad", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedNormal", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedOrigin", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedP", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedP", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedT0", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedT1", "Compute the gradient of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_plane_distance_gradient::DerivedT2", "Compute the gradient of the distance between a point and a plane."], [8, 3, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_plane_distance_gradient::grad", "[out] The gradient of the distance wrt p, t0, t1, and t2."], [8, 3, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_plane_distance_gradient::grad", "[out] The gradient of the distance wrt p."], [8, 3, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-normal", "ipc::point_plane_distance_gradient::normal", "[in] The normal of the plane."], [8, 3, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-origin", "ipc::point_plane_distance_gradient::origin", "[in] The origin of the plane."], [8, 3, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p", "ipc::point_plane_distance_gradient::p", "[in] The point."], [8, 3, 2, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p", "ipc::point_plane_distance_gradient::p", "[in] The point."], [8, 3, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-t0", "ipc::point_plane_distance_gradient::t0", "[in] The first vertex of the triangle."], [8, 3, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-t1", "ipc::point_plane_distance_gradient::t1", "[in] The second vertex of the triangle."], [8, 3, 2, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-t2", "ipc::point_plane_distance_gradient::t2", "[in] The third vertex of the triangle."], [8, 2, 1, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian", "Compute the hessian of the distance between a point and a plane."], [8, 2, 1, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedHess", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedHess", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedNormal", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedOrigin", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedP", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedP", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedT0", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedT1", "Compute the hessian of the distance between a point and a plane."], [8, 6, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_plane_distance_hessian::DerivedT2", "Compute the hessian of the distance between a point and a plane."], [8, 3, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_plane_distance_hessian::hess", "[out] The hessian of the distance wrt p, t0, t1, and t2."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_plane_distance_hessian::hess", "[out] The hessian of the distance wrt p."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-normal", "ipc::point_plane_distance_hessian::normal", "[in] The normal of the plane."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-origin", "ipc::point_plane_distance_hessian::origin", "[in] The origin of the plane."], [8, 3, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p", "ipc::point_plane_distance_hessian::p", "[in] The point."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p", "ipc::point_plane_distance_hessian::p", "[in] The point."], [8, 3, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-t0", "ipc::point_plane_distance_hessian::t0", "[in] The first vertex of the triangle."], [8, 3, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-t1", "ipc::point_plane_distance_hessian::t1", "[in] The second vertex of the triangle."], [8, 3, 2, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-t2", "ipc::point_plane_distance_hessian::t2", "[in] The third vertex of the triangle."], [8, 2, 1, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_distance", "Compute the distance between two points."], [8, 6, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_distance::DerivedP0", "Compute the distance between two points."], [8, 6, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE", "ipc::point_point_distance::DerivedP1", "Compute the distance between two points."], [8, 3, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE-p-p0", "ipc::point_point_distance::p0", "[in] The first point."], [8, 3, 2, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE-p-p1", "ipc::point_point_distance::p1", "[in] The second point."], [8, 2, 1, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient", "Compute the gradient of the distance between two points."], [8, 6, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient::DerivedGrad", "Compute the gradient of the distance between two points."], [8, 6, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient::DerivedP0", "Compute the gradient of the distance between two points."], [8, 6, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE", "ipc::point_point_distance_gradient::DerivedP1", "Compute the gradient of the distance between two points."], [8, 3, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-grad", "ipc::point_point_distance_gradient::grad", "[out] The computed gradient."], [8, 3, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p0", "ipc::point_point_distance_gradient::p0", "[in] The first point."], [8, 3, 2, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE-p-p1", "ipc::point_point_distance_gradient::p1", "[in] The second point."], [8, 2, 1, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian", "Compute the hessian of the distance between two points."], [8, 6, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian::DerivedHess", "Compute the hessian of the distance between two points."], [8, 6, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian::DerivedP0", "Compute the hessian of the distance between two points."], [8, 6, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE", "ipc::point_point_distance_hessian::DerivedP1", "Compute the hessian of the distance between two points."], [8, 3, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-hess", "ipc::point_point_distance_hessian::hess", "[out] The computed hessian."], [8, 3, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p0", "ipc::point_point_distance_hessian::p0", "[in] The first point."], [8, 3, 2, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE-p-p1", "ipc::point_point_distance_hessian::p1", "[in] The second point."], [8, 2, 1, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type", "Determine the closest pair between a point and triangle."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedP", "Determine the closest pair between a point and triangle."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedT0", "Determine the closest pair between a point and triangle."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedT1", "Determine the closest pair between a point and triangle."], [8, 6, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE", "ipc::point_triangle_distance_type::DerivedT2", "Determine the closest pair between a point and triangle."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-p", "ipc::point_triangle_distance_type::p", "The point."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t0", "ipc::point_triangle_distance_type::t0", "The first vertex of the triangle."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t1", "ipc::point_triangle_distance_type::t1", "The second vertex of the triangle."], [8, 3, 2, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE-p-t2", "ipc::point_triangle_distance_type::t2", "The third vertex of the triangle."]], "ipctk": [[16, 7, 1, 0, "BroadPhaseMethod", "Enumeration of implemented broad phase methods."], [16, 7, 1, 0, "Candidates", "Overloaded function."], [17, 7, 1, 0, "CollisionConstraint", "Bases: CollisionStencil"], [18, 7, 1, 0, "CollisionMesh", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [16, 7, 1, 0, "ContinuousCollisionCandidate", "Perform narrow-phase CCD on the candidate."], [16, 7, 1, 0, "EdgeEdgeCandidate", "Perform narrow-phase CCD on the candidate."], [17, 7, 1, 0, "EdgeEdgeConstraint", "Bases: EdgeEdgeCandidate, CollisionConstraint"], [19, 7, 1, 0, "EdgeEdgeDistanceType", "Members:"], [16, 7, 1, 0, "EdgeFaceCandidate", "ID of the edge"], [16, 7, 1, 0, "EdgeVertexCandidate", "Perform narrow-phase CCD on the candidate."], [17, 7, 1, 0, "EdgeVertexConstraint", "Bases: EdgeVertexCandidate, CollisionConstraint"], [16, 7, 1, 0, "FaceVertexCandidate", "ID of the face"], [17, 7, 1, 0, "FaceVertexConstraint", "Bases: FaceVertexCandidate, CollisionConstraint"], [22, 7, 1, 0, "LoggerLevel", "Members:"], [17, 7, 1, 0, "PlaneVertexConstraint", "Bases: CollisionConstraint"], [19, 7, 1, 0, "PointEdgeDistanceType", "Members:"], [19, 7, 1, 0, "PointTriangleDistanceType", "Members:"], [16, 7, 1, 0, "VertexVertexCandidate", "ID of the first vertex"], [17, 7, 1, 0, "VertexVertexConstraint", "Bases: VertexVertexCandidate, CollisionConstraint"], [15, 11, 1, 0, "barrier", "Function that grows to infinity as d approaches 0 from the right."], [15, 11, 1, 0, "barrier_gradient", "Derivative of the barrier function."], [15, 11, 1, 0, "barrier_hessian", "Second derivative of the barrier function."], [21, 11, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free."], [19, 11, 1, 0, "edge_edge_cross_squarednorm", "Compute the squared norm of the edge-edge cross product."], [19, 11, 1, 0, "edge_edge_cross_squarednorm_gradient", "Compute the gradient of the squared norm of the edge cross product."], [19, 11, 1, 0, "edge_edge_cross_squarednorm_hessian", "Compute the hessian of the squared norm of the edge cross product."], [19, 11, 1, 0, "edge_edge_distance", "Compute the distance between a two lines segments in 3D."], [19, 11, 1, 0, "edge_edge_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [19, 11, 1, 0, "edge_edge_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [19, 11, 1, 0, "edge_edge_distance_type", "Determine the closest pair between two edges."], [19, 11, 1, 0, "edge_edge_mollifier", "Overloaded function."], [19, 11, 1, 0, "edge_edge_mollifier_gradient", "Overloaded function."], [19, 11, 1, 0, "edge_edge_mollifier_hessian", "Overloaded function."], [19, 11, 1, 0, "edge_edge_mollifier_threshold", "Compute the threshold of the mollifier edge-edge distance."], [22, 11, 1, 0, "get_num_threads", "get maximum number of threads to use"], [22, 11, 1, 0, "has_intersections", "Determine if the mesh has self intersections."], [21, 11, 1, 0, "is_step_collision_free", "Determine if the step is collision free."], [19, 11, 1, 0, "line_line_distance", "Compute the distance between a two infinite lines in 3D."], [19, 11, 1, 0, "line_line_distance_gradient", "Compute the gradient of the distance between a two lines in 3D."], [19, 11, 1, 0, "line_line_distance_hessian", "Compute the hessian of the distance between a two lines in 3D."], [19, 11, 1, 0, "point_edge_distance", "Compute the distance between a point and edge in 2D or 3D."], [19, 11, 1, 0, "point_edge_distance_gradient", "Compute the gradient of the distance between a point and edge."], [19, 11, 1, 0, "point_edge_distance_hessian", "Compute the hessian of the distance between a point and edge."], [19, 11, 1, 0, "point_edge_distance_type", "Determine the closest pair between a point and edge."], [19, 11, 1, 0, "point_line_distance", "Compute the distance between a point and line in 2D or 3D."], [19, 11, 1, 0, "point_line_distance_gradient", "Compute the gradient of the distance between a point and line."], [19, 11, 1, 0, "point_line_distance_hessian", "Compute the hessian of the distance between a point and line."], [19, 11, 1, 0, "point_point_distance", "Compute the distance between two points."], [19, 11, 1, 0, "point_point_distance_gradient", "Compute the gradient of the distance between two points."], [19, 11, 1, 0, "point_point_distance_hessian", "Compute the hessian of the distance between a point and point."], [19, 11, 1, 0, "point_triangle_distance", "Compute the distance between a two lines segments in 3D."], [19, 11, 1, 0, "point_triangle_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [19, 11, 1, 0, "point_triangle_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [19, 11, 1, 0, "point_triangle_distance_type", "Determine the closest pair between a point and triangle."], [22, 11, 1, 0, "set_logger_level", "Set log level"], [22, 11, 1, 0, "set_num_threads", "set maximum number of threads to use"]], "ipctk.Candidates": [[16, 8, 1, 0, "build", "Overloaded function."], [16, 8, 1, 0, "clear", ""], [16, 8, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free using the set of collision candidates."], [16, 8, 1, 0, "empty", ""], [16, 8, 1, 0, "is_step_collision_free", "Determine if the step is collision free from the set of candidates."], [16, 8, 1, 0, "save_obj", ""]], "ipctk.CollisionConstraint": [[17, 8, 1, 0, "compute_potential", ""], [17, 8, 1, 0, "compute_potential_gradient", ""], [17, 8, 1, 0, "compute_potential_hessian", ""]], "ipctk.CollisionMesh": [[18, 8, 1, 0, "are_adjacencies_initialized", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [18, 8, 1, 0, "are_area_jacobians_initialized", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."], [18, 8, 1, 0, "build_from_full_mesh", "Helper function that automatically builds include_vertex using construct_is_on_surface."], [18, 10, 1, 0, "can_collide", "A function that takes two vertex IDs and returns true if the vertices (and faces or edges containing the vertices) can collide. By default all primitives can collide with all other primitives."], [18, 8, 1, 0, "construct_faces_to_edges", "Construct a matrix that maps from the faces' edges to rows in the edges matrix."], [18, 8, 1, 0, "construct_is_on_surface", "Construct a vector of bools indicating whether each vertex is on the surface."], [18, 8, 1, 0, "dim", "Get the dimension of the mesh."], [18, 8, 1, 0, "displace_vertices", "Compute the vertex positions from vertex displacements on the full mesh."], [18, 8, 1, 0, "edge_area", "Get the barycentric area of an edge."], [18, 8, 1, 0, "edge_area_gradient", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points. :param ei: Edge ID."], [18, 8, 1, 0, "edge_areas", "Get the barycentric area of the edges."], [18, 10, 1, 0, "edge_vertex_adjacencies", "Get the edge-vertex adjacency matrix."], [18, 10, 1, 0, "edges", "Get the edges of the collision mesh."], [18, 10, 1, 0, "faces", "Get the faces of the collision mesh."], [18, 10, 1, 0, "faces_to_edges", "Get the mapping from faces to edges of the collision mesh."], [18, 10, 1, 0, "full_ndof", "Get the number of degrees of freedom in the full mesh."], [18, 10, 1, 0, "full_num_vertices", "Get the number of vertices in the full mesh."], [18, 8, 1, 0, "init_adjacencies", "Initialize vertex-vertex and edge-vertex adjacencies."], [18, 8, 1, 0, "init_area_jacobians", "Initialize vertex and edge areas."], [18, 8, 1, 0, "is_vertex_on_boundary", "Is a vertex on the boundary of the collision mesh?"], [18, 8, 1, 0, "map_displacements", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."], [18, 10, 1, 0, "ndof", "Get the number of degrees of freedom in the collision mesh."], [18, 10, 1, 0, "num_edges", "Get the number of edges in the collision mesh."], [18, 10, 1, 0, "num_faces", "Get the number of faces in the collision mesh."], [18, 10, 1, 0, "num_vertices", "Get the number of vertices in the collision mesh."], [18, 10, 1, 0, "rest_positions", "Get the vertices of the collision mesh at rest."], [18, 8, 1, 0, "to_full_dof", "Overloaded function."], [18, 8, 1, 0, "to_full_vertex_id", "Map a vertex ID to the corresponding vertex ID in the full mesh."], [18, 8, 1, 0, "vertex_area", "Get the barycentric area of a vertex."], [18, 8, 1, 0, "vertex_area_gradient", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points. :param vi: Vertex ID."], [18, 10, 1, 0, "vertex_areas", "Get the barycentric area of the vertices."], [18, 10, 1, 0, "vertex_vertex_adjacencies", "Get the vertex-vertex adjacency matrix."], [18, 8, 1, 0, "vertices", "Compute the vertex positions from the positions of the full mesh."]], "ipctk.CollisionMesh.build_from_full_mesh": [[18, 9, 2, 0, "edges", "The edge matrix of mesh."], [18, 9, 2, 0, "faces", "The face matrix of mesh."], [18, 9, 2, 0, "full_rest_positions", "The full vertices at rest."]], "ipctk.CollisionMesh.construct_faces_to_edges": [[18, 9, 2, 0, "edges", "The edge matrix of mesh."], [18, 9, 2, 0, "faces", "The face matrix of mesh."]], "ipctk.CollisionMesh.construct_is_on_surface": [[18, 9, 2, 0, "edges", "The surface edges of the mesh."], [18, 9, 2, 0, "num_vertices", "The number of vertices in the mesh."]], "ipctk.CollisionMesh.displace_vertices": [[18, 9, 2, 0, "full_displacements", "The vertex displacements on the full mesh."]], "ipctk.CollisionMesh.edge_area": [[18, 9, 2, 0, "ei", "Edge ID."]], "ipctk.CollisionMesh.is_vertex_on_boundary": [[18, 9, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.map_displacements": [[18, 9, 2, 0, "full_displacements", "The vertex displacements on the full mesh."]], "ipctk.CollisionMesh.to_full_vertex_id": [[18, 9, 2, 0, "id", "Vertex ID in the collision mesh."]], "ipctk.CollisionMesh.vertex_area": [[18, 9, 2, 0, "vi", "Vertex ID."]], "ipctk.ContinuousCollisionCandidate": [[16, 8, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [16, 8, 1, 0, "print_ccd_query", ""]], "ipctk.ContinuousCollisionCandidate.ccd": [[16, 9, 2, 0, "conservative_rescaling", "Conservative rescaling value used to avoid taking steps exactly to impact."], [16, 9, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [16, 9, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [16, 9, 2, 0, "max_iterations", "Maximum iterations used by Tight-Inclusion CCD."], [16, 9, 2, 0, "min_distance", "Minimum separation distance between primitives."], [16, 9, 2, 0, "tmax", "Maximum time (normalized) to look for collisions. Should be in [0, 1]."], [16, 9, 2, 0, "tolerance", "CCD tolerance used by Tight-Inclusion CCD."], [16, 9, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [16, 9, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.EdgeEdgeCandidate": [[16, 8, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [16, 10, 1, 0, "edge0_id", "ID of the first edge"], [16, 10, 1, 0, "edge1_id", "ID of the second edge"], [16, 8, 1, 0, "num_vertices", ""], [16, 8, 1, 0, "print_ccd_query", ""], [16, 8, 1, 0, "vertex_ids", ""]], "ipctk.EdgeEdgeCandidate.ccd": [[16, 9, 2, 0, "conservative_rescaling", "Conservative rescaling value used to avoid taking steps exactly to impact."], [16, 9, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [16, 9, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [16, 9, 2, 0, "max_iterations", "Maximum iterations used by Tight-Inclusion CCD."], [16, 9, 2, 0, "tmax", "Maximum time (normalized) to look for collisions. Should be in [0, 1]."], [16, 9, 2, 0, "tolerance", "CCD tolerance used by Tight-Inclusion CCD."], [16, 9, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [16, 9, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.EdgeEdgeConstraint": [[17, 8, 1, 0, "compute_potential", ""], [17, 8, 1, 0, "compute_potential_gradient", ""], [17, 8, 1, 0, "compute_potential_hessian", ""]], "ipctk.EdgeFaceCandidate": [[16, 10, 1, 0, "edge_id", "ID of the edge"], [16, 10, 1, 0, "face_id", "ID of the face"]], "ipctk.EdgeVertexCandidate": [[16, 8, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [16, 10, 1, 0, "edge_id", "ID of the edge"], [16, 8, 1, 0, "num_vertices", ""], [16, 8, 1, 0, "print_ccd_query", ""], [16, 10, 1, 0, "vertex_id", "ID of the vertex"], [16, 8, 1, 0, "vertex_ids", ""]], "ipctk.EdgeVertexCandidate.ccd": [[16, 9, 2, 0, "conservative_rescaling", "Conservative rescaling value used to avoid taking steps exactly to impact."], [16, 9, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [16, 9, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [16, 9, 2, 0, "max_iterations", "Maximum iterations used by Tight-Inclusion CCD."], [16, 9, 2, 0, "tmax", "Maximum time (normalized) to look for collisions. Should be in [0, 1]."], [16, 9, 2, 0, "tolerance", "CCD tolerance used by Tight-Inclusion CCD."], [16, 9, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [16, 9, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.FaceVertexCandidate": [[16, 8, 1, 0, "ccd", ""], [16, 10, 1, 0, "face_id", "ID of the face"], [16, 8, 1, 0, "num_vertices", ""], [16, 8, 1, 0, "print_ccd_query", ""], [16, 10, 1, 0, "vertex_id", "ID of the vertex"], [16, 8, 1, 0, "vertex_ids", ""]], "ipctk.PlaneVertexConstraint": [[17, 8, 1, 0, "num_vertices", ""], [17, 8, 1, 0, "vertex_ids", ""]], "ipctk.VertexVertexCandidate": [[16, 8, 1, 0, "num_vertices", ""], [16, 10, 1, 0, "vertex0_id", "ID of the first vertex"], [16, 10, 1, 0, "vertex1_id", "ID of the second vertex"], [16, 8, 1, 0, "vertex_ids", "Get the indices of the vertices"]], "ipctk.VertexVertexCandidate.vertex_ids": [[16, 9, 2, 0, "edges", "edge matrix of mesh"], [16, 9, 2, 0, "faces", "face matrix of mesh"]], "ipctk.barrier": [[15, 9, 2, 0, "d", "distance"], [15, 9, 2, 0, "dhat", "activation distance of the barrier"]], "ipctk.barrier_gradient": [[15, 9, 2, 0, "d", "distance"], [15, 9, 2, 0, "dhat", "activation distance of the barrier"]], "ipctk.barrier_hessian": [[15, 9, 2, 0, "d", "distance"], [15, 9, 2, 0, "dhat", "activation distance of the barrier"]], "ipctk.edge_edge_cross_squarednorm": [[19, 9, 2, 0, "ea0", "first vertex of the first edge"], [19, 9, 2, 0, "ea1", "second vertex of the first edge"], [19, 9, 2, 0, "eb0", "first vertex of the second edge"], [19, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_cross_squarednorm_gradient": [[19, 9, 2, 0, "ea0", "first vertex of the first edge"], [19, 9, 2, 0, "ea1", "second vertex of the first edge"], [19, 9, 2, 0, "eb0", "first vertex of the second edge"], [19, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_cross_squarednorm_hessian": [[19, 9, 2, 0, "ea0", "first vertex of the first edge"], [19, 9, 2, 0, "ea1", "second vertex of the first edge"], [19, 9, 2, 0, "eb0", "first vertex of the second edge"], [19, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_distance_type": [[19, 9, 2, 0, "ea0", "first vertex of the first edge"], [19, 9, 2, 0, "ea1", "second vertex of the first edge"], [19, 9, 2, 0, "eb0", "first vertex of the second edge"], [19, 9, 2, 0, "eb1", "second vertex of the second edge"]], "ipctk.edge_edge_mollifier_threshold": [[19, 9, 2, 0, "ea0_rest", "rest position of the first vertex of the first edge"], [19, 9, 2, 0, "ea1_rest", "rest position of the second vertex of the first edge"], [19, 9, 2, 0, "eb0_rest", "rest position of the first vertex of the second edge"], [19, 9, 2, 0, "eb1_rest", "rest position of the second vertex of the second edge"]], "ipctk.line_line_distance": [[19, 9, 2, 0, "ea0", "first vertex of the edge defining the first line"], [19, 9, 2, 0, "ea1", "second vertex of the edge defining the first line"], [19, 9, 2, 0, "eb0", "first vertex of the edge defining the second line"], [19, 9, 2, 0, "eb1", "second vertex of the edge defining the second line"]], "ipctk.line_line_distance_gradient": [[19, 9, 2, 0, "ea0", "first vertex of the edge defining the first line"], [19, 9, 2, 0, "ea1", "second vertex of the edge defining the first line"], [19, 9, 2, 0, "eb0", "first vertex of the edge defining the second line"], [19, 9, 2, 0, "eb1", "second vertex of the edge defining the second line"]], "ipctk.line_line_distance_hessian": [[19, 9, 2, 0, "ea0", "first vertex of the edge defining the first line"], [19, 9, 2, 0, "ea1", "second vertex of the edge defining the first line"], [19, 9, 2, 0, "eb0", "first vertex of the edge defining the second line"], [19, 9, 2, 0, "eb1", "second vertex of the edge defining the second line"]], "ipctk.point_edge_distance_type": [[19, 9, 2, 0, "e0", "first vertex of the edge"], [19, 9, 2, 0, "e1", "second vertex of the edge"], [19, 9, 2, 0, "p", "point"]], "ipctk.point_line_distance": [[19, 9, 2, 0, "e0", "first vertex of the edge defining the line"], [19, 9, 2, 0, "e1", "second vertex of the edge defining the line"], [19, 9, 2, 0, "p", "point"]], "ipctk.point_line_distance_gradient": [[19, 9, 2, 0, "e0", "first vertex of the edge defining the line."], [19, 9, 2, 0, "e1", "second vertex of the edge defining the line."], [19, 9, 2, 0, "p", "point"]], "ipctk.point_line_distance_hessian": [[19, 9, 2, 0, "e0", "first vertex of the edge defining the line"], [19, 9, 2, 0, "e1", "second vertex of the edge defining the line"], [19, 9, 2, 0, "p", "point"]], "ipctk.point_point_distance": [[19, 9, 2, 0, "p0", "first point"], [19, 9, 2, 0, "p1", "second point"]], "ipctk.point_point_distance_gradient": [[19, 9, 2, 0, "p0", "first point"], [19, 9, 2, 0, "p1", "second point"]], "ipctk.point_point_distance_hessian": [[19, 9, 2, 0, "p0", "first point"], [19, 9, 2, 0, "p1", "second point"]], "ipctk.point_triangle_distance_type": [[19, 9, 2, 0, "p", "point"], [19, 9, 2, 0, "t0", "first vertex of the triangle"], [19, 9, 2, 0, "t1", "second vertex of the triangle"], [19, 9, 2, 0, "t2", "third vertex of the triangle"]]}, "objtypes": {"0": "cpp:enum", "1": "cpp:enumerator", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:class", "5": "cpp:member", "6": "cpp:templateTypeParam", "7": "py:class", "8": "py:method", "9": "py:parameter", "10": "py:property", "11": "py:function"}, "objnames": {"0": ["cpp", "enum", "C++ enum"], "1": ["cpp", "enumerator", "C++ enumerator"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "class", "C++ class"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "templateTypeParam", "C++ type template parameter"], "7": ["py", "class", "Python class"], "8": ["py", "method", "Python method"], "9": ["py", "parameter", "Python parameter"], "10": ["py", "property", "Python property"], "11": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "2023": 0, "01": 0, "17": 0, "pr": 0, "22": 0, "chang": 0, "2022": 0, "02": 0, "21": 0, "7": 0, "ad": 0, "remov": 0, "2021": 0, "10": 0, "05": 0, "9e2cc2a": 0, "09": 0, "08": 0, "acf2a80": 0, "07": 0, "26": 0, "1479aae": 0, "e24c76d": 0, "fix": [0, 2], "a20f7a2": 0, "15": 0, "7301b42": 0, "86ae4e5": 0, "4d16954": 0, "b3808e1": 0, "06": 0, "18": 0, "aa59aeb": 0, "245b13b": 0, "11": 0, "5c34dcd": 0, "24056cc": 0, "81d65f3": 0, "04": 0, "59ec167": 0, "03": 0, "664d65f": 0, "9b4ebfc": 0, "29": 0, "293d0ad": 0, "c8a6d5": 0, "9c7493": 0, "b510253": 0, "a395175": 0, "12": 0, "deee6d0": 0, "2020": 0, "20": 0, "93143ad": 0, "4553509": 0, "51f4903": 0, "9be6c0f": 0, "cb8b53f": 0, "4a5f84f": 0, "1d51a61": 0, "b737fb0": 0, "6ee60a": 0, "cc3947d": 0, "5582582": 0, "b48ba0e": 0, "9a4576b": 0, "19": 0, "31a37e0": 0, "acb7664": 0, "7dd2ab7": 0, "contributor": 1, "coven": 1, "code": [1, 23], "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": 1, "1": 1, "correct": 1, "2": 1, "warn": [1, 19], "3": 1, "temporari": 1, "ban": 1, "4": 1, "perman": 1, "attribut": 1, "contribut": [2, 12, 14], "type": [2, 8, 19], "report": 2, "bug": 2, "implement": 2, "featur": [2, 12], "write": 2, "document": [2, 23], "submit": 2, "feedback": 2, "c": 3, "build": [3, 12, 14], "depend": [3, 12], "option": [3, 12], "usag": [3, 12], "unit": [3, 12], "test": [3, 12], "barrier": [4, 15], "ccd": [5, 16], "broad": [5, 16], "phase": [5, 16], "candid": [5, 16], "narrow": [5, 16], "collis": [6, 7, 17, 18], "constraint": [6, 17], "mesh": [7, 18], "distanc": [8, 19], "edg": [8, 19], "mollifi": [8, 19], "line": [8, 19], "point": [8, 19], "plane": [8, 19], "triangl": [8, 19], "friction": [9, 20], "main": [10, 21], "function": [10, 21], "util": [11, 22], "ipc": 12, "toolkit": 12, "descript": 12, "limit": 12, "python": [12, 14], "bind": 12, "citat": [12, 14], "licens": [12, 13, 14], "instal": 14, "exampl": 14, "note": [16, 19, 21], "logger": 22, "multi": 22, "thread": 22, "style": 23, "guid": 23, "format": 23, "name": 23, "convent": 23, "gener": 23, "specif": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Changelog": [[0, "changelog"]], "2023-01-17 (pr-22)": [[0, "pr-22"]], "Changed": [[0, "changed"], [0, "id4"], [0, "id5"], [0, "id9"], [0, "id12"], [0, "id14"], [0, "id15"], [0, "id16"], [0, "id17"], [0, "id18"], [0, "id20"], [0, "id23"], [0, "id25"], [0, "id28"], [0, "id33"], [0, "id34"], [0, "id45"], [0, "id48"], [0, "id49"], [0, "id52"], [0, "id54"]], "2022-02-21 (pr-7)": [[0, "pr-7"]], "Added": [[0, "added"], [0, "id1"], [0, "id3"], [0, "id6"], [0, "id13"], [0, "id21"], [0, "id22"], [0, "id24"], [0, "id27"], [0, "id29"], [0, "id30"], [0, "id31"], [0, "id41"], [0, "id42"], [0, "id43"], [0, "id44"], [0, "id47"], [0, "id51"], [0, "id53"]], "Removed": [[0, "removed"], [0, "id11"]], "2021-10-05 (9e2cc2a)": [[0, "e2cc2a"]], "2021-09-05 (9e2cc2a)": [[0, "id2"]], "2021-08-21 (acf2a80)": [[0, "acf2a80"]], "2021-07-26 (1479aae)": [[0, "aae"]], "2021-07-22 (e24c76d)": [[0, "e24c76d"]], "Fixed": [[0, "fixed"], [0, "id7"], [0, "id8"], [0, "id10"], [0, "id19"], [0, "id26"], [0, "id36"], [0, "id37"], [0, "id38"], [0, "id39"], [0, "id40"], [0, "id50"]], "2021-07-17 (a20f7a2)": [[0, "a20f7a2"]], "2021-07-15 (7301b42)": [[0, "b42"]], "2021-07-08 (86ae4e5)": [[0, "ae4e5"]], "2021-07-05 (4d16954)": [[0, "d16954"]], "2021-07-05 (b3808e1)": [[0, "b3808e1"]], "2021-06-18 (aa59aeb)": [[0, "aa59aeb"]], "2021-05-18 (245b13b)": [[0, "b13b"]], "2021-05-11 (5c34dcd)": [[0, "c34dcd"]], "2021-05-06 (24056cc)": [[0, "cc"]], "2021-05-06 (81d65f3)": [[0, "d65f3"]], "2021-05-04 (59ec167)": [[0, "ec167"]], "2021-05-03 (664d65f)": [[0, "d65f"]], "2021-05-03 (9b4ebfc)": [[0, "b4ebfc"]], "2021-04-29 (293d0ad)": [[0, "d0ad"]], "2021-04-21 (c8a6d5)": [[0, "c8a6d5"]], "2021-02-11 (9c7493)": [[0, "c7493"]], "2021-02-01 (b510253)": [[0, "b510253"]], "2021-02-01 (a395175)": [[0, "a395175"]], "2021-01-12 (deee6d0)": [[0, "deee6d0"]], "2021-01-09 (deee6d0)": [[0, "id32"]], "2020-11-20 (93143ad)": [[0, "ad"]], "2020-11-06 (4553509)": [[0, "id35"]], "2020-10-22 (51f4903)": [[0, "f4903"]], "2020-10-22 (9be6c0f)": [[0, "be6c0f"]], "2020-10-10 (cb8b53f)": [[0, "cb8b53f"]], "2020-10-10 (4a5f84f)": [[0, "a5f84f"]], "2020-10-10 (1d51a61)": [[0, "d51a61"]], "2020-10-09 (b737fb0)": [[0, "b737fb0"]], "2020-10-08 (6ee60ae)": [[0, "ee60ae"]], "2020-10-08 (cc3947d)": [[0, "cc3947d"]], "2020-10-07 (5582582)": [[0, "id46"]], "2020-10-06 (b48ba0e)": [[0, "b48ba0e"]], "2020-10-05 (9a4576b)": [[0, "a4576b"]], "2020-09-19 (31a37e0)": [[0, "a37e0"]], "2020-09-19 (acb7664)": [[0, "acb7664"]], "2020-09-04 (7dd2ab7)": [[0, "dd2ab7"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "Contributing": [[2, "contributing"], [12, "contributing"], [14, "contributing"]], "Types of Contributions": [[2, "types-of-contributions"]], "Report Bugs": [[2, "report-bugs"]], "Fix Bugs": [[2, "fix-bugs"]], "Implement Features": [[2, "implement-features"]], "Write Documentation": [[2, "write-documentation"]], "Submit Feedback": [[2, "submit-feedback"]], "C++": [[3, "c"]], "Build": [[3, "build"], [12, "build"]], "Dependencies": [[3, "dependencies"], [3, "id1"], [12, "dependencies"], [12, "id1"]], "Optional": [[3, "optional"], [12, "optional"]], "Usage": [[3, "usage"], [12, "usage"]], "Unit Tests": [[3, "unit-tests"], [12, "unit-tests"]], "Barrier": [[4, "barrier"], [15, "barrier"]], "CCD": [[5, "ccd"], [16, "ccd"]], "Broad Phase": [[5, "broad-phase"], [16, "broad-phase"]], "Candidates": [[5, "candidates"], [16, "candidates"]], "Narrow Phase": [[5, "narrow-phase"], [16, "narrow-phase"]], "Collision Constraints": [[6, "collision-constraints"], [17, "collision-constraints"]], "Collision Mesh": [[7, "collision-mesh"], [18, "collision-mesh"]], "Distance": [[8, "distance"], [19, "distance"]], "Distance Type": [[8, "distance-type"], [19, "distance-type"]], "Edge-Edge Mollifier": [[8, "edge-edge-mollifier"], [19, "edge-edge-mollifier"]], "Edge-Edge": [[8, "edge-edge"], [19, "edge-edge"]], "Line-Line": [[8, "line-line"], [19, "line-line"]], "Point-Edge": [[8, "point-edge"], [19, "point-edge"]], "Point-Line": [[8, "point-line"], [19, "point-line"]], "Point-Plane": [[8, "point-plane"], [19, "point-plane"]], "Point-Point": [[8, "point-point"], [19, "point-point"]], "Point-Triangle": [[8, "point-triangle"], [19, "point-triangle"]], "Friction": [[9, "friction"], [20, "friction"]], "Main Functions": [[10, "main-functions"], [21, "main-functions"]], "Utils": [[11, "utils"], [22, "utils"]], "IPC Toolkit": [[12, "ipc-toolkit"]], "Description": [[12, "description"]], "Features": [[12, "features"]], "Limitations": [[12, "limitations"]], "Python Bindings": [[12, "python-bindings"]], "Citation": [[12, "citation"], [14, "citation"]], "License": [[12, "license"], [13, "license"], [14, "license"]], "Python": [[14, "python"]], "Build and Install": [[14, "build-and-install"]], "Examples": [[14, "examples"]], "Note": [[16, null], [16, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [19, null], [21, null], [21, null]], "Warning": [[19, null], [19, null], [19, null]], "Logger": [[22, "logger"]], "Multi-Threading": [[22, "multi-threading"]], "Style Guide": [[23, "style-guide"]], "Code Formatting": [[23, "code-formatting"]], "Naming conventions": [[23, "naming-conventions"]], "General": [[23, "general"]], "Specific": [[23, "specific"]], "Documentation": [[23, "documentation"]]}, "indexentries": {"ipc::barrier (c++ function)": [[4, "_CPPv4I0EN3ipc7barrierE1TRK1TKd"]], "ipc::barrier_gradient (c++ function)": [[4, "_CPPv4N3ipc16barrier_gradientEKdKd"]], "ipc::barrier_hessian (c++ function)": [[4, "_CPPv4N3ipc15barrier_hessianEKdKd"]], "ipc::broadphasemethod (c++ enum)": [[5, "_CPPv4N3ipc16BroadPhaseMethodE"]], "ipc::broadphasemethod::brute_force (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11BRUTE_FORCEE"]], "ipc::broadphasemethod::hash_grid (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod9HASH_GRIDE"]], "ipc::broadphasemethod::num_methods (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11NUM_METHODSE"]], "ipc::broadphasemethod::spatial_hash (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod12SPATIAL_HASHE"]], "ipc::broadphasemethod::sweep_and_tiniest_queue (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod23SWEEP_AND_TINIEST_QUEUEE"]], "ipc::broadphasemethod::sweep_and_tiniest_queue_gpu (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod27SWEEP_AND_TINIEST_QUEUE_GPUE"]], "ipc::default_ccd_conservative_rescaling (c++ member)": [[5, "_CPPv4N3ipc34DEFAULT_CCD_CONSERVATIVE_RESCALINGE"]], "ipc::default_ccd_max_iterations (c++ member)": [[5, "_CPPv4N3ipc26DEFAULT_CCD_MAX_ITERATIONSE"]], "ipc::default_ccd_tolerance (c++ member)": [[5, "_CPPv4N3ipc21DEFAULT_CCD_TOLERANCEE"]], "ipc::collisionmesh (c++ class)": [[7, "_CPPv4N3ipc13CollisionMeshE"]], "ipc::collisionmesh::collisionmesh (c++ function)": [[7, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE"], [7, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE"], [7, "_CPPv4N3ipc13CollisionMesh13CollisionMeshEv"]], "ipc::collisionmesh::are_adjacencies_initialized (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh27are_adjacencies_initializedEv"]], "ipc::collisionmesh::are_area_jacobians_initialized (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh30are_area_jacobians_initializedEv"]], "ipc::collisionmesh::build_from_full_mesh (c++ function)": [[7, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::can_collide (c++ member)": [[7, "_CPPv4N3ipc13CollisionMesh11can_collideE"]], "ipc::collisionmesh::construct_faces_to_edges (c++ function)": [[7, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::construct_is_on_surface (c++ function)": [[7, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::dim (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh3dimEv"]], "ipc::collisionmesh::displace_vertices (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::edge_area (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t"]], "ipc::collisionmesh::edge_area_gradient (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t"]], "ipc::collisionmesh::edge_areas (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh10edge_areasEv"]], "ipc::collisionmesh::edge_vertex_adjacencies (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh23edge_vertex_adjacenciesEv"]], "ipc::collisionmesh::edges (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh5edgesEv"]], "ipc::collisionmesh::faces (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh5facesEv"]], "ipc::collisionmesh::faces_to_edges (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh14faces_to_edgesEv"]], "ipc::collisionmesh::full_ndof (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh9full_ndofEv"]], "ipc::collisionmesh::full_num_vertices (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh17full_num_verticesEv"]], "ipc::collisionmesh::init_adjacencies (c++ function)": [[7, "_CPPv4N3ipc13CollisionMesh16init_adjacenciesEv"]], "ipc::collisionmesh::init_area_jacobians (c++ function)": [[7, "_CPPv4N3ipc13CollisionMesh19init_area_jacobiansEv"]], "ipc::collisionmesh::is_vertex_on_boundary (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi"]], "ipc::collisionmesh::map_displacements (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::ndof (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh4ndofEv"]], "ipc::collisionmesh::num_edges (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh9num_edgesEv"]], "ipc::collisionmesh::num_faces (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh9num_facesEv"]], "ipc::collisionmesh::num_vertices (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh12num_verticesEv"]], "ipc::collisionmesh::rest_positions (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh14rest_positionsEv"]], "ipc::collisionmesh::to_full_dof (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE"], [7, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE"]], "ipc::collisionmesh::to_full_vertex_id (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t"]], "ipc::collisionmesh::vertex_area (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t"]], "ipc::collisionmesh::vertex_area_gradient (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t"]], "ipc::collisionmesh::vertex_areas (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh12vertex_areasEv"]], "ipc::collisionmesh::vertex_vertex_adjacencies (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh25vertex_vertex_adjacenciesEv"]], "ipc::collisionmesh::vertices (c++ function)": [[7, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::~collisionmesh (c++ function)": [[7, "_CPPv4N3ipc13CollisionMeshD0Ev"]], "ipc::edgeedgedistancetype (c++ enum)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceTypeE"]], "ipc::edgeedgedistancetype::auto (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType4AUTOE"]], "ipc::edgeedgedistancetype::ea0_eb (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA0_EBE"]], "ipc::edgeedgedistancetype::ea0_eb0 (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB0E"]], "ipc::edgeedgedistancetype::ea0_eb1 (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB1E"]], "ipc::edgeedgedistancetype::ea1_eb (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA1_EBE"]], "ipc::edgeedgedistancetype::ea1_eb0 (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB0E"]], "ipc::edgeedgedistancetype::ea1_eb1 (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB1E"]], "ipc::edgeedgedistancetype::ea_eb (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType5EA_EBE"]], "ipc::edgeedgedistancetype::ea_eb0 (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB0E"]], "ipc::edgeedgedistancetype::ea_eb1 (c++ enumerator)": [[8, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB1E"]], "ipc::pointedgedistancetype (c++ enum)": [[8, "_CPPv4N3ipc21PointEdgeDistanceTypeE"]], "ipc::pointedgedistancetype::auto (c++ enumerator)": [[8, "_CPPv4N3ipc21PointEdgeDistanceType4AUTOE"]], "ipc::pointedgedistancetype::p_e (c++ enumerator)": [[8, "_CPPv4N3ipc21PointEdgeDistanceType3P_EE"]], "ipc::pointedgedistancetype::p_e0 (c++ enumerator)": [[8, "_CPPv4N3ipc21PointEdgeDistanceType4P_E0E"]], "ipc::pointedgedistancetype::p_e1 (c++ enumerator)": [[8, "_CPPv4N3ipc21PointEdgeDistanceType4P_E1E"]], "ipc::pointtriangledistancetype (c++ enum)": [[8, "_CPPv4N3ipc25PointTriangleDistanceTypeE"]], "ipc::pointtriangledistancetype::auto (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType4AUTOE"]], "ipc::pointtriangledistancetype::p_e0 (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType4P_E0E"]], "ipc::pointtriangledistancetype::p_e1 (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType4P_E1E"]], "ipc::pointtriangledistancetype::p_e2 (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType4P_E2E"]], "ipc::pointtriangledistancetype::p_t (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType3P_TE"]], "ipc::pointtriangledistancetype::p_t0 (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType4P_T0E"]], "ipc::pointtriangledistancetype::p_t1 (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType4P_T1E"]], "ipc::pointtriangledistancetype::p_t2 (c++ enumerator)": [[8, "_CPPv4N3ipc25PointTriangleDistanceType4P_T2E"]], "ipc::edge_edge_cross_squarednorm (c++ function)": [[8, "_CPPv4I0000EN3ipc27edge_edge_cross_squarednormEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::edge_edge_cross_squarednorm_gradient (c++ function)": [[8, "_CPPv4I00000EN3ipc36edge_edge_cross_squarednorm_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::edge_edge_cross_squarednorm_hessian (c++ function)": [[8, "_CPPv4I00000EN3ipc35edge_edge_cross_squarednorm_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::edge_edge_distance_type (c++ function)": [[8, "_CPPv4I0000EN3ipc23edge_edge_distance_typeE20EdgeEdgeDistanceTypeRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::edge_edge_mollifier (c++ function)": [[8, "_CPPv4I0000EN3ipc19edge_edge_mollifierEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKd"], [8, "_CPPv4I0EN3ipc19edge_edge_mollifierE1TRK1Td"]], "ipc::edge_edge_mollifier_gradient (c++ function)": [[8, "_CPPv4I00000EN3ipc28edge_edge_mollifier_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedGradEE"], [8, "_CPPv4I0EN3ipc28edge_edge_mollifier_gradientE1TRK1Td"]], "ipc::edge_edge_mollifier_hessian (c++ function)": [[8, "_CPPv4I00000EN3ipc27edge_edge_mollifier_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EEKdRN5Eigen15PlainObjectBaseI11DerivedHessEE"], [8, "_CPPv4I0EN3ipc27edge_edge_mollifier_hessianE1TRK1Td"]], "ipc::edge_edge_mollifier_threshold (c++ function)": [[8, "_CPPv4I0000EN3ipc29edge_edge_mollifier_thresholdEdRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::line_line_distance (c++ function)": [[8, "_CPPv4I0000EN3ipc18line_line_distanceEDaRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EE"]], "ipc::line_line_distance_gradient (c++ function)": [[8, "_CPPv4I00000EN3ipc27line_line_distance_gradientEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::line_line_distance_hessian (c++ function)": [[8, "_CPPv4I00000EN3ipc26line_line_distance_hessianEvRKN5Eigen10MatrixBaseI10DerivedEA0EERKN5Eigen10MatrixBaseI10DerivedEA1EERKN5Eigen10MatrixBaseI10DerivedEB0EERKN5Eigen10MatrixBaseI10DerivedEB1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_edge_distance_type (c++ function)": [[8, "_CPPv4I000EN3ipc24point_edge_distance_typeE21PointEdgeDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE"]], "ipc::point_line_distance (c++ function)": [[8, "_CPPv4I000EN3ipc19point_line_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EE"]], "ipc::point_line_distance_gradient (c++ function)": [[8, "_CPPv4I0000EN3ipc28point_line_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::point_line_distance_hessian (c++ function)": [[8, "_CPPv4I0000EN3ipc27point_line_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedE0EERKN5Eigen10MatrixBaseI9DerivedE1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_plane_distance (c++ function)": [[8, "_CPPv4I0000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE"], [8, "_CPPv4I000EN3ipc20point_plane_distanceEDaRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEE"]], "ipc::point_plane_distance_gradient (c++ function)": [[8, "_CPPv4I00000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedGradEE"], [8, "_CPPv4I0000EN3ipc29point_plane_distance_gradientEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::point_plane_distance_hessian (c++ function)": [[8, "_CPPv4I00000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EERN5Eigen15PlainObjectBaseI11DerivedHessEE"], [8, "_CPPv4I0000EN3ipc28point_plane_distance_hessianEvRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI13DerivedOriginEERKN5Eigen10MatrixBaseI13DerivedNormalEERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_point_distance (c++ function)": [[8, "_CPPv4I00EN3ipc20point_point_distanceEDaRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EE"]], "ipc::point_point_distance_gradient (c++ function)": [[8, "_CPPv4I000EN3ipc29point_point_distance_gradientEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedGradEE"]], "ipc::point_point_distance_hessian (c++ function)": [[8, "_CPPv4I000EN3ipc28point_point_distance_hessianEvRKN5Eigen10MatrixBaseI9DerivedP0EERKN5Eigen10MatrixBaseI9DerivedP1EERN5Eigen15PlainObjectBaseI11DerivedHessEE"]], "ipc::point_triangle_distance_type (c++ function)": [[8, "_CPPv4I0000EN3ipc28point_triangle_distance_typeE25PointTriangleDistanceTypeRKN5Eigen10MatrixBaseI8DerivedPEERKN5Eigen10MatrixBaseI9DerivedT0EERKN5Eigen10MatrixBaseI9DerivedT1EERKN5Eigen10MatrixBaseI9DerivedT2EE"]], "ipc::collisionconstraints::compute_minimum_distance (c++ function)": [[11, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE"]], "ipc::has_intersections (c++ function)": [[11, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod"]], "barrier() (in module ipctk)": [[15, "ipctk.barrier"]], "barrier_gradient() (in module ipctk)": [[15, "ipctk.barrier_gradient"]], "barrier_hessian() (in module ipctk)": [[15, "ipctk.barrier_hessian"]], "broadphasemethod (class in ipctk)": [[16, "ipctk.BroadPhaseMethod"]], "candidates (class in ipctk)": [[16, "ipctk.Candidates"]], "continuouscollisioncandidate (class in ipctk)": [[16, "ipctk.ContinuousCollisionCandidate"]], "edgeedgecandidate (class in ipctk)": [[16, "ipctk.EdgeEdgeCandidate"]], "edgefacecandidate (class in ipctk)": [[16, "ipctk.EdgeFaceCandidate"]], "edgevertexcandidate (class in ipctk)": [[16, "ipctk.EdgeVertexCandidate"]], "facevertexcandidate (class in ipctk)": [[16, "ipctk.FaceVertexCandidate"]], "vertexvertexcandidate (class in ipctk)": [[16, "ipctk.VertexVertexCandidate"]], "build() (ipctk.candidates method)": [[16, "ipctk.Candidates.build"]], "ccd() (ipctk.continuouscollisioncandidate method)": [[16, "ipctk.ContinuousCollisionCandidate.ccd"]], "ccd() (ipctk.edgeedgecandidate method)": [[16, "ipctk.EdgeEdgeCandidate.ccd"]], "ccd() (ipctk.edgevertexcandidate method)": [[16, "ipctk.EdgeVertexCandidate.ccd"]], "ccd() (ipctk.facevertexcandidate method)": [[16, "ipctk.FaceVertexCandidate.ccd"]], "clear() (ipctk.candidates method)": [[16, "ipctk.Candidates.clear"]], "compute_collision_free_stepsize() (ipctk.candidates method)": [[16, "ipctk.Candidates.compute_collision_free_stepsize"]], "edge0_id (ipctk.edgeedgecandidate property)": [[16, "ipctk.EdgeEdgeCandidate.edge0_id"]], "edge1_id (ipctk.edgeedgecandidate property)": [[16, "ipctk.EdgeEdgeCandidate.edge1_id"]], "edge_id (ipctk.edgefacecandidate property)": [[16, "ipctk.EdgeFaceCandidate.edge_id"]], "edge_id (ipctk.edgevertexcandidate property)": [[16, "ipctk.EdgeVertexCandidate.edge_id"]], "empty() (ipctk.candidates method)": [[16, "ipctk.Candidates.empty"]], "face_id (ipctk.edgefacecandidate property)": [[16, "ipctk.EdgeFaceCandidate.face_id"]], "face_id (ipctk.facevertexcandidate property)": [[16, "ipctk.FaceVertexCandidate.face_id"]], "is_step_collision_free() (ipctk.candidates method)": [[16, "ipctk.Candidates.is_step_collision_free"]], "num_vertices() (ipctk.edgeedgecandidate method)": [[16, "ipctk.EdgeEdgeCandidate.num_vertices"]], "num_vertices() (ipctk.edgevertexcandidate method)": [[16, "ipctk.EdgeVertexCandidate.num_vertices"]], "num_vertices() (ipctk.facevertexcandidate method)": [[16, "ipctk.FaceVertexCandidate.num_vertices"]], "num_vertices() (ipctk.vertexvertexcandidate method)": [[16, "ipctk.VertexVertexCandidate.num_vertices"]], "print_ccd_query() (ipctk.continuouscollisioncandidate method)": [[16, "ipctk.ContinuousCollisionCandidate.print_ccd_query"]], "print_ccd_query() (ipctk.edgeedgecandidate method)": [[16, "ipctk.EdgeEdgeCandidate.print_ccd_query"]], "print_ccd_query() (ipctk.edgevertexcandidate method)": [[16, "ipctk.EdgeVertexCandidate.print_ccd_query"]], "print_ccd_query() (ipctk.facevertexcandidate method)": [[16, "ipctk.FaceVertexCandidate.print_ccd_query"]], "save_obj() (ipctk.candidates method)": [[16, "ipctk.Candidates.save_obj"]], "vertex0_id (ipctk.vertexvertexcandidate property)": [[16, "ipctk.VertexVertexCandidate.vertex0_id"]], "vertex1_id (ipctk.vertexvertexcandidate property)": [[16, "ipctk.VertexVertexCandidate.vertex1_id"]], "vertex_id (ipctk.edgevertexcandidate property)": [[16, "ipctk.EdgeVertexCandidate.vertex_id"]], "vertex_id (ipctk.facevertexcandidate property)": [[16, "ipctk.FaceVertexCandidate.vertex_id"]], "vertex_ids() (ipctk.edgeedgecandidate method)": [[16, "ipctk.EdgeEdgeCandidate.vertex_ids"]], "vertex_ids() (ipctk.edgevertexcandidate method)": [[16, "ipctk.EdgeVertexCandidate.vertex_ids"]], "vertex_ids() (ipctk.facevertexcandidate method)": [[16, "ipctk.FaceVertexCandidate.vertex_ids"]], "vertex_ids() (ipctk.vertexvertexcandidate method)": [[16, "ipctk.VertexVertexCandidate.vertex_ids"]], "collisionconstraint (class in ipctk)": [[17, "ipctk.CollisionConstraint"]], "edgeedgeconstraint (class in ipctk)": [[17, "ipctk.EdgeEdgeConstraint"]], "edgevertexconstraint (class in ipctk)": [[17, "ipctk.EdgeVertexConstraint"]], "facevertexconstraint (class in ipctk)": [[17, "ipctk.FaceVertexConstraint"]], "planevertexconstraint (class in ipctk)": [[17, "ipctk.PlaneVertexConstraint"]], "vertexvertexconstraint (class in ipctk)": [[17, "ipctk.VertexVertexConstraint"]], "compute_potential() (ipctk.collisionconstraint method)": [[17, "ipctk.CollisionConstraint.compute_potential"]], "compute_potential() (ipctk.edgeedgeconstraint method)": [[17, "ipctk.EdgeEdgeConstraint.compute_potential"]], "compute_potential_gradient() (ipctk.collisionconstraint method)": [[17, "ipctk.CollisionConstraint.compute_potential_gradient"]], "compute_potential_gradient() (ipctk.edgeedgeconstraint method)": [[17, "ipctk.EdgeEdgeConstraint.compute_potential_gradient"]], "compute_potential_hessian() (ipctk.collisionconstraint method)": [[17, "ipctk.CollisionConstraint.compute_potential_hessian"]], "compute_potential_hessian() (ipctk.edgeedgeconstraint method)": [[17, "ipctk.EdgeEdgeConstraint.compute_potential_hessian"]], "num_vertices() (ipctk.planevertexconstraint method)": [[17, "ipctk.PlaneVertexConstraint.num_vertices"]], "vertex_ids() (ipctk.planevertexconstraint method)": [[17, "ipctk.PlaneVertexConstraint.vertex_ids"]], "collisionmesh (class in ipctk)": [[18, "ipctk.CollisionMesh"]], "are_adjacencies_initialized() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.are_adjacencies_initialized"]], "are_area_jacobians_initialized() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.are_area_jacobians_initialized"]], "build_from_full_mesh() (ipctk.collisionmesh static method)": [[18, "ipctk.CollisionMesh.build_from_full_mesh"]], "can_collide (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.can_collide"]], "construct_faces_to_edges() (ipctk.collisionmesh static method)": [[18, "ipctk.CollisionMesh.construct_faces_to_edges"]], "construct_is_on_surface() (ipctk.collisionmesh static method)": [[18, "ipctk.CollisionMesh.construct_is_on_surface"]], "dim() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.dim"]], "displace_vertices() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.displace_vertices"]], "edge_area() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.edge_area"]], "edge_area_gradient() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.edge_area_gradient"]], "edge_areas() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.edge_areas"]], "edge_vertex_adjacencies (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.edge_vertex_adjacencies"]], "edges (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.edges"]], "faces (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.faces"]], "faces_to_edges (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.faces_to_edges"]], "full_ndof (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.full_ndof"]], "full_num_vertices (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.full_num_vertices"]], "init_adjacencies() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.init_adjacencies"]], "init_area_jacobians() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.init_area_jacobians"]], "is_vertex_on_boundary() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.is_vertex_on_boundary"]], "map_displacements() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.map_displacements"]], "ndof (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.ndof"]], "num_edges (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.num_edges"]], "num_faces (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.num_faces"]], "num_vertices (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.num_vertices"]], "rest_positions (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.rest_positions"]], "to_full_dof() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.to_full_dof"]], "to_full_vertex_id() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.to_full_vertex_id"]], "vertex_area() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.vertex_area"]], "vertex_area_gradient() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.vertex_area_gradient"]], "vertex_areas (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.vertex_areas"]], "vertex_vertex_adjacencies (ipctk.collisionmesh property)": [[18, "ipctk.CollisionMesh.vertex_vertex_adjacencies"]], "vertices() (ipctk.collisionmesh method)": [[18, "ipctk.CollisionMesh.vertices"]], "edgeedgedistancetype (class in ipctk)": [[19, "ipctk.EdgeEdgeDistanceType"]], "pointedgedistancetype (class in ipctk)": [[19, "ipctk.PointEdgeDistanceType"]], "pointtriangledistancetype (class in ipctk)": [[19, "ipctk.PointTriangleDistanceType"]], "edge_edge_cross_squarednorm() (in module ipctk)": [[19, "ipctk.edge_edge_cross_squarednorm"]], "edge_edge_cross_squarednorm_gradient() (in module ipctk)": [[19, "ipctk.edge_edge_cross_squarednorm_gradient"]], "edge_edge_cross_squarednorm_hessian() (in module ipctk)": [[19, "ipctk.edge_edge_cross_squarednorm_hessian"]], "edge_edge_distance() (in module ipctk)": [[19, "ipctk.edge_edge_distance"]], "edge_edge_distance_gradient() (in module ipctk)": [[19, "ipctk.edge_edge_distance_gradient"]], "edge_edge_distance_hessian() (in module ipctk)": [[19, "ipctk.edge_edge_distance_hessian"]], "edge_edge_distance_type() (in module ipctk)": [[19, "ipctk.edge_edge_distance_type"]], "edge_edge_mollifier() (in module ipctk)": [[19, "ipctk.edge_edge_mollifier"]], "edge_edge_mollifier_gradient() (in module ipctk)": [[19, "ipctk.edge_edge_mollifier_gradient"]], "edge_edge_mollifier_hessian() (in module ipctk)": [[19, "ipctk.edge_edge_mollifier_hessian"]], "edge_edge_mollifier_threshold() (in module ipctk)": [[19, "ipctk.edge_edge_mollifier_threshold"]], "line_line_distance() (in module ipctk)": [[19, "ipctk.line_line_distance"]], "line_line_distance_gradient() (in module ipctk)": [[19, "ipctk.line_line_distance_gradient"]], "line_line_distance_hessian() (in module ipctk)": [[19, "ipctk.line_line_distance_hessian"]], "point_edge_distance() (in module ipctk)": [[19, "ipctk.point_edge_distance"]], "point_edge_distance_gradient() (in module ipctk)": [[19, "ipctk.point_edge_distance_gradient"]], "point_edge_distance_hessian() (in module ipctk)": [[19, "ipctk.point_edge_distance_hessian"]], "point_edge_distance_type() (in module ipctk)": [[19, "ipctk.point_edge_distance_type"]], "point_line_distance() (in module ipctk)": [[19, "ipctk.point_line_distance"]], "point_line_distance_gradient() (in module ipctk)": [[19, "ipctk.point_line_distance_gradient"]], "point_line_distance_hessian() (in module ipctk)": [[19, "ipctk.point_line_distance_hessian"]], "point_point_distance() (in module ipctk)": [[19, "ipctk.point_point_distance"]], "point_point_distance_gradient() (in module ipctk)": [[19, "ipctk.point_point_distance_gradient"]], "point_point_distance_hessian() (in module ipctk)": [[19, "ipctk.point_point_distance_hessian"]], "point_triangle_distance() (in module ipctk)": [[19, "ipctk.point_triangle_distance"]], "point_triangle_distance_gradient() (in module ipctk)": [[19, "ipctk.point_triangle_distance_gradient"]], "point_triangle_distance_hessian() (in module ipctk)": [[19, "ipctk.point_triangle_distance_hessian"]], "point_triangle_distance_type() (in module ipctk)": [[19, "ipctk.point_triangle_distance_type"]], "compute_collision_free_stepsize() (in module ipctk)": [[21, "ipctk.compute_collision_free_stepsize"]], "is_step_collision_free() (in module ipctk)": [[21, "ipctk.is_step_collision_free"]], "loggerlevel (class in ipctk)": [[22, "ipctk.LoggerLevel"]], "get_num_threads() (in module ipctk)": [[22, "ipctk.get_num_threads"]], "has_intersections() (in module ipctk)": [[22, "ipctk.has_intersections"]], "set_logger_level() (in module ipctk)": [[22, "ipctk.set_logger_level"]], "set_num_threads() (in module ipctk)": [[22, "ipctk.set_num_threads"]]}, "docurls": ["changelog.html", "code_of_conduct.html", "contributing.html", "cpp.html", "cpp-api/barrier.html", "cpp-api/ccd.html", "cpp-api/collision_constraints.html", "cpp-api/collision_mesh.html", "cpp-api/distance.html", "cpp-api/friction.html", "cpp-api/main.html", "cpp-api/utils.html", "index.html", "license.html", "python.html", "python-api/barrier.html", "python-api/ccd.html", "python-api/collision_constraints.html", "python-api/collision_mesh.html", "python-api/distance.html", "python-api/friction.html", "python-api/main.html", "python-api/utils.html", "style_guide.html"]})