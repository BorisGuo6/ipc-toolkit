Search.setIndex({"titles": ["Changelog", "Contributor Covenant Code of Conduct", "Contributing", "C++", "Barrier", "Broad Phase", "Candidates", "Continuous Collision Detection", "Collision Constraints", "Collision Mesh", "Distance", "Friction", "Intersections", "Utils", "Home", "License", "Python", "Barrier", "Broad Phase", "Candidates", "Continuous Collision Detection", "Collision Constraints", "Collision Mesh", "Distance", "Friction", "Intersections", "Utils", "Style Guide", "Convergent Formulation", "Getting Started", "Miscellaneous", "Nonlinear CCD", "References", "Physical Simulation"], "terms": {"logo": 0, "zfergu": [0, 1], "52": 0, "vertex": [0, 5, 7, 9, 10, 18, 20, 22, 23, 27, 29], "function": [0, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33], "order": [0, 28, 29, 30, 31, 32], "independ": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 33], "allow": [0, 1, 6, 7, 19, 20, 29], "constraint": [0, 6, 28], "merg": [0, 15], "correctli": 0, "updat": [0, 4, 17, 29, 31], "tight": [0, 3, 6, 7, 14, 19, 28, 29], "inclus": [0, 1, 3, 6, 7, 14, 19, 29, 32], "ccd": [0, 3, 6, 14, 19, 29], "larg": [0, 14, 32], "refactor": 0, "make": [0, 1, 2, 8, 14, 16, 21, 28, 30, 33], "code": [0, 2, 16, 30, 31], "more": [0, 2, 14, 28, 29, 30, 31], "object": [0, 5, 7, 9, 13, 18, 20, 22, 23, 24, 26, 29, 30, 31], "orient": [0, 1], "rather": [0, 29], "than": [0, 3, 4, 14, 17, 29, 30], "pass": 0, "other": [0, 1, 5, 6, 8, 9, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 33], "includ": [0, 1, 2, 3, 6, 9, 14, 15, 22, 28, 29, 30], "friction": [0, 14], "potenti": [0, 4, 8, 11, 14, 17, 21, 24, 28, 32, 33], "now": [0, 29], "being": 0, "veloc": [0, 27, 29], "bug": [0, 14], "new": [0, 9, 13, 14, 22, 32], "tutori": [0, 3, 14, 16, 29], "construct_collision_candid": 0, "candid": [0, 5, 8, 18, 21, 29], "build": [0, 5, 6, 8, 9, 11, 18, 19, 21, 22, 24, 28, 29, 33], "is_step_collision_fre": [0, 6, 7, 19, 20, 29], "compute_collision_free_steps": [0, 6, 7, 19, 20, 29], "compute_barrier_potenti": 0, "compute_potenti": [0, 8, 11, 21, 24, 29], "compute_shape_deriv": [0, 8, 21], "compute_minimum_dist": [0, 8, 21, 29], "construct_friction_constraint_set": 0, "friction_constraint": [0, 29], "compute_friction_": 0, "compute_": 0, "gener": 0, "collisionstencil": [0, 6, 8, 11, 19, 21, 24], "parent": 0, "class": [0, 1, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 33], "collisionconstraint": [0, 6, 8, 11, 21, 24, 28, 29], "frictionconstraint": [0, 6, 11, 24, 28, 29], "renam": 0, "replac": [0, 3, 14], "singl": [0, 1, 3, 29], "letter": 0, "variabl": [0, 11, 24, 27, 28, 29], "name": [0, 2, 3, 14, 18, 23, 24, 26], "v": [0, 9, 22, 28, 29], "e": [0, 1, 3, 5, 9, 18, 22, 27, 28, 29, 33], "f": [0, 9, 22, 29], "vertic": [0, 5, 6, 7, 8, 9, 11, 12, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 33], "posit": [0, 1, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31], "edg": [0, 5, 7, 9, 14, 18, 20, 22, 27, 28, 29, 31, 33], "face": [0, 5, 9, 11, 18, 22, 24, 27, 28, 29, 33], "_index": 0, "_id": 0, "inflation_radiu": [0, 5, 6, 18, 19, 29], "min_dist": [0, 4, 6, 7, 17, 19, 20, 29, 31], "99": 0, "2": [0, 4, 5, 9, 11, 17, 18, 22, 23, 24, 25, 26, 28, 29, 31, 32], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33], "round": [0, 30], "mode": 0, "conservativli": 0, "inflat": [0, 5, 6, 18, 19], "aabb": 0, "use_convergent_formul": [0, 8, 21, 28], "are_shape_derivatives_en": [0, 8, 21], "must": [0, 8], "access": 0, "through": [0, 1, 2, 3, 14, 29, 33], "getter": 0, "setter": 0, "ar": [0, 1, 2, 3, 6, 8, 9, 10, 11, 14, 21, 23, 24, 28, 29, 30, 31, 33], "previous": 0, "v0": 0, "were": [0, 1, 8, 21, 28], "u": [0, 1, 28, 29, 32], "limit": [0, 15, 30], "integr": [0, 14, 28, 29, 33], "scheme": [0, 29], "implicit": 0, "euler": [0, 29], "upstream": 0, "mean": [0, 28], "you": [0, 2, 3, 7, 14, 16, 20, 29, 30, 33], "need": [0, 5, 9, 18, 28, 29, 31, 33], "multipli": [0, 28, 29], "dv": 0, "dx": [0, 7, 20], "get": [0, 2, 6, 8, 9, 11, 21, 22, 24, 26, 27, 28, 30, 31, 33], "correct": [0, 3, 14], "forc": [0, 8, 21, 29, 33], "input": [0, 30, 31], "epsilon_vh": 0, "epsilon_v": [0, 11, 24, 29], "37": 0, "reflect": 0, "fact": 0, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 33], "defin": [0, 10, 23, 28, 29, 30], "term": [0, 1, 28], "instead": [0, 28, 33], "displac": [0, 6, 9, 11, 19, 22, 24, 27, 30, 33], "default": [0, 3, 6, 7, 8, 9, 14, 22, 28, 29, 30], "project_hessian_to_psd": [0, 8, 11, 21, 24, 33], "fals": [0, 3, 5, 7, 8, 11, 18, 20, 21, 22, 24, 28, 29], "30": 0, "websit": 0, "31": 0, "version": [0, 1, 2, 3, 14], "dropdown": 0, "list": [0, 6, 18, 19, 21, 22, 24], "34": 0, "switch": 0, "from": [0, 1, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 33], "templat": [0, 5, 6, 8, 13], "eigen": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 29, 31, 33], "ref": [0, 10, 11], "28": 0, "speed": [0, 11, 24], "up": 0, "maximum": [0, 4, 5, 6, 7, 17, 18, 19, 20, 26, 29, 30, 31], "minimum": [0, 4, 5, 6, 7, 8, 11, 17, 18, 19, 20, 21, 24, 31], "distanc": [0, 4, 6, 7, 8, 11, 14, 17, 19, 20, 21, 24, 28, 29, 31], "1e": [0, 4, 7, 13, 17, 19, 20, 26, 29], "4": [0, 6, 8, 14, 18, 23, 26, 29, 32], "43": 0, "point": [0, 5, 7, 8, 9, 11, 18, 20, 22, 24, 27, 28, 29, 31, 33], "out": [0, 4, 5, 6, 7, 15, 28, 30, 33], "41": 0, "42": 0, "unit": [0, 28, 29], "barrier": [0, 6, 8, 11, 14, 19, 21, 24], "we": [0, 1, 3, 14, 16, 27, 28, 29, 31, 33], "should": [0, 3, 6, 8, 9, 19, 21, 22, 28, 29, 33], "divid": [0, 11, 24], "origin": [0, 3, 10, 14, 23, 28, 29, 31], "hat": [0, 4, 17, 28, 29], "d": [0, 4, 17, 25, 28, 29, 30], "cdot": [0, 28, 29], "2d_": 0, "min": [0, 5, 18, 29, 31], "when": [0, 1, 3, 14, 28, 29, 30, 33], "squar": [0, 7, 10, 20, 23, 28, 29], "befor": [0, 8, 14, 27, 28, 29], "wa": [0, 1, 7, 16, 20, 28], "ipc_toolkit_with_correct_ccd": [0, 3, 14], "off": [0, 26], "44": 0, "fetchcont": [0, 3, 14], "cpm": 0, "48": 0, "provid": [0, 1, 3, 14, 15, 16, 27, 29, 30, 31, 33], "better": [0, 28, 29], "cach": [0, 8, 11, 21], "between": [0, 4, 6, 7, 8, 10, 14, 17, 19, 20, 21, 23, 28, 29, 31, 33], "addition": [0, 14, 30], "made": 0, "robin": [0, 3, 14], "map": [0, 3, 7, 9, 14, 22, 33], "abseil": [0, 3, 14], "option": [0, 33], "depend": [0, 28], "add": [0, 3, 5, 14, 29], "cfl": [0, 6, 19], "inspir": [0, 1, 6, 19], "cull": [0, 29], "describ": [0, 33], "section": 0, "3": [0, 3, 4, 5, 9, 11, 14, 17, 18, 20, 22, 23, 24, 25, 26, 28, 29, 32], "technic": 0, "supplement": 0, "ipc": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 29, 30, 31, 32, 33], "50": 0, "first": [0, 2, 6, 7, 10, 11, 14, 19, 20, 23, 24, 28, 29, 31], "offici": [0, 1, 2], "releas": [0, 16, 30], "stabl": 0, "toolkit": [0, 2, 3, 14, 16, 29, 30, 33], "prior": 0, "api": 0, "paramet": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33], "all": [0, 1, 3, 4, 5, 8, 9, 11, 14, 15, 17, 18, 21, 22, 24, 28, 29, 33], "const": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 31], "doubl": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 21, 29, 31, 33], "place": 0, "argument": [0, 3, 29], "which": [0, 1, 5, 8, 14, 16, 18, 21, 29, 33], "can": [0, 3, 5, 9, 14, 16, 18, 22, 28, 29, 30, 31, 33], "break": [0, 31], "call": [0, 3, 9, 13, 14, 22, 28, 29, 30, 31], "collisionmesh": [0, 6, 7, 8, 9, 11, 12, 19, 20, 21, 22, 24, 25, 29, 33], "7": [0, 23, 32], "wrap": 0, "data": [0, 3, 5, 14, 18, 19, 21, 22, 24, 29], "structur": [0, 3, 14, 29], "support": [0, 6, 29, 30], "ignor": 0, "intern": [0, 28, 33], "user": 0, "full": [0, 3, 6, 7, 9, 14, 19, 20, 22, 33], "mesh": [0, 5, 6, 7, 8, 11, 12, 18, 19, 20, 21, 24, 25, 27, 28, 30, 32], "surfac": [0, 6, 7, 9, 19, 20, 22, 28, 29, 33], "also": [0, 1, 28, 29, 30, 31], "to_full_dof": [0, 9, 22, 33], "reduc": 0, "gradient": [0, 4, 6, 8, 9, 10, 11, 17, 21, 22, 23, 24, 29, 33], "hessian": [0, 6, 8, 9, 10, 11, 21, 22, 23, 24, 29, 33], "": [0, 1, 3, 5, 6, 7, 8, 9, 11, 14, 18, 20, 24, 28, 29, 30, 31, 33], "dof": [0, 6, 9, 11, 24, 33], "sourc": [0, 2], "folder": 0, "organ": [0, 14], "plane": 0, "collis": [0, 3, 5, 11, 12, 14, 18, 24, 25, 27, 28, 31, 32, 33], "static": [0, 5, 7, 9, 11, 18, 22, 24, 29, 31], "analyt": [0, 31], "contact": [0, 6, 8, 11, 14, 19, 24, 28, 32], "cmake": [0, 3, 14], "target": 0, "system": [0, 2, 3, 14, 16], "modern": 0, "download": [0, 3, 14], "extern": [0, 1, 3, 14], "strategi": [0, 7, 20], "onli": [0, 2, 3, 28, 29, 33], "perform": [0, 6, 7, 19, 20, 29, 30], "no_zero_toi": 0, "true": [0, 3, 6, 7, 9, 11, 19, 20, 22, 24, 25, 28, 30, 33], "detect_edge_face_collision_candidates_brute_forc": 0, "3d": [0, 7, 9, 10, 14, 20, 23, 28, 29], "intersect": [0, 3, 5, 6, 7, 14, 18, 19, 20, 32], "broad": [0, 6, 7, 8, 12, 14, 19, 20, 21, 25], "phase": [0, 6, 7, 8, 12, 14, 19, 20, 21, 25], "abil": 0, "save": 0, "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32], "obj": [0, 29, 33], "test": [0, 16, 25], "has_intersect": [0, 12, 25, 30], "after": 0, "possibl": [0, 2, 29], "numer": [0, 27, 28], "problem": 0, "hashgrid": [0, 5, 18], "are_overlap": 0, "ignore_codimensional_vertic": 0, "brute": [0, 29], "method": [0, 5, 6, 7, 8, 12, 18, 19, 20, 21, 22, 24, 25, 29, 31, 33], "spatialhash": [0, 5, 18], "group": 0, "id": [0, 5, 6, 8, 9, 18, 19, 22, 29], "power": 0, "can_collid": [0, 5, 9, 22], "By": [0, 9, 22, 28, 30], "everyth": 0, "collid": [0, 5, 7, 9, 18, 20, 22, 29], "same": [0, 3, 14, 28, 29, 33], "reorder": 0, "construct_constraint_set": 0, "is_collision_fre": 0, "update_barrier_stiff": [0, 4, 17, 29], "requir": [0, 3, 14, 28, 29], "constraint_set": 0, "drop": [0, 9], "dhat": [0, 4, 6, 8, 11, 17, 19, 21, 24, 28, 29, 33], "2d": [0, 9, 10, 14, 23, 25, 28, 29, 31], "verison": 0, "initial_barrier_stiff": [0, 4, 17, 29], "comput": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 29, 32, 33], "set": [0, 1, 3, 6, 8, 14, 19, 21, 26, 27, 28, 29, 30, 33], "becaus": [0, 6, 29, 30, 31, 33], "lot": 0, "directori": 0, "src": 0, "spatial_hash": [0, 5, 18, 29], "broad_phas": 0, "file": [0, 2, 3, 14, 15, 29, 30, 33], "select": [0, 6, 9, 33], "hash_grid": [0, 5, 18, 19, 20, 21, 25, 29], "brute_forc": [0, 5, 18, 29], "toler": [0, 6, 7, 19, 20], "iter": [0, 6, 7, 19, 20, 29], "tight_inclusion_with_no_zero_toi": 0, "ON": [0, 16], "clear": [0, 5, 6, 8, 11, 18, 19, 21, 24], "given": [0, 2, 5, 7, 8, 11, 18, 20, 21, 24, 25, 28, 31, 33], "friction_constraint_set": 0, "tightinclus": 0, "degener": 0, "char": 0, "except": 0, "std": [0, 3, 5, 6, 7, 8, 9, 11, 13, 14, 18, 21, 22, 30, 33], "gave": 0, "dhat_epsilon_scal": [0, 4, 17], "valu": [0, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 23, 24, 26, 27, 29, 31], "9": [0, 4, 11, 20, 21, 23, 31], "warn": [0, 26, 30], "flip": 0, "bbox_diagon": [0, 4, 17, 29], "output": [0, 7, 20, 29], "move": [0, 5, 7, 18, 20], "eigen_ext": 0, "namespac": 0, "max": [0, 5, 11, 18, 24, 28], "size": [0, 1, 6, 7, 8, 9, 11, 19, 20, 21, 22, 24, 28, 29], "matric": [0, 29], "vectorx": 0, "vectormax": 0, "matrixxx": 0, "arraymax": 0, "util": [0, 3, 14, 27, 29, 30], "check": [0, 3, 5, 7, 14, 18, 20, 31, 33], "triangl": [0, 5, 7, 9, 14, 18, 20, 28, 29, 33], "gmp": [0, 3, 14], "exact": [0, 3, 14], "voxel_size_heurist": 0, "cpp": [0, 3, 14], "suggest": 0, "good": [0, 28], "voxel": [0, 5, 18], "averag": [0, 4, 17], "length": [0, 4, 9, 10, 17, 23, 30], "consid": [0, 1, 14], "result": [0, 28, 30], "memori": 0, "usag": 0, "tbb": [0, 30], "parallel": [0, 3, 10, 14, 23, 29], "loop": 0, "main": [0, 29, 30], "compute_friction_potenti": 0, "etc": 0, "addverticesfromedg": 0, "connect": [0, 9, 15], "avoid": [0, 1, 6, 7, 19, 31], "duplic": [0, 9, 28], "arraymax3": 0, "over": [0, 6, 7, 19, 20, 28, 31], "vectorx3": 0, "simplifi": [0, 28], "some": [0, 5, 8, 16, 21], "refer": [0, 3, 5, 8, 11, 13, 14, 16, 18, 21, 24, 29], "base": [0, 10, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32], "modif": 0, "benchmark": [0, 32], "indic": [0, 6, 9, 22, 29, 33], "faster": [0, 3, 14], "multithread": 0, "todo": [0, 33], "improv": [0, 28, 30], "fulli": 0, "hpp": [0, 29], "conserv": [0, 3, 5, 6, 7, 14, 18, 19, 20, 29, 32], "wang": [0, 29, 32], "et": [0, 7, 20, 28, 29, 31, 33], "al": [0, 7, 20, 28, 29, 31, 33], "etienn": [0, 3, 14], "vouga": [0, 3, 14], "see": [0, 1, 3, 14, 28, 29], "readm": 0, "md": 0, "seper": 0, "thick": 0, "codimension": [0, 9, 22, 32], "increment": [0, 14, 32], "li": [0, 7, 14, 20, 28, 29, 32, 33], "model": 0, "formul": [0, 8, 21], "further": 0, "f2e": 0, "similar": [0, 29], "recommend": [0, 7, 14, 20], "If": [0, 2, 3, 5, 6, 7, 8, 10, 11, 14, 16, 18, 19, 20, 21, 23, 24, 28, 29, 30, 33], "simpl": [0, 3, 14, 16], "linear": [0, 3, 6, 7, 14, 19, 20, 28, 29, 31, 33], "search": [0, 29], "done": [0, 29], "per": [0, 28], "vectorxd": [0, 4, 8, 9, 11, 29, 33], "matrixxd": [0, 5, 6, 7, 8, 9, 11, 12, 29, 33], "local": [0, 2, 28], "form": [0, 14, 28], "hash": [0, 3, 14, 22, 29], "grid": [0, 29], "without": [0, 1, 15], "spatial": [0, 29], "multipl": 0, "pair": [0, 5, 10, 11, 18, 23, 24, 27, 28, 29], "project": [0, 2, 3, 11, 14, 24, 27], "psd": [0, 11, 24, 33], "complet": [0, 33], "broken": 0, "matrix": [0, 6, 7, 9, 13, 20, 22, 26, 27, 29, 33], "never": [0, 29], "mollif": [0, 10, 23], "ee": [0, 6, 8, 21], "have": [0, 1, 8, 9, 19, 21, 22, 28, 29, 31], "type": [0, 5, 6, 8, 11, 17, 19, 20, 21, 22], "pp": 0, "pe": 0, "store": [0, 22, 29, 33], "threshold": [0, 8, 10, 21, 23, 29], "eps_x": [0, 8, 10, 21, 23], "like": [0, 1, 14], "normal": [0, 6, 10, 19, 23, 29], "small": [0, 29], "anywai": 0, "assert": [0, 29, 31], "one": [0, 5, 10, 18, 23, 28, 30], "boolean": [0, 12, 25, 29], "compute_friction_potential_hessian": 0, "control": 0, "exclud": 0, "g": [0, 3, 27, 28, 29, 33], "self": [0, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31], "second": [0, 4, 6, 7, 10, 11, 17, 19, 20, 23, 24, 29, 31], "take": [0, 1, 6, 7, 9, 11, 19, 22, 24, 28, 29, 31], "alreadi": [0, 33], "world": 0, "bound": [0, 3, 4, 5, 6, 7, 14, 17, 18, 19, 20, 29], "box": [0, 4, 5, 6, 17, 19, 29], "diagon": [0, 4, 17], "average_mass": [0, 4, 17], "min_barrier_stiffness_scal": [0, 4, 17], "typo": 0, "intial_barrier_stiff": 0, "inform": [0, 1, 3, 14], "tangent": 0, "basi": [0, 29], "magnitud": [0, 29], "closest": [0, 10, 11, 23, 24], "coeffici": [0, 10, 11, 23, 24, 29], "compar": [0, 6, 19], "compon": [0, 29, 33], "compute_friction_bas": 0, "It": [0, 29], "mu": [0, 11, 24, 29], "put": 0, "insid": 0, "dure": [0, 1], "handl": [0, 18, 23, 24, 26, 33], "alwai": [0, 2, 6, 8], "line": [0, 29, 31], "edge_edge_tangent_basi": [0, 11, 24], "spdlog": [0, 3, 13, 14, 30], "log": [0, 3, 14, 26, 29, 30], "header": 0, "prefix": [0, 27], "edgeedgeconstraint": [0, 6, 8, 11, 21, 24], "mollifi": [0, 8, 21], "dhat_squar": 0, "non": [0, 8, 10, 21, 23, 29, 30], "epsv_times_h_squar": 0, "epsv_times_h": 0, "rest": [0, 8, 9, 10, 11, 21, 22, 23, 24, 27, 33], "v_rest": 0, "longer": 0, "member": [1, 5, 6, 8, 9, 11, 18, 23, 24, 26, 27], "leader": 1, "particip": 1, "commun": 1, "harass": 1, "free": [1, 6, 7, 14, 15, 19, 20, 29, 30, 32], "experi": 1, "everyon": 1, "regardless": 1, "ag": 1, "bodi": [1, 4, 14, 17, 31, 32], "visibl": 1, "invis": 1, "disabl": [1, 3, 14], "ethnic": 1, "sex": 1, "characterist": 1, "gender": 1, "ident": 1, "express": [1, 15], "level": [1, 3, 14, 26, 29, 30], "educ": 1, "socio": 1, "econom": 1, "statu": 1, "nation": 1, "person": [1, 15], "appear": 1, "race": 1, "religion": 1, "sexual": 1, "act": 1, "interact": 1, "wai": [1, 2, 3, 14, 16], "contribut": 1, "open": [1, 2, 14], "welcom": [1, 2], "divers": 1, "healthi": 1, "exampl": [1, 3, 14, 16, 28, 29, 30, 31, 33], "behavior": [1, 30], "environ": 1, "demonstr": 1, "empathi": 1, "kind": [1, 15], "toward": 1, "peopl": 1, "Being": 1, "respect": [1, 8, 11, 21, 24, 29, 31, 33], "differ": [1, 3, 14, 28, 30], "opinion": 1, "viewpoint": 1, "give": 1, "gracefulli": 1, "accept": 1, "construct": [1, 5, 9, 11, 18, 22, 33], "feedback": 1, "apolog": 1, "those": [1, 2], "affect": 1, "mistak": 1, "learn": 1, "focus": 1, "what": [1, 29], "best": [1, 2, 30], "just": [1, 28, 33], "individu": [1, 29], "overal": 1, "unaccept": 1, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 33], "languag": 1, "imageri": 1, "attent": 1, "advanc": [1, 7, 20], "ani": [1, 2, 5, 6, 7, 8, 14, 15, 18, 19, 20, 21, 29, 31, 33], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 2], "polit": 1, "attack": 1, "public": [1, 3, 5, 6, 7, 8, 9, 11, 14, 18, 19, 20, 21, 22, 24, 27, 31], "privat": [1, 5, 9, 18], "publish": [1, 15], "physic": [1, 14], "email": 1, "address": 1, "explicit": 1, "permiss": [1, 15], "could": [1, 2], "reason": 1, "inappropri": 1, "profession": 1, "clarifi": 1, "appropri": [1, 28], "fair": 1, "action": [1, 15], "thei": [1, 2, 25, 30], "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "right": [1, 4, 15, 17, 28, 29], "remov": [1, 28], "edit": 1, "reject": 1, "commit": [1, 3], "wiki": 1, "issu": [1, 2, 14], "align": [1, 5, 28], "moder": 1, "decis": 1, "appli": [1, 9, 22, 28, 29, 31, 33], "within": 1, "space": [1, 7, 11, 24, 28], "repres": [1, 6, 29], "mail": 1, "post": [1, 2], "via": 1, "social": 1, "media": 1, "account": 1, "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 15], "instanc": 1, "abus": 1, "otherwis": [1, 3, 7, 15, 20, 28, 31], "mai": 1, "report": [1, 14, 29], "nyu": 1, "edu": 1, "complaint": 1, "review": 1, "investig": [1, 19], "promptli": 1, "fairli": 1, "oblig": 1, "privaci": 1, "secur": 1, "incid": [1, 28], "follow": [1, 3, 14, 15, 16, 27, 29, 30, 31, 33], "impact": [1, 6, 7, 19, 20, 29, 31, 32], "determin": [1, 5, 6, 7, 9, 10, 12, 18, 19, 20, 22, 23, 25, 29], "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "A": [1, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 32], "written": 1, "clariti": 1, "around": [1, 5, 18, 28, 31], "natur": 1, "explan": 1, "why": [1, 19], "apologi": 1, "request": [1, 14, 27], "seri": 1, "continu": [1, 5, 14, 18, 27, 28, 32], "No": 1, "involv": 1, "unsolicit": 1, "specifi": [1, 29], "period": 1, "time": [1, 5, 6, 7, 9, 11, 18, 19, 20, 24, 28, 29, 31, 32], "well": [1, 28, 33], "channel": 1, "lead": 1, "seriou": 1, "sustain": 1, "sort": [1, 6, 19], "pattern": 1, "aggress": 1, "disparag": 1, "adapt": [1, 14, 31], "0": [1, 4, 5, 6, 7, 8, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31], "avail": [1, 30], "http": [1, 2, 3, 14, 16, 32], "www": 1, "org": 1, "code_of_conduct": 1, "html": 1, "mozilla": 1, "ladder": 1, "For": [1, 3, 14, 28, 29, 30, 31], "answer": 1, "common": [1, 28], "question": 1, "about": [1, 2, 31], "faq": 1, "translat": [1, 31], "greatli": 2, "appreci": [2, 14], "everi": 2, "littl": 2, "bit": 2, "help": [2, 10, 23], "credit": 2, "github": [2, 3, 14, 16, 32], "com": [2, 3, 14, 16, 31], "sim": [2, 3, 14, 15, 16, 32], "pleas": [2, 14, 27, 28], "your": [2, 3, 14, 16, 27, 29, 30, 33], "oper": [2, 6, 7, 8, 11, 28, 31], "compil": [2, 16], "detail": [2, 14], "setup": [2, 13, 16], "might": 2, "troubleshoot": 2, "step": [2, 6, 7, 19, 20, 29, 33], "reproduc": 2, "look": [2, 6, 19], "anyth": 2, "tag": [2, 3], "want": [2, 3, 14, 28, 30, 33], "whoever": 2, "enhanc": 2, "timer": 2, "suitabl": 2, "start": [2, 5, 6, 7, 18, 19, 20, 27, 31], "softwar": [2, 14, 15], "whether": [2, 9, 11, 15, 22, 24, 25], "part": [2, 29, 30], "doc": 2, "even": [2, 28], "web": 2, "blog": 2, "articl": [2, 14], "send": 2, "propos": 2, "explain": 2, "how": [2, 16, 28, 29, 30, 33], "would": [2, 14, 28], "work": [2, 14, 19, 28, 31], "keep": 2, "scope": [2, 30], "narrow": [2, 6, 14, 19], "easier": [2, 28, 33], "rememb": 2, "volunt": 2, "driven": 2, "easiest": [3, 14, 16], "exist": [3, 14], "do": [3, 14, 15, 16, 28, 29, 30, 33], "14": [3, 14], "process": [3, 14, 29], "fetchcontent_declar": [3, 14], "ipc_toolkit": [3, 14], "git_repositori": [3, 14], "git": [3, 14, 16], "git_tag": [3, 14], "ipc_toolkit_git_tag": [3, 14], "fetchcontent_makeavail": [3, 14], "where": [3, 14, 28, 29, 31, 33], "link": [3, 14], "against": [3, 14], "target_link_librari": [3, 14], "project_nam": [3, 14], "librari": [3, 14, 16, 29, 30], "binari": [3, 14], "v1": 3, "1": [3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "git_shallow": 3, "algebra": [3, 14], "libigl": [3, 14, 33], "basic": [3, 14, 29], "geometri": [3, 14, 28, 29, 31], "predic": [3, 14, 25], "onetbb": [3, 14, 30], "simplebvh": [3, 5, 14, 29], "volum": [3, 14, 18], "hierarchi": [3, 14, 18], "unordered_set": [3, 5, 9, 14], "unordered_map": [3, 5, 14], "enabl": [3, 8, 14, 21, 28, 30], "ipc_toolkit_with_robin_map": [3, 14], "ipc_toolkit_with_abseil": [3, 14], "filib": [3, 7, 14, 20], "interv": [3, 6, 7, 14, 19, 20, 31], "arithmet": [3, 7, 14, 20], "nonlinear": [3, 14, 29], "trajectori": [3, 6, 7, 14, 19, 20], "ipc_toolkit_with_filib": [3, 14], "ration": [3, 14], "ipc_toolkit_with_rational_intersect": [3, 14], "instal": [3, 14, 33], "detect": [3, 5, 6, 14, 18, 19, 27, 32], "inexact": [3, 14], "comparison": [3, 14], "quick": [3, 14], "introduct": [3, 14], "document": [3, 14, 15], "ensur": [3, 7, 14, 20], "our": [3, 14, 28, 29, 33], "algorithm": [3, 6, 7, 14, 19, 20, 28, 30, 32, 33], "piec": [3, 14, 29, 31], "To": [3, 14, 16, 28, 29, 30, 33], "ipc_toolkit_build_unit_test": [3, 14], "ipc_toolkit_build_test": [3, 14], "catch2": [3, 14], "framework": [3, 14, 33], "finit": [3, 14, 33], "diff": [3, 14], "nlohman": [3, 14], "json": [3, 14], "load": [3, 14, 33], "grow": [4, 17], "infin": [4, 17], "approach": [4, 17, 28], "b": [4, 10, 17, 19, 20, 23, 25, 27, 28, 29], "ln": [4, 17, 28], "left": [4, 17, 28, 29], "frac": [4, 11, 17, 24, 28, 29], "activ": [4, 6, 8, 10, 11, 17, 19, 21, 23, 24, 29], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31], "barrier_gradi": [4, 17], "deriv": [4, 8, 11, 14, 17, 21, 24, 28, 33], "wrt": [4, 8, 9, 10, 11, 17, 21, 22, 23, 24], "barrier_hessian": [4, 17], "grad_energi": [4, 17, 29], "grad_barri": [4, 17], "max_barrier_stiff": [4, 17, 29], "1e11": 4, "dmin": [4, 8, 11, 17, 21, 24, 29], "init": [4, 11, 17], "scene": [4, 17], "mass": [4, 17, 31], "elast": [4, 17, 28, 29], "energi": [4, 17, 29], "scale": [4, 8, 17, 21, 29, 32], "premultipli": [4, 9, 10, 11, 17, 23, 24, 29], "element": [4, 5, 6, 7, 8, 14, 17, 18, 19, 20, 21, 22, 27, 33], "initi": [4, 6, 7, 8, 9, 11, 17, 19, 20, 21, 22, 29], "prev_min_dist": [4, 17], "barrier_stiff": [4, 11, 17, 24, 29], "decreas": [4, 17, 28], "less": [4, 17], "diag": [4, 17], "previou": [4, 11, 17, 24, 29], "current": [4, 8, 11, 13, 16, 17, 24, 29, 30], "fraction": [4, 17], "enum": [5, 10, 11, 27], "broadphasemethod": [5, 6, 7, 8, 12, 18, 19, 20, 21, 25, 29], "enumer": [5, 10, 11, 18], "implement": [5, 7, 14, 18, 28, 29, 31], "sweep_and_tiniest_queu": [5, 18, 29], "sweep_and_tiniest_queue_gpu": [5, 18, 29], "num_method": 5, "constexpr": [5, 7], "default_broad_phase_method": [5, 6, 7, 8, 12, 29], "broadphas": [5, 18], "subclass": [5, 6, 7, 8, 11], "bruteforc": [5, 18], "copymeshbroadphas": [5, 18], "inlin": [5, 6, 8, 9, 11], "virtual": [5, 6, 7, 8, 11, 31], "void": [5, 6, 8, 9, 11, 13, 30], "matrixxi": [5, 6, 8, 9, 11, 29, 33], "radiu": [5, 18, 31], "vertices_t0": [5, 6, 7, 18, 19, 20, 29], "vertices_t1": [5, 6, 7, 18, 19, 20, 29], "end": [5, 6, 7, 11, 18, 19, 20, 24, 27, 28, 29, 30, 31], "built": [5, 8, 18, 21, 28, 29], "detect_vertex_vertex_candid": [5, 18], "vector": [5, 6, 8, 9, 11, 18, 22, 24, 29, 30, 33], "vertexvertexcandid": [5, 6, 8, 11, 18, 19, 21, 24], "find": [5, 18, 29, 31], "detect_edge_vertex_candid": [5, 18], "edgevertexcandid": [5, 6, 8, 11, 18, 19, 21, 24, 29], "detect_edge_edge_candid": [5, 18], "edgeedgecandid": [5, 6, 8, 11, 18, 19, 21, 24, 29], "detect_face_vertex_candid": [5, 18], "facevertexcandid": [5, 6, 8, 11, 18, 19, 21, 24, 29], "detect_edge_face_candid": [5, 18], "edgefacecandid": [5, 6, 18, 19], "detect_collision_candid": [5, 18], "int": [5, 6, 8, 9, 11, 13, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30], "dim": [5, 9, 11, 18, 22, 24], "dimension": [5, 18], "simul": [5, 14, 18, 29, 32], "dimens": [5, 9, 11, 18, 22, 24, 29], "bool": [5, 6, 7, 8, 9, 11, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33], "size_t": [5, 6, 8, 9, 11], "can_vertices_collid": [5, 18], "default_can_vertices_collid": 5, "two": [5, 6, 7, 9, 10, 11, 18, 19, 20, 22, 23, 24, 25, 28, 29], "shared_ptr": [5, 13, 30], "make_broad_phas": [5, 18], "regist": [5, 18], "protect": [5, 6, 8, 9, 11, 31], "can_edge_vertex_collid": 5, "ei": [5, 9, 22], "vi": [5, 9, 22], "can_edges_collid": 5, "eai": 5, "ebi": 5, "can_face_vertex_collid": 5, "fi": 5, "can_edge_face_collid": 5, "attribut": [5, 6, 8, 9, 18, 19, 21, 22, 24], "vertex_box": 5, "edge_box": 5, "face_box": 5, "overrid": [5, 6, 7, 8, 11, 20, 31], "typenam": [5, 6, 8, 13], "triangular": [5, 6, 9, 19, 29], "detect_candid": 5, "boxes0": 5, "boxes1": 5, "cellsiz": [5, 18], "arraymax3i": 5, "gridsiz": [5, 18], "arraymax3d": 5, "domainmin": [5, 18], "domainmax": [5, 18], "resiz": 5, "insert_box": 5, "hashitem": 5, "item": 5, "long": [5, 6, 7, 8, 11, 30], "extent": 5, "x": [5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 28, 29, 31], "y": [5, 29], "z": 5, "creat": [5, 27, 29], "cell": 5, "locat": 5, "m_cellsiz": 5, "m_gridsiz": 5, "m_domainmin": 5, "m_domainmax": 5, "vertex_item": 5, "edge_item": 5, "face_item": 5, "items0": 5, "items1": 5, "voxel_s": [5, 18], "is_vertex_index": [5, 18], "idx": [5, 6, 8, 11, 18, 21, 24], "primit": [5, 6, 9, 18, 19, 22, 29], "index": [5, 8, 9, 11, 18, 21, 22, 24, 33], "is_edge_index": [5, 18], "is_triangle_index": [5, 18], "to_edge_index": [5, 18], "convert": [5, 9, 18], "to_triangle_index": [5, 18], "left_bottom_corn": [5, 18], "right_top_corn": [5, 18], "voxel_count": [5, 18], "one_div_voxels": [5, 18], "voxel_count_0x1": [5, 18], "edge_start_ind": [5, 18], "tri_start_ind": [5, 18], "point_and_edge_occup": [5, 18], "query_point_for_point": 5, "vert_ind": 5, "query_point_for_edg": 5, "edge_ind": 5, "query_point_for_triangl": 5, "tri_ind": 5, "query_edge_for_edg": 5, "query_edge_for_triangl": 5, "locate_voxel_index": 5, "vectormax3d": [5, 7, 8, 10, 11, 31], "p": [5, 7, 10, 11, 18, 20, 23, 24, 28, 31], "locate_voxel_axis_index": 5, "voxel_axis_index": 5, "locate_box_voxel_axis_index": 5, "min_corn": 5, "max_corn": 5, "min_index": 5, "max_index": 5, "voxelaxisindex2voxelindex": 5, "ix": 5, "ii": 5, "iz": 5, "built_in_radiu": 5, "vertex_bvh": 5, "edge_bvh": 5, "face_bvh": 5, "init_bvh": 5, "swap_ord": 5, "sweepandtiniestqueu": [5, 18], "to_edge_id": 5, "to_face_id": 5, "is_vertex": 5, "is_edg": 5, "is_fac": 5, "stq": 5, "cpu": 5, "overlap": [5, 29], "num_vertic": [5, 6, 8, 9, 22], "axi": 5, "aabb1": [5, 18], "aabb2": [5, 18], "aabb3": [5, 18], "anoth": [5, 18], "corner": [5, 18], "arrai": [5, 6, 8, 22, 28, 29, 31], "vertex_id": [5, 6, 8, 11, 18, 19, 21], "attach": [5, 18], "from_point": [5, 18], "sphere": [5, 18], "enclos": [5, 18, 31], "p_t0": [5, 7, 10, 18, 20, 23, 29, 31], "p_t1": [5, 7, 10, 18, 20, 23, 29, 31], "tempor": [5, 18], "t": [5, 6, 7, 8, 11, 18, 19, 20, 28, 29, 31], "capsul": [5, 18], "conservative_infl": [5, 18], "broad_phase_method": [6, 7, 8, 12, 19, 20, 21, 25, 29], "discret": [6, 19, 28, 33], "rowwis": [6, 11, 19, 24], "amount": [6, 7, 19, 20], "assum": [6, 7, 19, 20], "empti": [6, 8, 11, 19, 21, 24], "continuouscollisioncandid": [6, 19, 21, 24], "default_ccd_toler": [6, 7, 31], "max_iter": [6, 7, 19, 20], "default_ccd_max_iter": [6, 7, 31], "number": [6, 7, 8, 9, 11, 14, 19, 20, 21, 22, 24, 26, 29, 30], "occur": [6, 7, 19, 20, 29], "maxim": [6, 7, 19, 20], "compute_noncandidate_conservative_steps": [6, 19], "largest": [6, 19], "feasibl": [6, 19], "compute_cfl_steps": [6, 19], "save_obj": [6, 19], "string": [6, 8, 30], "filenam": [6, 19, 27], "vv_candid": [6, 19, 21], "ev_candid": [6, 19], "ee_candid": [6, 19], "fv_candid": [6, 19], "most": [6, 31], "four": 6, "vectormax3": 6, "matrixx": 6, "nan": 6, "vectormax12": 6, "compute_dist": [6, 8], "vectormax12d": [6, 7, 8, 11], "compute_distance_gradi": [6, 8], "w": [6, 8, 11], "r": [6, 8, 11, 28, 31], "matrixmax12d": [6, 8, 11], "compute_distance_hessian": [6, 8], "toi": [6, 7, 29, 31], "tmax": [6, 7, 19, 20, 31], "conservative_resc": [6, 7, 19, 20, 31], "default_ccd_conservative_resc": [6, 7], "row": [6, 7, 9, 19, 20, 22, 29, 33], "indici": [6, 9, 19], "separ": [6, 7, 19, 20, 31], "rescal": [6, 7, 19, 20], "exactli": [6, 7, 19], "had": [6, 19], "ostream": 6, "write_ccd_queri": 6, "write": 6, "queri": [6, 19], "stream": 6, "vertexvertexconstraint": [6, 8, 11, 21, 24], "vertexvertexfrictionconstraint": [6, 11, 24], "vertex0_id": [6, 8, 11, 19, 21], "vertex1_id": [6, 8, 11, 19, 21], "friend": [6, 8], "h": [6, 8, 29, 30], "abslhashvalu": [6, 8], "vv": [6, 8, 21], "edgevertexconstraint": [6, 8, 11, 21, 24], "edgevertexfrictionconstraint": [6, 11, 24], "edge_id": [6, 8, 11, 19, 21], "pointedgedistancetyp": [6, 8, 10, 23], "known_dtyp": [6, 8, 11], "ev": [6, 8, 21], "edgeedgefrictionconstraint": [6, 11, 24], "edge0_id": [6, 8, 11, 19, 21], "edge1_id": [6, 8, 11, 19, 21], "edgeedgedistancetyp": [6, 8, 10, 11, 21, 23], "Not": 6, "face_id": [6, 8, 11, 19, 21], "fv": [6, 8, 9, 22], "facevertexconstraint": [6, 8, 11, 21, 24], "facevertexfrictionconstraint": [6, 11, 24], "pointtriangledistancetyp": [6, 8, 10, 23], "6": [7, 11, 23, 26, 32], "10": [7, 29], "000": 7, "000l": 7, "8": [7, 13, 19, 20, 23, 29, 31], "point_point_ccd": [7, 20], "p0_t0": [7, 20], "p1_t0": [7, 20], "p0_t1": [7, 20], "p1_t1": [7, 20], "final": [7, 20], "error": [7, 20, 26], "point_edge_ccd": [7, 20, 29], "e0_t0": [7, 20], "e1_t0": [7, 20], "e0_t1": [7, 20], "e1_t1": [7, 20], "endpoint": [7, 11, 20, 24, 25, 31], "edge_edge_ccd": [7, 20, 29], "vector3d": [7, 10, 11, 12, 29], "ea0_t0": [7, 20], "ea1_t0": [7, 20], "eb0_t0": [7, 20], "eb1_t0": [7, 20], "ea0_t1": [7, 20], "ea1_t1": [7, 20], "eb0_t1": [7, 20], "eb1_t1": [7, 20], "point_triangle_ccd": [7, 20, 29], "t0_t0": [7, 20, 29], "t1_t0": [7, 20, 29], "t2_t0": [7, 20, 29], "t0_t1": [7, 20, 29], "t1_t1": [7, 20, 29], "t2_t1": [7, 20, 29], "third": [7, 10, 11, 20, 23, 24, 28], "ccd_strategi": [7, 20], "initial_dist": [7, 20], "outlin": [7, 20], "2020": [7, 14, 15, 20, 28, 32, 33], "additive_ccd": [7, 20], "distance_squar": [7, 11, 20, 24], "max_disp_mag": [7, 20], "nonlineartrajectori": [7, 20, 31], "intervalnonlineartrajectori": [7, 20], "max_distance_from_linear": [7, 20, 31], "t0": [7, 10, 11, 12, 20, 23, 24, 25, 31], "t1": [7, 10, 11, 12, 20, 23, 24, 25, 31], "vectormax3i": 7, "know": [7, 19, 20, 31], "tighter": [7, 20], "point_point_nonlinear_ccd": [7, 20, 31], "p0": [7, 10, 11, 20, 23, 24], "p1": [7, 10, 11, 20, 23, 24], "along": [7, 20], "point_edge_nonlinear_ccd": [7, 20, 31], "e0": [7, 10, 11, 12, 20, 23, 24, 25, 27, 31], "e1": [7, 10, 11, 12, 20, 23, 24, 25, 27, 31], "edge_edge_nonlinear_ccd": [7, 20, 31], "ea0": [7, 10, 11, 20, 23, 24], "ea1": [7, 10, 11, 20, 23, 24], "eb0": [7, 10, 11, 20, 23, 24], "eb1": [7, 10, 11, 20, 23, 24], "point_triangle_nonlinear_ccd": [7, 20, 31], "t2": [7, 10, 11, 12, 20, 23, 24, 25], "conservative_piecewise_linear_ccd": [7, 20], "linear_ccd": [7, 20], "piecewis": [7, 20, 28, 31], "sum": [8, 9, 21, 28, 29], "stiff": [8, 11, 14, 21, 24, 28], "compute_potential_gradi": [8, 11, 21, 24, 29, 33], "sparsematrix": [8, 9, 11, 29, 33], "compute_potential_hessian": [8, 11, 21, 24, 29, 33], "sure": [8, 21], "semi": [8, 11, 21, 24], "definit": [8, 11, 21, 24], "shape": [8, 21], "throw": 8, "runtime_error": [8, 21], "adjac": [8, 9, 21, 22], "constriant": [8, 11, 21, 24], "is_vertex_vertex": [8, 21], "is_edge_vertex": [8, 21], "is_edge_edg": [8, 21], "is_face_vertex": [8, 21], "is_plane_vertex": [8, 21], "converg": [8, 21, 32], "necessarili": 8, "set_use_convergent_formul": [8, 28], "set_are_shape_derivatives_en": 8, "to_str": [8, 21], "vv_constraint": [8, 11, 21, 24], "ev_constraint": [8, 11, 21, 24], "ee_constraint": [8, 11, 21, 24], "fv_constraint": [8, 11, 21, 24], "planevertexconstraint": [8, 21], "pv_constraint": [8, 21], "m_use_convergent_formul": 8, "m_are_shape_derivatives_en": 8, "inherit": [8, 18, 19, 20, 21, 22, 24], "diagram": 8, "collabor": 8, "weight": [8, 11, 21, 24, 28, 29], "sparsevector": [8, 9, 11], "weight_gradi": [8, 11, 21, 24], "rest_posit": [8, 9, 11, 21, 22, 24, 27, 29, 33], "triplet": [8, 21], "compute_shape_derivative_first_term": 8, "\u2093w": 8, "\u1d64b": 8, "\u1d40": 8, "compute_shape_derivative_second_term": 8, "\u2093": 8, "_vertex0_id": 8, "_vertex1_id": 8, "_weight": 8, "_weight_gradi": 8, "_edge_id": 8, "_vertex_id": 8, "dtype": [8, 10, 21, 22, 23], "auto": [8, 10, 21, 23], "edge_edge_mollifi": [8, 10, 23], "_face_id": 8, "plane_origin": [8, 21], "plane_norm": [8, 21], "stencil": [8, 28], "encapsol": 9, "transform": [9, 31], "go": 9, "volumetr": 9, "fe": 9, "immut": 9, "so": [9, 15, 28, 30], "constructor": 9, "displacement_map": [9, 22, 33], "directli": [9, 16, 22, 29, 33], "include_vertex": [9, 22], "full_rest_posit": [9, 22, 33], "each": [9, 22, 25, 28, 29, 31], "init_adjac": [9, 22], "init_area_jacobian": [9, 22], "area": [9, 22, 28], "destroi": 9, "num_codim_vertic": [9, 22], "num_edg": [9, 22], "num_fac": [9, 22], "ndof": [9, 11, 22], "degre": [9, 11, 22], "freedom": [9, 11, 22], "full_num_vertic": [9, 22], "full_ndof": [9, 22], "vectorxi": 9, "codim_vertic": [9, 22], "cv": [9, 22], "faces_to_edg": [9, 22], "full_posit": [9, 22, 33], "displace_vertic": [9, 22, 33], "full_displac": [9, 22], "map_displac": [9, 22, 33], "to_full_vertex_id": [9, 22], "correspond": [9, 22, 28], "quantiti": [9, 22], "chain": [9, 22, 33], "rule": [9, 22, 33], "equal": [9, 22], "vertex_vertex_adjac": [9, 22], "vertex_edge_adjac": [9, 22], "edge_vertex_adjac": [9, 22], "are_adjacencies_initi": [9, 22], "been": [9, 22], "is_vertex_on_boundari": [9, 22], "boundari": [9, 22, 28], "vertex_area": [9, 22], "barycentr": [9, 11, 22, 24], "vertex_area_gradi": [9, 22], "edge_area": [9, 22], "edge_area_gradi": [9, 22], "are_area_jacobians_initi": [9, 22], "jacobian": [9, 22, 33], "default_can_collid": 9, "contain": [9, 22, 28, 29], "build_from_full_mesh": [9, 22, 33], "helper": [9, 22, 33], "automat": [9, 10, 22, 23, 29], "construct_is_on_surfac": [9, 22, 33], "construct_faces_to_edg": [9, 22], "init_codim_vertic": 9, "init_selection_matric": 9, "init_area": 9, "m_full_rest_posit": 9, "m_rest_posit": 9, "m_codim_vertic": 9, "m_edg": 9, "m_face": 9, "m_faces_to_edg": 9, "m_full_vertex_to_vertex": 9, "neg": [9, 28], "m_vertex_to_full_vertex": 9, "m_select_vertic": 9, "\u211d": 9, "m_select_dof": 9, "m_displacement_map": 9, "m_displacement_dof_map": 9, "m_vertex_vertex_adjac": 9, "m_vertex_edge_adjac": 9, "m_edge_vertex_adjac": 9, "m_is_vertex_on_boundari": 9, "polylin": 9, "m_vertex_area": 9, "m_edge_area": 9, "m_vertex_area_jacobian": 9, "m_edge_area_jacobian": 9, "vertex_matrix_to_dof_matrix": 9, "m_v": 9, "meant": 9, "m_dof": 9, "entri": [9, 33], "p_e0": [10, 23], "zero": [10, 23, 31], "p_e1": [10, 23], "p_e": [10, 23], "interior": [10, 23], "ea0_eb0": [10, 23], "ea0_eb1": [10, 23], "ea1_eb0": [10, 23], "ea1_eb1": [10, 23], "ea_eb0": [10, 23], "ea_eb1": [10, 23], "ea0_eb": [10, 23], "ea1_eb": [10, 23], "ea_eb": [10, 23], "p_t2": [10, 23], "p_e2": [10, 23], "p_t": [10, 23], "point_edge_distance_typ": [10, 23], "edge_edge_distance_typ": [10, 23], "point_triangle_distance_typ": [10, 23], "edge_edge_mollifier_threshold": [10, 23], "ea0_rest": [10, 23], "ea1_rest": [10, 23], "eb0_rest": [10, 23], "eb1_rest": [10, 23], "edge_edge_cross_squarednorm": [10, 23], "norm": [10, 23, 28, 31], "cross": [10, 23], "product": [10, 23], "vector12d": 10, "edge_edge_cross_squarednorm_gradi": [10, 23], "matrix12d": 10, "edge_edge_cross_squarednorm_hessian": [10, 23], "smooth": [10, 14, 23, 28, 29], "close": [10, 23], "edge_edge_mollifier_gradi": [10, 23], "edge_edge_mollifier_hessian": [10, 23], "edge_edge_dist": [10, 23], "segment": [10, 23, 25, 31], "actual": [10, 23], "edge_edge_distance_gradi": [10, 23], "edge_edge_distance_hessian": [10, 23], "line_line_dist": [10, 23], "infinit": [10, 23], "line_line_distance_gradi": [10, 23], "line_line_distance_hessian": [10, 23], "point_edge_dist": [10, 23], "vectormax9d": 10, "point_edge_distance_gradi": [10, 23], "grad": [10, 23, 33], "matrixmax9d": 10, "point_edge_distance_hessian": [10, 23], "hess": [10, 23, 33], "point_line_dist": [10, 23], "point_line_distance_gradi": [10, 23], "point_line_distance_hessian": [10, 23], "point_plane_dist": [10, 23], "point_plane_distance_gradi": [10, 23], "matrix3d": 10, "point_plane_distance_hessian": [10, 23], "point_point_dist": [10, 23], "vectormax6d": 10, "point_point_distance_gradi": [10, 23], "matrixmax6d": 10, "point_point_distance_hessian": [10, 23], "point_triangle_dist": [10, 23], "point_triangle_distance_gradi": [10, 23], "point_triangle_distance_hessian": [10, 23], "contact_constraint": [11, 24, 28, 29], "blend_mu": [11, 24], "default_blend_mu": [11, 24], "epsv": [11, 24, 29], "dissap": [11, 24], "compute_forc": [11, 24], "lagged_displac": [11, 24], "no_mu": [11, 24], "compute_force_jacobian": [11, 24], "diffwrt": [11, 24], "mu0": [11, 24], "mu1": [11, 24], "differenti": [11, 24], "lag": [11, 14, 29], "normal_force_magnitud": [11, 24], "vectormax2d": 11, "closest_point": [11, 24], "coordin": [11, 24, 27, 28], "matrixmax": 11, "tangent_basi": [11, 24], "compute_normal_force_magnitud": [11, 24], "activi": 11, "compute_normal_force_magnitude_gradi": [11, 24], "compute_tangent_basi": 11, "36": [11, 24], "compute_tangent_basis_jacobian": 11, "compute_closest_point": 11, "12": [11, 23], "compute_closest_point_jacobian": 11, "relative_veloc": 11, "relative_velocity_matrix": 11, "m": [11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32], "relative_velocity_matrix_jacobian": 11, "f0_sf": [11, 24], "f_0": [11, 24, 29], "begin": [11, 24, 28, 29, 30], "case": [11, 24, 28, 29, 31, 33], "newlin": [11, 24], "geq": [11, 24, 28], "tangenti": [11, 24, 29], "f1_sf_over_x": [11, 24], "f_1": [11, 24], "df1_x_minus_f1_over_x3": [11, 24], "f1": [11, 24], "minu": [11, 24], "cube": [11, 24], "distance_squared_gradi": [11, 24], "point_point_tangent_basi": [11, 24], "3x2": [11, 24], "whose": [11, 24, 29], "column": [11, 22, 24], "point_edge_tangent_basi": [11, 24], "point_triangle_tangent_basi": [11, 24], "bmatrix": [11, 24, 29], "t_1": [11, 24, 31], "t_0": [11, 24, 31], "t_2": [11, 24], "18": 11, "point_point_tangent_basis_jacobian": [11, 24], "27": 11, "point_edge_tangent_basis_jacobian": [11, 24], "edge_edge_tangent_basis_jacobian": [11, 24], "point_triangle_tangent_basis_jacobian": [11, 24], "point_point_relative_veloc": [11, 24], "dp0": [11, 24], "dp1": [11, 24], "point_edge_relative_veloc": [11, 24], "dp": [11, 24], "de0": [11, 24], "de1": [11, 24], "alpha": [11, 24], "parametr": [11, 24], "edge_edge_relative_veloc": [11, 24], "dea0": [11, 24], "dea1": [11, 24], "deb0": [11, 24], "deb1": [11, 24], "vector2d": [11, 31], "coord": [11, 24], "point_triangle_relative_veloc": [11, 24], "dt0": [11, 24], "dt1": [11, 24], "dt2": [11, 24], "baricentr": [11, 24], "point_point_relative_velocity_matrix": [11, 24], "point_edge_relative_velocity_matrix": [11, 24], "edge_edge_relative_velocity_matrix": [11, 24], "point_triangle_relative_velocity_matrix": [11, 24], "point_point_relative_velocity_matrix_jacobian": [11, 24], "point_edge_relative_velocity_matrix_jacobian": [11, 24], "edge_edge_relative_velocity_matrix_jacobian": [11, 24], "point_triangle_relative_velocity_matrix_jacobian": [11, 24], "ha": [12, 25, 28, 29], "is_edge_intersecting_triangl": [12, 25], "retriev": 13, "set_logg": [13, 30], "thread": 13, "safe": 13, "_scalar": 13, "_row": 13, "_col": 13, "_option": 13, "_maxrow": 13, "_maxcol": 13, "project_to_psd": [13, 26], "onto": [13, 26, 33], "cone": [13, 26, 33], "symmetr": [13, 26], "project_to_pd": [13, 26], "ep": [13, 26], "reusabl": 14, "its": [14, 29, 33], "dissip": 14, "As": [14, 28, 30, 33], "doe": [14, 33], "solver": [14, 28, 29], "polyfem": [14, 33], "rigid": [14, 31, 32], "dynam": [14, 29, 32], "both": [14, 28, 29], "pybind11": [14, 16], "contributor": 14, "come": 14, "fix": [14, 28, 29], "highli": 14, "submit": 14, "pull": [14, 27], "simpli": [14, 28], "fork": 14, "repositori": [14, 16], "cite": 14, "author": [14, 15], "zachari": [14, 32], "ferguson": [14, 31, 32, 33], "titl": 14, "url": 14, "year": 14, "paper": [14, 28], "li2020ipc": 14, "minchen": [14, 32], "teseo": [14, 32], "schneider": [14, 32], "timothi": [14, 32], "langloi": [14, 32], "deni": [14, 32], "zorin": [14, 32], "daniel": [14, 32], "panozzo": [14, 32], "chenfanfu": [14, 32], "jiang": [14, 32], "danni": [14, 32], "kaufman": [14, 32], "invers": [14, 32], "deform": [14, 29, 32, 33], "journal": 14, "acm": [14, 32], "tran": 14, "graph": 14, "siggraph": [14, 32], "39": 14, "articleno": 14, "49": [14, 31], "mit": [14, 15], "copyright": 15, "c": [15, 16, 25, 28, 29, 30, 31, 32, 33], "herebi": 15, "grant": 15, "charg": 15, "obtain": 15, "copi": [15, 29], "associ": [15, 32], "deal": 15, "restrict": 15, "modifi": [15, 28], "distribut": 15, "sublicens": 15, "sell": 15, "permit": 15, "whom": 15, "furnish": 15, "subject": 15, "condit": 15, "abov": [15, 28], "notic": 15, "shall": 15, "substanti": 15, "portion": 15, "THE": 15, "AS": 15, "warranti": 15, "OF": 15, "OR": 15, "impli": [15, 28], "BUT": 15, "NOT": 15, "TO": 15, "merchant": 15, "fit": 15, "FOR": 15, "particular": 15, "purpos": 15, "AND": 15, "noninfring": 15, "IN": 15, "NO": 15, "holder": 15, "BE": 15, "liabl": 15, "claim": 15, "damag": 15, "liabil": 15, "contract": 15, "tort": 15, "aris": 15, "WITH": 15, "bind": 16, "latest": 16, "pip": [16, 33], "ipctk": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33], "wish": 16, "develop": 16, "scratch": 16, "either": 16, "clone": 16, "repo": 16, "manual": 16, "py": 16, "script": 16, "setuptool": 16, "command": 16, "root": 16, "them": [16, 29], "success": 16, "import": 16, "altern": [16, 29], "mkdir": 16, "cd": 16, "dcmake_build_typ": 16, "dipc_toolkit_build_python": 16, "j4": 16, "found": 16, "here": [16, 28, 29], "jupyt": 16, "notebook": 16, "ipynb": 16, "float": [17, 18, 19, 20, 21, 22, 23, 24, 26], "numpi": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29], "ndarrai": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "float64": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "100000000000": 17, "tupl": [17, 18, 19, 20], "09": 17, "pybind11_object": [18, 19, 20, 21, 22, 23, 24, 26], "bounding_volume_hierarchi": 18, "gpu": 18, "5": [18, 23, 26, 29, 31, 32], "__eq__": [18, 19, 21, 23, 24, 26], "__getstate__": [18, 23, 24, 26], "__hash__": [18, 19, 21, 23, 24, 26], "__index__": [18, 23, 24, 26], "__init__": [18, 19, 20, 21, 22, 23, 24, 26, 31], "__int__": [18, 23, 24, 26], "__members__": [18, 23, 24, 26], "__module__": [18, 19, 20, 21, 22, 23, 24, 26], "__ne__": [18, 19, 21, 23, 24, 26], "__repr__": [18, 19, 23, 24, 26], "str": [18, 19, 21, 23, 24, 26], "__setstate__": [18, 23, 24, 26], "state": [18, 23, 24, 26], "none": [18, 19, 21, 22, 23, 24, 26], "__str__": [18, 19, 23, 24, 26], "properti": [18, 19, 21, 22, 23, 24, 26], "__annotations__": [18, 19, 20, 21, 22, 23, 24, 26], "arg": [18, 19, 20, 21, 22, 23, 24, 31], "kwarg": [18, 19, 20, 21, 22, 23, 24], "overload": [18, 19, 20, 21, 22, 23, 24], "n": [18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29], "int32": [18, 19, 21, 22, 24], "collect": [18, 20, 22], "abc": [18, 20, 22], "callabl": [18, 20, 22, 24], "tsl": [18, 22], "robin_map": 18, "alloc": [18, 22, 30], "absl": [18, 22], "lts_20230125": [18, 22], "hash_intern": [18, 22], "equal_to": [18, 22], "rh": [18, 22], "power_of_two_growth_polici": [18, 22], "2ul": [18, 22], "annot": 18, "fixeds": 18, "__getitem__": [19, 21, 24], "arg0": 19, "__len__": [19, 21, 24], "06": [19, 20], "10000000": [19, 20], "autoclass": 19, "don": 19, "print_ccd_queri": 19, "print": 19, "cout": 19, "__lt__": [19, 21], "__call__": [20, 31], "scipi": [21, 22, 24], "spars": [21, 22, 24, 29], "csc_matrix": [21, 22, 24], "0x0": 22, "compress": 22, "format": 22, "robin_set": 22, "segment_segment_intersect": 25, "orient2d": 25, "1st": 25, "2st": 25, "loggerlevel": [26, 30], "trace": 26, "debug": [26, 30], "info": [26, 30], "critic": 26, "set_logger_level": [26, 30], "get_num_thread": [26, 30], "set_num_thread": [26, 30], "nthread": [26, 30], "08": 26, "clangformat": 27, "autom": 27, "push": 27, "In": [27, 28, 29, 31, 32, 33], "stick": 27, "snake_cas": 27, "pascalcas": 27, "struct": 27, "all_cap": 27, "constant": 27, "m_": 27, "set_memb": 27, "materi": [27, 28], "suffix": 27, "_t0": 27, "_t1": 27, "doxygen": 27, "addit": 28, "2023": [28, 29, 32, 33], "collision_constraint": [28, 29, 33], "collision_mesh": [28, 29, 30, 33], "python": [28, 29, 30, 31, 33], "effect": 28, "briefli": 28, "summar": 28, "conveni": [28, 29], "mathcal": 28, "embed": 28, "parameter": 28, "possibli": 28, "discontinu": 28, "tild": 28, "subset": 28, "mathbb": 28, "travers": 28, "across": 28, "contigu": 28, "total": 28, "int_": 28, "_": 28, "setminu": 28, "_r": 28, "mathrm": 28, "setminus_r": 28, "mapsto": 28, "mid": 28, "_2": 28, "rightarrow": 28, "triangul": [28, 29], "domain": 28, "max_": 28, "backslash": 28, "node": 28, "quadratur": 28, "nodal": 28, "bar": [28, 31], "sum_": [28, 29], "w_": 28, "next": [28, 29], "smoothli": [28, 29], "approxim": [28, 29], "howev": [28, 30, 33], "l": 28, "logsumexp": 28, "sparsiti": 28, "subsequ": 28, "solv": [28, 29], "increas": [28, 31], "evalu": 28, "leverag": 28, "psi_": 28, "e_": 28, "text": 28, "x_2": 28, "v_": 28, "approx": 28, "subseteq": 28, "convex": 28, "region": 28, "estim": [28, 31], "while": [28, 31, 33], "remain": 28, "turn": 28, "nonconvex": 28, "direct": [28, 29], "summat": 28, "p_": 28, "w_x": 28, "cover": 28, "curv": [28, 32], "kei": 28, "cancel": 28, "minor": 28, "chang": [28, 30], "produc": 28, "consider": 28, "j": 28, "togeth": 28, "discuss": 28, "pressur": 28, "pa": 28, "That": [28, 29], "achiev": 28, "lr": 28, "equival": 28, "therefor": 28, "kappa": [28, 29], "young": 28, "modulu": 28, "rel": [28, 29], "mani": 28, "intent": 28, "treat": 28, "thin": 28, "consist": 28, "pick": 28, "choic": 28, "walk": 29, "bunni": [29, 33], "core": [29, 30], "igl": [29, 31, 33], "readobj": [29, 33], "meshio": [29, 33], "read": [29, 33], "cells_dict": [29, 33], "undeform": 29, "let": [29, 31], "squash": 29, "height": 29, "col": 29, "01": 29, "discard": 29, "contact_potenti": 29, "scalar": 29, "mathemat": [29, 31], "k": 29, "d_k": 29, "th": 29, "c2": 29, "clamp": 29, "contact_potential_grad": 29, "contact_potential_hess": 29, "These": 29, "dens": 29, "taken": 29, "wise": 29, "flatten": 29, "x_1": 29, "y_1": 29, "z_1": 29, "vdot": 29, "x_n": 29, "y_n": 29, "z_n": 29, "partial": 29, "ddot": 29, "last": [29, 31], "becom": 29, "too": 29, "grad_contact": 29, "world_bbox_diagonal_length": 29, "avg_mass": 29, "prev_dist": 29, "curr_dist": 29, "2021": [29, 31, 32], "offset": 29, "xi": 29, "d_": 29, "shell": 29, "cloth": 29, "field": 29, "entir": [29, 30], "global": 29, "friction_potenti": 29, "transit": 29, "backward": 29, "lambda_k": 29, "nf_0": 29, "t_k": 29, "tv": 29, "friction_potential_grad": 29, "friction_potential_hess": 29, "high": [29, 32], "incorpor": 29, "There": 29, "former": 29, "latter": 29, "max_step_s": 29, "collision_free_vertic": 29, "compris": 29, "quadrat": 29, "elimin": 29, "show": [29, 30, 33], "codebas": 29, "bvh": 29, "belgrod": [29, 32], "cuda": 29, "provabl": 29, "miss": 29, "accur": [29, 31], "rare": 29, "effici": 29, "is_collid": 29, "ab": 29, "np": [29, 31], "verifi": 30, "is_intersect": 30, "stdout": 30, "log_fil": 30, "txt": 30, "sink_ptr": 30, "sink": 30, "emplace_back": 30, "make_shar": 30, "stdout_color_sink_mt": 30, "basic_file_sink_mt": 30, "truncat": 30, "unfourtn": 30, "yet": 30, "set_level": 30, "significantli": 30, "expect": 30, "determinist": 30, "ad": 30, "global_control": 30, "thread_limit": 30, "max_allowed_parallel": 30, "stai": 30, "aliv": 30, "stack": 30, "goe": [30, 33], "program": 30, "default_concurr": 30, "els": 30, "attempt": 30, "persist": 30, "durat": 30, "until": 30, "reset": 30, "active_valu": 30, "max_nthread": 30, "introduc": 31, "context": 31, "earliest": 31, "rigid2dtrajectori": 31, "delta_transl": 31, "rotat": 31, "delta_rot": 31, "matrix2d": 31, "rotation2d": 31, "torotationmatrix": 31, "pi": 31, "def": 31, "theta": 31, "co": 31, "sin": 31, "linalg": 31, "dive": 31, "deeper": 31, "down": 31, "center": 31, "delta": 31, "angl": 31, "interi": 31, "frame": 31, "min_": 31, "underset": 31, "leq": 31, "adjust": 31, "practic": 31, "suffici": 31, "penetr": 31, "david": 32, "bolun": 32, "xin": 32, "zhao": 32, "marco": 32, "atten": 32, "dataset": 32, "scalabl": 32, "arxiv": 32, "2112": 32, "06300": 32, "pranav": 32, "jain": 32, "elastodynam": 32, "confer": 32, "proceed": 32, "23": 32, "york": 32, "ny": 32, "usa": 32, "machineri": 32, "zferg": 32, "research": 32, "francisca": 32, "gil": 32, "ureta": 32, "transact": 32, "graphic": 32, "io": 32, "2307": 32, "15908": 32, "octob": 32, "tight_inclus": 32, "principl": 33, "block": 33, "sever": 33, "job": 33, "often": 33, "reli": 33, "back": 33, "accordingli": 33, "tet": 33, "mshio": 33, "boundary_facet": 33, "is_on_surfac": 33, "node_posit": 33, "boundary_edg": 33, "msh": 33, "tetra": 33, "fortun": 33, "grad_ful": 33, "hess_ful": 33, "cannot": 33, "transfer": 33, "proxi": 33, "fe_rest_posit": 33, "proxy_rest_posit": 33, "proxy_edg": 33, "proxy_fac": 33, "Or": 33, "fe_mesh": 33, "proxy_mesh": 33, "fe_displac": 33, "similarli": 33, "contact_forc": 33, "potential_hessian": 33, "solut": 33, "pde": 33, "fe_posit": 33, "indefinit": 33, "problemat": 33, "newton": 33, "remedi": 33, "semidefinit": 33}, "objects": {"": [[5, 0, 1, "_CPPv4N3ipc4AABBE", "ipc::AABB", "Axis aligned bounding-box of some type."], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d", "ipc::AABB::AABB", ""], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB", "ipc::AABB::AABB", ""], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB", ""], [5, 1, 1, "_CPPv4N3ipc4AABB4AABBEv", "ipc::AABB::AABB", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB", "ipc::AABB::AABB::aabb1", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB::aabb1", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB", "ipc::AABB::AABB::aabb2", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB::aabb2", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB", "ipc::AABB::AABB::aabb3", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d", "ipc::AABB::AABB::max", ""], [5, 2, 2, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d", "ipc::AABB::AABB::min", ""], [5, 1, 1, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation", "Compute a conservative inflation of the AABB."], [5, 2, 2, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation::inflation_radius", "Compute a conservative inflation of the AABB."], [5, 2, 2, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation::max", "Compute a conservative inflation of the AABB."], [5, 2, 2, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd", "ipc::AABB::conservative_inflation::min", "Compute a conservative inflation of the AABB."], [5, 1, 1, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd", "ipc::AABB::from_point", "Construct an AABB for a static point."], [5, 1, 1, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd", "ipc::AABB::from_point", "Construct an AABB for a moving point (i.e."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd-p-inflation_radius", "ipc::AABB::from_point::inflation_radius", "Radius of a sphere around the point which the AABB encloses."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd-p-inflation_radius", "ipc::AABB::from_point::inflation_radius", "Radius of a capsule around the temporal edge which the AABB encloses."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd-p-p", "ipc::AABB::from_point::p", "The point's position."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd-p-p_t0", "ipc::AABB::from_point::p_t0", "The point's position at time t=0."], [5, 2, 2, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd-p-p_t1", "ipc::AABB::from_point::p_t1", "The point's position at time t=1."], [5, 1, 1, "_CPPv4NK3ipc4AABB10intersectsERK4AABB", "ipc::AABB::intersects", "Check if another AABB intersects with this one."], [5, 2, 2, "_CPPv4NK3ipc4AABB10intersectsERK4AABB-p-other", "ipc::AABB::intersects::other", "The other AABB."], [5, 3, 1, "_CPPv4N3ipc4AABB3maxE", "ipc::AABB::max", "Maximum corner of the AABB."], [5, 3, 1, "_CPPv4N3ipc4AABB3minE", "ipc::AABB::min", "Minimum corner of the AABB."], [5, 3, 1, "_CPPv4N3ipc4AABB10vertex_idsE", "ipc::AABB::vertex_ids", "Vertex IDs attached to the AABB."], [5, 0, 1, "_CPPv4N3ipc3BVHE", "ipc::BVH", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::BVH::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::BVH::build", "Build the broad phase for static collision detection."], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BVH::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BVH::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BVH::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BVH::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BVH::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BVH::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices", "ipc::BVH::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t0", "ipc::BVH::build::vertices_t0", "Starting vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t1", "ipc::BVH::build::vertices_t1", "Ending vertices of the vertices."], [5, 1, 1, "_CPPv4N3ipc3BVH5clearEv", "ipc::BVH::clear", "Clear any built data."], [5, 1, 1, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates", ""], [5, 4, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates::Candidate", ""], [5, 2, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates::boxes", ""], [5, 2, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates::bvh", ""], [5, 2, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates::can_collide", ""], [5, 2, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates::candidates", ""], [5, 5, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates::swap_order", ""], [5, 5, 2, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BVH::detect_candidates::triangular", ""], [5, 1, 1, "_CPPv4NK3ipc3BVH27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::BVH::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc3BVH27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::BVH::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc3BVH27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::BVH::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc3BVH27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::BVH::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc3BVH29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::BVH::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc3BVH29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::BVH::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc3BVH29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::BVH::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc3BVH29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::BVH::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc3BVH31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::BVH::detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc3BVH31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE-p-candidates", "ipc::BVH::detect_vertex_vertex_candidates::candidates", "[out] The candidate vertex-vertex collisions."], [5, 3, 1, "_CPPv4N3ipc3BVH8edge_bvhE", "ipc::BVH::edge_bvh", ""], [5, 3, 1, "_CPPv4N3ipc3BVH8face_bvhE", "ipc::BVH::face_bvh", ""], [5, 1, 1, "_CPPv4N3ipc3BVH8init_bvhERKNSt6vectorI4AABBEERN9SimpleBVH3BVHE", "ipc::BVH::init_bvh", ""], [5, 2, 2, "_CPPv4N3ipc3BVH8init_bvhERKNSt6vectorI4AABBEERN9SimpleBVH3BVHE", "ipc::BVH::init_bvh::boxes", ""], [5, 2, 2, "_CPPv4N3ipc3BVH8init_bvhERKNSt6vectorI4AABBEERN9SimpleBVH3BVHE", "ipc::BVH::init_bvh::bvh", ""], [5, 3, 1, "_CPPv4N3ipc3BVH10vertex_bvhE", "ipc::BVH::vertex_bvh", ""], [5, 0, 1, "_CPPv4N3ipc10BroadPhaseE", "ipc::BroadPhase", "Subclassed by ipc::BVH, ipc::BruteForce, ipc::CopyMeshBroadPhase, ipc::HashGrid, ipc::SpatialHash"], [5, 1, 1, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::BroadPhase::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::BroadPhase::build", "Build the broad phase for static collision detection."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BroadPhase::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::BroadPhase::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BroadPhase::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::BroadPhase::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BroadPhase::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-inflation_radius", "ipc::BroadPhase::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices", "ipc::BroadPhase::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t0", "ipc::BroadPhase::build::vertices_t0", "Starting vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-vertices_t1", "ipc::BroadPhase::build::vertices_t1", "Ending vertices of the vertices."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase21can_edge_face_collideE6size_t6size_t", "ipc::BroadPhase::can_edge_face_collide", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase21can_edge_face_collideE6size_t6size_t", "ipc::BroadPhase::can_edge_face_collide::ei", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase21can_edge_face_collideE6size_t6size_t", "ipc::BroadPhase::can_edge_face_collide::fi", ""], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase23can_edge_vertex_collideE6size_t6size_t", "ipc::BroadPhase::can_edge_vertex_collide", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase23can_edge_vertex_collideE6size_t6size_t", "ipc::BroadPhase::can_edge_vertex_collide::ei", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase23can_edge_vertex_collideE6size_t6size_t", "ipc::BroadPhase::can_edge_vertex_collide::vi", ""], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase17can_edges_collideE6size_t6size_t", "ipc::BroadPhase::can_edges_collide", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase17can_edges_collideE6size_t6size_t", "ipc::BroadPhase::can_edges_collide::eai", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase17can_edges_collideE6size_t6size_t", "ipc::BroadPhase::can_edges_collide::ebi", ""], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase23can_face_vertex_collideE6size_t6size_t", "ipc::BroadPhase::can_face_vertex_collide", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase23can_face_vertex_collideE6size_t6size_t", "ipc::BroadPhase::can_face_vertex_collide::fi", ""], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase23can_face_vertex_collideE6size_t6size_t", "ipc::BroadPhase::can_face_vertex_collide::vi", ""], [5, 3, 1, "_CPPv4N3ipc10BroadPhase20can_vertices_collideE", "ipc::BroadPhase::can_vertices_collide", "Function for determining if two vertices can collide."], [5, 1, 1, "_CPPv4N3ipc10BroadPhase5clearEv", "ipc::BroadPhase::clear", "Clear any built data."], [5, 1, 1, "_CPPv4N3ipc10BroadPhase28default_can_vertices_collideE6size_t6size_t", "ipc::BroadPhase::default_can_vertices_collide", ""], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates", "ipc::BroadPhase::detect_collision_candidates", "Detect all collision candidates needed for a given dimensional simulation."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates-p-candidates", "ipc::BroadPhase::detect_collision_candidates::candidates", "The detected collision candidates."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates-p-dim", "ipc::BroadPhase::detect_collision_candidates::dim", "The dimension of the simulation (i.e., 2 or 3)."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::BroadPhase::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::BroadPhase::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::BroadPhase::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::BroadPhase::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc10BroadPhase31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::BroadPhase::detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BroadPhase31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE-p-candidates", "ipc::BroadPhase::detect_vertex_vertex_candidates::candidates", "[out] The candidate vertex-vertex collisions."], [5, 3, 1, "_CPPv4N3ipc10BroadPhase10edge_boxesE", "ipc::BroadPhase::edge_boxes", ""], [5, 3, 1, "_CPPv4N3ipc10BroadPhase10face_boxesE", "ipc::BroadPhase::face_boxes", ""], [5, 1, 1, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod", "ipc::BroadPhase::make_broad_phase", "Construct a registered broad phase object."], [5, 2, 2, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod-p-method", "ipc::BroadPhase::make_broad_phase::method", "The broad phase method to use."], [5, 3, 1, "_CPPv4N3ipc10BroadPhase12vertex_boxesE", "ipc::BroadPhase::vertex_boxes", ""], [5, 1, 1, "_CPPv4N3ipc10BroadPhaseD0Ev", "ipc::BroadPhase::~BroadPhase", ""], [5, 6, 1, "_CPPv4N3ipc16BroadPhaseMethodE", "ipc::BroadPhaseMethod", "Enumeration of implemented broad phase methods."], [5, 7, 1, "_CPPv4N3ipc16BroadPhaseMethod11BRUTE_FORCEE", "ipc::BroadPhaseMethod::BRUTE_FORCE", ""], [5, 7, 1, "_CPPv4N3ipc16BroadPhaseMethod3BVHE", "ipc::BroadPhaseMethod::BVH", ""], [5, 7, 1, "_CPPv4N3ipc16BroadPhaseMethod9HASH_GRIDE", "ipc::BroadPhaseMethod::HASH_GRID", ""], [5, 7, 1, "_CPPv4N3ipc16BroadPhaseMethod11NUM_METHODSE", "ipc::BroadPhaseMethod::NUM_METHODS", ""], [5, 7, 1, "_CPPv4N3ipc16BroadPhaseMethod12SPATIAL_HASHE", "ipc::BroadPhaseMethod::SPATIAL_HASH", ""], [5, 7, 1, "_CPPv4N3ipc16BroadPhaseMethod23SWEEP_AND_TINIEST_QUEUEE", "ipc::BroadPhaseMethod::SWEEP_AND_TINIEST_QUEUE", ""], [5, 7, 1, "_CPPv4N3ipc16BroadPhaseMethod27SWEEP_AND_TINIEST_QUEUE_GPUE", "ipc::BroadPhaseMethod::SWEEP_AND_TINIEST_QUEUE_GPU", ""], [5, 0, 1, "_CPPv4N3ipc10BruteForceE", "ipc::BruteForce", "Find the candidate vertex-vertex collisions."], [5, 1, 1, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BruteForce::detect_candidates", ""], [5, 4, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BruteForce::detect_candidates::Candidate", ""], [5, 2, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BruteForce::detect_candidates::boxes0", ""], [5, 2, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BruteForce::detect_candidates::boxes1", ""], [5, 2, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BruteForce::detect_candidates::can_collide", ""], [5, 2, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BruteForce::detect_candidates::candidates", ""], [5, 5, 2, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::BruteForce::detect_candidates::triangular", ""], [5, 1, 1, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::BruteForce::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::BruteForce::detect_edge_edge_candidates::candidates", "Find the candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::BruteForce::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::BruteForce::detect_edge_face_candidates::candidates", "Find the candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::BruteForce::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::BruteForce::detect_edge_vertex_candidates::candidates", "Find the candidate edge-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::BruteForce::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::BruteForce::detect_face_vertex_candidates::candidates", "Find the candidate face-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc10BruteForce31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::BruteForce::detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc10BruteForce31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::BruteForce::detect_vertex_vertex_candidates::candidates", "Find the candidate vertex-vertex collisions."], [6, 0, 1, "_CPPv4N3ipc10CandidatesE", "ipc::Candidates", "Initialize the set of discrete collision detection candidates."], [6, 1, 1, "_CPPv4N3ipc10Candidates10CandidatesEv", "ipc::Candidates::Candidates", ""], [6, 1, 1, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod", "ipc::Candidates::build", "Initialize the set of discrete collision detection candidates."], [6, 1, 1, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod", "ipc::Candidates::build", "Initialize the set of continuous collision detection candidates."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::Candidates::build::broad_phase_method", "Broad phase method to use."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::Candidates::build::broad_phase_method", "Broad phase method to use."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-inflation_radius", "ipc::Candidates::build::inflation_radius", "Amount to inflate the bounding boxes."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-inflation_radius", "ipc::Candidates::build::inflation_radius", "Amount to inflate the bounding boxes."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-mesh", "ipc::Candidates::build::mesh", "The surface of the contact mesh."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-mesh", "ipc::Candidates::build::mesh", "The surface of the contact mesh."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices", "ipc::Candidates::build::vertices", "Surface vertex positions (rowwise)."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices_t0", "ipc::Candidates::build::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 2, 2, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod-p-vertices_t1", "ipc::Candidates::build::vertices_t1", "Surface vertex ending positions (rowwise)."], [6, 1, 1, "_CPPv4N3ipc10Candidates5clearEv", "ipc::Candidates::clear", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl", "ipc::Candidates::compute_cfl_stepsize", "Computes a CFL-inspired CCD maximum step step size."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl", "ipc::Candidates::compute_cfl_stepsize::broad_phase_method", "Computes a CFL-inspired CCD maximum step step size."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl-p-dhat", "ipc::Candidates::compute_cfl_stepsize::dhat", "Barrier activation distance."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl-p-max_iterations", "ipc::Candidates::compute_cfl_stepsize::max_iterations", "The maximum number of iterations for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl-p-mesh", "ipc::Candidates::compute_cfl_stepsize::mesh", "The collision mesh."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl-p-min_distance", "ipc::Candidates::compute_cfl_stepsize::min_distance", "The minimum distance allowable between any two elements."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl-p-tolerance", "ipc::Candidates::compute_cfl_stepsize::tolerance", "The tolerance for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl-p-vertices_t0", "ipc::Candidates::compute_cfl_stepsize::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 2, 2, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl-p-vertices_t1", "ipc::Candidates::compute_cfl_stepsize::vertices_t1", "Surface vertex ending positions (rowwise)."], [6, 1, 1, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl", "ipc::Candidates::compute_collision_free_stepsize", "Computes a maximal step size that is collision free using the set of collision candidates."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-max_iterations", "ipc::Candidates::compute_collision_free_stepsize::max_iterations", "The maximum number of iterations for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-mesh", "ipc::Candidates::compute_collision_free_stepsize::mesh", "The collision mesh."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-min_distance", "ipc::Candidates::compute_collision_free_stepsize::min_distance", "The minimum distance allowable between any two elements."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-tolerance", "ipc::Candidates::compute_collision_free_stepsize::tolerance", "The tolerance for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t0", "ipc::Candidates::compute_collision_free_stepsize::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 2, 2, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t1", "ipc::Candidates::compute_collision_free_stepsize::vertices_t1", "Surface vertex ending positions (rowwise)."], [6, 1, 1, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::Candidates::compute_noncandidate_conservative_stepsize", "Computes a conservative bound on the largest-feasible step size for surface primitives not in contact."], [6, 2, 2, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::Candidates::compute_noncandidate_conservative_stepsize::dhat", "Barrier activation distance."], [6, 2, 2, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-displacements", "ipc::Candidates::compute_noncandidate_conservative_stepsize::displacements", "Surface vertex displacements (rowwise)."], [6, 2, 2, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::Candidates::compute_noncandidate_conservative_stepsize::mesh", "The collision mesh."], [6, 3, 1, "_CPPv4N3ipc10Candidates13ee_candidatesE", "ipc::Candidates::ee_candidates", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates5emptyEv", "ipc::Candidates::empty", ""], [6, 3, 1, "_CPPv4N3ipc10Candidates13ev_candidatesE", "ipc::Candidates::ev_candidates", ""], [6, 3, 1, "_CPPv4N3ipc10Candidates13fv_candidatesE", "ipc::Candidates::fv_candidates", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl", "ipc::Candidates::is_step_collision_free", "Determine if the step is collision free from the set of candidates."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-max_iterations", "ipc::Candidates::is_step_collision_free::max_iterations", "The maximum number of iterations for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-mesh", "ipc::Candidates::is_step_collision_free::mesh", "The collision mesh."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-min_distance", "ipc::Candidates::is_step_collision_free::min_distance", "The minimum distance allowable between any two elements."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-tolerance", "ipc::Candidates::is_step_collision_free::tolerance", "The tolerance for the CCD algorithm."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t0", "ipc::Candidates::is_step_collision_free::vertices_t0", "Surface vertex starting positions (rowwise)."], [6, 2, 2, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl-p-vertices_t1", "ipc::Candidates::is_step_collision_free::vertices_t1", "Surface vertex ending positions (rowwise)."], [6, 1, 1, "_CPPv4N3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]", ""], [6, 1, 1, "_CPPv4NK3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]", ""], [6, 2, 2, "_CPPv4N3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]::idx", ""], [6, 2, 2, "_CPPv4NK3ipc10CandidatesixE6size_t", "ipc::Candidates::operator[]::idx", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::edges", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::faces", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::filename", ""], [6, 2, 2, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::Candidates::save_obj::vertices", ""], [6, 1, 1, "_CPPv4NK3ipc10Candidates4sizeEv", "ipc::Candidates::size", ""], [6, 3, 1, "_CPPv4N3ipc10Candidates13vv_candidatesE", "ipc::Candidates::vv_candidates", ""], [8, 0, 1, "_CPPv4N3ipc19CollisionConstraintE", "ipc::CollisionConstraint", "Inheritence diagram for ipc::CollisionConstraint:"], [8, 1, 1, "_CPPv4N3ipc19CollisionConstraint19CollisionConstraintEKdRKN5Eigen12SparseVectorIdEE", "ipc::CollisionConstraint::CollisionConstraint", ""], [8, 1, 1, "_CPPv4N3ipc19CollisionConstraint19CollisionConstraintEv", "ipc::CollisionConstraint::CollisionConstraint", ""], [8, 2, 2, "_CPPv4N3ipc19CollisionConstraint19CollisionConstraintEKdRKN5Eigen12SparseVectorIdEE", "ipc::CollisionConstraint::CollisionConstraint::weight", ""], [8, 2, 2, "_CPPv4N3ipc19CollisionConstraint19CollisionConstraintEKdRKN5Eigen12SparseVectorIdEE", "ipc::CollisionConstraint::CollisionConstraint::weight_gradient", ""], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::edges", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::faces", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::edges", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::faces", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_potential_gradient::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::edges", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::faces", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::project_hessian_to_psd", ""], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::CollisionConstraint::compute_potential_hessian::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative", "Compute the derivative of the potential gradient wrt the shape."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative::dhat", "Compute the derivative of the potential gradient wrt the shape."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative::edges", "Compute the derivative of the potential gradient wrt the shape."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative::faces", "Compute the derivative of the potential gradient wrt the shape."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative::rest_positions", "Compute the derivative of the potential gradient wrt the shape."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative::triplets", "Compute the derivative of the potential gradient wrt the shape."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative::vertices", "Compute the derivative of the potential gradient wrt the shape."], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative_first_term", "Compute (\u2207\u2093w)(\u2207\u1d64b)\u1d40"], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative_first_term::dhat", "Compute (\u2207\u2093w)(\u2207\u1d64b)\u1d40"], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative_first_term::edges", "Compute (\u2207\u2093w)(\u2207\u1d64b)\u1d40"], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative_first_term::faces", "Compute (\u2207\u2093w)(\u2207\u1d64b)\u1d40"], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative_first_term::rest_positions", "Compute (\u2207\u2093w)(\u2207\u1d64b)\u1d40"], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative_first_term::triplets", "Compute (\u2207\u2093w)(\u2207\u1d64b)\u1d40"], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE", "ipc::CollisionConstraint::compute_shape_derivative_first_term::vertices", "Compute (\u2207\u2093w)(\u2207\u1d64b)\u1d40"], [8, 1, 1, "_CPPv4NK3ipc19CollisionConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_shape_derivative_second_term", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_shape_derivative_second_term::dhat", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_shape_derivative_second_term::edges", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_shape_derivative_second_term::faces", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_shape_derivative_second_term::rest_positions", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc19CollisionConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::CollisionConstraint::compute_shape_derivative_second_term::vertices", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 3, 1, "_CPPv4N3ipc19CollisionConstraint4dminE", "ipc::CollisionConstraint::dmin", ""], [8, 3, 1, "_CPPv4N3ipc19CollisionConstraint6weightE", "ipc::CollisionConstraint::weight", ""], [8, 3, 1, "_CPPv4N3ipc19CollisionConstraint15weight_gradientE", "ipc::CollisionConstraint::weight_gradient", ""], [8, 1, 1, "_CPPv4N3ipc19CollisionConstraintD0Ev", "ipc::CollisionConstraint::~CollisionConstraint", ""], [8, 0, 1, "_CPPv4N3ipc20CollisionConstraintsE", "ipc::CollisionConstraints", "Initialize the set of constraints used to compute the barrier potential."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints20CollisionConstraintsEv", "ipc::CollisionConstraints::CollisionConstraints", ""], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints29are_shape_derivatives_enabledEv", "ipc::CollisionConstraints::are_shape_derivatives_enabled", "Get if the collision constraints are using the convergent formulation."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd", "ipc::CollisionConstraints::build", "Initialize the set of constraints used to compute the barrier potential."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod", "ipc::CollisionConstraints::build", "Initialize the set of constraints used to compute the barrier potential."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-broad_phase_method", "ipc::CollisionConstraints::build::broad_phase_method", "Broad-phase method to use."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-candidates", "ipc::CollisionConstraints::build::candidates", "Distance candidates from which the constraint set is built."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-dhat", "ipc::CollisionConstraints::build::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-dhat", "ipc::CollisionConstraints::build::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-dmin", "ipc::CollisionConstraints::build::dmin", "Minimum distance."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-dmin", "ipc::CollisionConstraints::build::dmin", "Minimum distance."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-mesh", "ipc::CollisionConstraints::build::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-mesh", "ipc::CollisionConstraints::build::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd-p-vertices", "ipc::CollisionConstraints::build::vertices", "Vertices of the collision mesh."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod-p-vertices", "ipc::CollisionConstraints::build::vertices", "Vertices of the collision mesh."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints5clearEv", "ipc::CollisionConstraints::clear", "Clear the collision constraints."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE", "ipc::CollisionConstraints::compute_minimum_distance", "Computes the minimum distance between any non-adjacent elements."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-mesh", "ipc::CollisionConstraints::compute_minimum_distance::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE-p-vertices", "ipc::CollisionConstraints::compute_minimum_distance::vertices", "Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::CollisionConstraints::compute_potential", "Compute the barrier potential for a given constraint set."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::CollisionConstraints::compute_potential::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::CollisionConstraints::compute_potential::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-vertices", "ipc::CollisionConstraints::compute_potential::vertices", "Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::CollisionConstraints::compute_potential_gradient", "Compute the gradient of the barrier potential."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::CollisionConstraints::compute_potential_gradient::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::CollisionConstraints::compute_potential_gradient::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-vertices", "ipc::CollisionConstraints::compute_potential_gradient::vertices", "Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb", "ipc::CollisionConstraints::compute_potential_hessian", "Compute the hessian of the barrier potential."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-dhat", "ipc::CollisionConstraints::compute_potential_hessian::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-mesh", "ipc::CollisionConstraints::compute_potential_hessian::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-project_hessian_to_psd", "ipc::CollisionConstraints::compute_potential_hessian::project_hessian_to_psd", "Make sure the hessian is positive semi-definite."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-vertices", "ipc::CollisionConstraints::compute_potential_hessian::vertices", "Vertices of the collision mesh."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::CollisionConstraints::compute_shape_derivative", "Compute the barrier shape derivative."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-dhat", "ipc::CollisionConstraints::compute_shape_derivative::dhat", "The activation distance of the barrier."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::CollisionConstraints::compute_shape_derivative::mesh", "The collision mesh."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-vertices", "ipc::CollisionConstraints::compute_shape_derivative::vertices", "Vertices of the collision mesh."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14ee_constraintsE", "ipc::CollisionConstraints::ee_constraints", ""], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints5emptyEv", "ipc::CollisionConstraints::empty", "Get if the collision constraints are empty."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14ev_constraintsE", "ipc::CollisionConstraints::ev_constraints", ""], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14fv_constraintsE", "ipc::CollisionConstraints::fv_constraints", ""], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints12is_edge_edgeE6size_t", "ipc::CollisionConstraints::is_edge_edge", "Get if the constraint at idx is an edge-edge constraint."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints12is_edge_edgeE6size_t-p-idx", "ipc::CollisionConstraints::is_edge_edge::idx", "The index of the constraint."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints14is_edge_vertexE6size_t", "ipc::CollisionConstraints::is_edge_vertex", "Get if the constraint at idx is an edge-vertex constraint."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints14is_edge_vertexE6size_t-p-idx", "ipc::CollisionConstraints::is_edge_vertex::idx", "The index of the constraint."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints14is_face_vertexE6size_t", "ipc::CollisionConstraints::is_face_vertex", "Get if the constraint at idx is an face-vertex constraint."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints14is_face_vertexE6size_t-p-idx", "ipc::CollisionConstraints::is_face_vertex::idx", "The index of the constraint."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints15is_plane_vertexE6size_t", "ipc::CollisionConstraints::is_plane_vertex", "Get if the constraint at idx is an plane-vertex constraint."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints15is_plane_vertexE6size_t-p-idx", "ipc::CollisionConstraints::is_plane_vertex::idx", "The index of the constraint."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints16is_vertex_vertexE6size_t", "ipc::CollisionConstraints::is_vertex_vertex", "Get if the constraint at idx is a vertex-vertex constraint."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints16is_vertex_vertexE6size_t-p-idx", "ipc::CollisionConstraints::is_vertex_vertex::idx", "The index of the constraint."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints31m_are_shape_derivatives_enabledE", "ipc::CollisionConstraints::m_are_shape_derivatives_enabled", ""], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints28m_use_convergent_formulationE", "ipc::CollisionConstraints::m_use_convergent_formulation", ""], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraintsixE6size_t", "ipc::CollisionConstraints::operator[]", "Get a reference to constriant idx."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraintsixE6size_t", "ipc::CollisionConstraints::operator[]", "Get a const reference to constriant idx."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraintsixE6size_t-p-idx", "ipc::CollisionConstraints::operator[]::idx", "The index of the constraint."], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraintsixE6size_t-p-idx", "ipc::CollisionConstraints::operator[]::idx", "The index of the constraint."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14pv_constraintsE", "ipc::CollisionConstraints::pv_constraints", ""], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints33set_are_shape_derivatives_enabledEKb", "ipc::CollisionConstraints::set_are_shape_derivatives_enabled", "Set if the collision constraints should enable shape derivative computation."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints33set_are_shape_derivatives_enabledEKb-p-are_shape_derivatives_enabled", "ipc::CollisionConstraints::set_are_shape_derivatives_enabled::are_shape_derivatives_enabled", "If the collision constraints should enable shape derivative computation."], [8, 1, 1, "_CPPv4N3ipc20CollisionConstraints30set_use_convergent_formulationEKb", "ipc::CollisionConstraints::set_use_convergent_formulation", "Set if the collision constraints should use the convergent formulation."], [8, 2, 2, "_CPPv4N3ipc20CollisionConstraints30set_use_convergent_formulationEKb-p-use_convergent_formulation", "ipc::CollisionConstraints::set_use_convergent_formulation::use_convergent_formulation", "If the collision constraints should use the convergent formulation."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints4sizeEv", "ipc::CollisionConstraints::size", "Get the number of collision constraints."], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints9to_stringERK13CollisionMeshRKN5Eigen8MatrixXdE", "ipc::CollisionConstraints::to_string", ""], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints9to_stringERK13CollisionMeshRKN5Eigen8MatrixXdE", "ipc::CollisionConstraints::to_string::mesh", ""], [8, 2, 2, "_CPPv4NK3ipc20CollisionConstraints9to_stringERK13CollisionMeshRKN5Eigen8MatrixXdE", "ipc::CollisionConstraints::to_string::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc20CollisionConstraints26use_convergent_formulationEv", "ipc::CollisionConstraints::use_convergent_formulation", "Get if the collision constraints should use the convergent formulation."], [8, 3, 1, "_CPPv4N3ipc20CollisionConstraints14vv_constraintsE", "ipc::CollisionConstraints::vv_constraints", ""], [9, 0, 1, "_CPPv4N3ipc13CollisionMeshE", "ipc::CollisionMesh", "A class for encapsolating the transformation/selections needed to go from a volumetric FE mesh to a surface collision mesh."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object directly from the collision mesh vertices."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object from a full mesh vertices."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh13CollisionMeshEv", "ipc::CollisionMesh::CollisionMesh", "Construct a new Collision Mesh object."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-displacement_map", "ipc::CollisionMesh::CollisionMesh::displacement_map", "The displacement mapping from displacements on the full mesh to the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh (#E \u00d7 2)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-edges", "ipc::CollisionMesh::CollisionMesh::edges", "The edges of the collision mesh indexed into the full mesh vertices (#E \u00d7 2)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh (#F \u00d7 3)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-faces", "ipc::CollisionMesh::CollisionMesh::faces", "The faces of the collision mesh indexed into the full mesh vertices (#F \u00d7 3)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-full_rest_positions", "ipc::CollisionMesh::CollisionMesh::full_rest_positions", "The vertices of the full mesh at rest (#V \u00d7 dim)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-include_vertex", "ipc::CollisionMesh::CollisionMesh::include_vertex", "Vector of bools indicating whether each vertex should be included in the collision mesh."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE-p-rest_positions", "ipc::CollisionMesh::CollisionMesh::rest_positions", "The vertices of the collision mesh at rest (#V \u00d7 dim)."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh27are_adjacencies_initializedEv", "ipc::CollisionMesh::are_adjacencies_initialized", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh30are_area_jacobians_initializedEv", "ipc::CollisionMesh::are_area_jacobians_initialized", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionMesh::build_from_full_mesh", "Helper function that automatically builds include_vertex using construct_is_on_surface."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::build_from_full_mesh::edges", "The edge matrix of mesh (#E \u00d7 2)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::build_from_full_mesh::faces", "The face matrix of mesh (#F \u00d7 3)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-full_rest_positions", "ipc::CollisionMesh::build_from_full_mesh::full_rest_positions", "The full vertices at rest (#FV \u00d7 dim)."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh11can_collideE", "ipc::CollisionMesh::can_collide", "A function that takes two vertex IDs and returns true if the vertices (and faces or edges containing the vertices) can collide."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh14codim_verticesEv", "ipc::CollisionMesh::codim_vertices", "Get the indices of codimensional vertices of the collision mesh (#CV x 1)."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionMesh::construct_faces_to_edges", "Construct a matrix that maps from the faces' edges to rows in the edges matrix."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionMesh::construct_faces_to_edges::edges", "The edge matrix of mesh (#E \u00d7 2)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionMesh::construct_faces_to_edges::faces", "The face matrix of mesh (#F \u00d7 3)."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE", "ipc::CollisionMesh::construct_is_on_surface", "Construct a vector of bools indicating whether each vertex is on the surface."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE-p-codim_vertices", "ipc::CollisionMesh::construct_is_on_surface::codim_vertices", "The indices of codimensional vertices (#CV x 1)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE-p-edges", "ipc::CollisionMesh::construct_is_on_surface::edges", "The surface edges of the mesh (#E \u00d7 2)."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE-p-num_vertices", "ipc::CollisionMesh::construct_is_on_surface::num_vertices", "The number of vertices in the mesh."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh19default_can_collideE6size_t6size_t", "ipc::CollisionMesh::default_can_collide", "By default all primitives can collide with all other primitives."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh3dimEv", "ipc::CollisionMesh::dim", "Get the dimension of the mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::displace_vertices", "Compute the vertex positions from vertex displacements on the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::displace_vertices::full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t", "ipc::CollisionMesh::edge_area", "Get the barycentric area of an edge."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t-p-ei", "ipc::CollisionMesh::edge_area::ei", "Edge ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t", "ipc::CollisionMesh::edge_area_gradient", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t-p-ei", "ipc::CollisionMesh::edge_area_gradient::ei", "Edge ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh10edge_areasEv", "ipc::CollisionMesh::edge_areas", "Get the barycentric area of the edges."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh23edge_vertex_adjacenciesEv", "ipc::CollisionMesh::edge_vertex_adjacencies", "Get the edge-vertex adjacency matrix."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh5edgesEv", "ipc::CollisionMesh::edges", "Get the edges of the collision mesh (#E \u00d7 2)."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh5facesEv", "ipc::CollisionMesh::faces", "Get the faces of the collision mesh (#F \u00d7 3)."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh14faces_to_edgesEv", "ipc::CollisionMesh::faces_to_edges", "Get the mapping from faces to edges of the collision mesh (#F \u00d7 3)."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9full_ndofEv", "ipc::CollisionMesh::full_ndof", "Get the number of degrees of freedom in the full mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17full_num_verticesEv", "ipc::CollisionMesh::full_num_vertices", "Get the number of vertices in the full mesh."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh16init_adjacenciesEv", "ipc::CollisionMesh::init_adjacencies", "Initialize vertex-vertex and edge-vertex adjacencies."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh19init_area_jacobiansEv", "ipc::CollisionMesh::init_area_jacobians", "Initialize vertex and edge areas."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh10init_areasEv", "ipc::CollisionMesh::init_areas", "Initialize vertex and edge areas."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh19init_codim_verticesEv", "ipc::CollisionMesh::init_codim_vertices", ""], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh23init_selection_matricesEKi", "ipc::CollisionMesh::init_selection_matrices", "Initialize the selection matrix from full vertices/DOF to collision vertices/DOF."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh23init_selection_matricesEKi", "ipc::CollisionMesh::init_selection_matrices::dim", "Initialize the selection matrix from full vertices/DOF to collision vertices/DOF."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi", "ipc::CollisionMesh::is_vertex_on_boundary", "Is a vertex on the boundary of the collision mesh?"], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi-p-vi", "ipc::CollisionMesh::is_vertex_on_boundary::vi", "Vertex ID."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh16m_codim_verticesE", "ipc::CollisionMesh::m_codim_vertices", "The indices of codimensional vertices (#CV x 1)."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh22m_displacement_dof_mapE", "ipc::CollisionMesh::m_displacement_dof_map", "Mapping from full displacements to collision displacements."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh18m_displacement_mapE", "ipc::CollisionMesh::m_displacement_map", "Mapping from full displacements to collision displacements."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh20m_edge_area_jacobianE", "ipc::CollisionMesh::m_edge_area_jacobian", "The rows of the Jacobian of the edge areas vector."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh12m_edge_areasE", "ipc::CollisionMesh::m_edge_areas", "Edge areas 3D: 1/3 sum of area of connected triangles."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh25m_edge_vertex_adjacenciesE", "ipc::CollisionMesh::m_edge_vertex_adjacencies", "Vertices adjacent to edges."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh7m_edgesE", "ipc::CollisionMesh::m_edges", "Edges as rows of indicies into vertices (#E \u00d7 2)."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh7m_facesE", "ipc::CollisionMesh::m_faces", "Triangular faces as rows of indicies into vertices (#F \u00d7 3)."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh16m_faces_to_edgesE", "ipc::CollisionMesh::m_faces_to_edges", "Map from faces edges to rows of edges (#F \u00d7 3)."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh21m_full_rest_positionsE", "ipc::CollisionMesh::m_full_rest_positions", "The full vertex positions at rest (#FV \u00d7 dim)."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh23m_full_vertex_to_vertexE", "ipc::CollisionMesh::m_full_vertex_to_vertex", "Map from full vertices to collision vertices."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh23m_is_vertex_on_boundaryE", "ipc::CollisionMesh::m_is_vertex_on_boundary", "Is vertex on the boundary of the triangle mesh in 3D or polyline in 2D?"], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh16m_rest_positionsE", "ipc::CollisionMesh::m_rest_positions", "The vertex positions at rest (#V \u00d7 dim)."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh12m_select_dofE", "ipc::CollisionMesh::m_select_dof", "Selection matrix S \u2208 \u211d^{collision\u00d7full} for DOF."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh17m_select_verticesE", "ipc::CollisionMesh::m_select_vertices", "Selection matrix S \u2208 \u211d^{collision\u00d7full} for vertices."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh22m_vertex_area_jacobianE", "ipc::CollisionMesh::m_vertex_area_jacobian", "The rows of the Jacobian of the vertex areas vector."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh14m_vertex_areasE", "ipc::CollisionMesh::m_vertex_areas", "Vertex areas 2D: 1/2 sum of length of connected edges 3D: 1/3 sum of area of connected triangles."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh25m_vertex_edge_adjacenciesE", "ipc::CollisionMesh::m_vertex_edge_adjacencies", "Edges adjacent to vertices."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh23m_vertex_to_full_vertexE", "ipc::CollisionMesh::m_vertex_to_full_vertex", "Map from collision vertices to full vertices."], [9, 3, 1, "_CPPv4N3ipc13CollisionMesh27m_vertex_vertex_adjacenciesE", "ipc::CollisionMesh::m_vertex_vertex_adjacencies", "Vertices adjacent to vertices."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::map_displacements", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE-p-full_displacements", "ipc::CollisionMesh::map_displacements::full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh4ndofEv", "ipc::CollisionMesh::ndof", "Get the number of degrees of freedom in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh18num_codim_verticesEv", "ipc::CollisionMesh::num_codim_vertices", "Get the number of codimensional vertices in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9num_edgesEv", "ipc::CollisionMesh::num_edges", "Get the number of edges in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh9num_facesEv", "ipc::CollisionMesh::num_faces", "Get the number of faces in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh12num_verticesEv", "ipc::CollisionMesh::num_vertices", "Get the number of vertices in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh14rest_positionsEv", "ipc::CollisionMesh::rest_positions", "Get the vertices of the collision mesh at rest (#V \u00d7 dim)."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE", "ipc::CollisionMesh::to_full_dof", "Map a matrix quantity on the collision mesh to the full mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE", "ipc::CollisionMesh::to_full_dof", "Map a vector quantity on the collision mesh to the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE-p-X", "ipc::CollisionMesh::to_full_dof::X", "Matrix quantity on the collision mesh with size equal to ndof() \u00d7 ndof()."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE-p-x", "ipc::CollisionMesh::to_full_dof::x", "Vector quantity on the collision mesh with size equal to ndof()."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t", "ipc::CollisionMesh::to_full_vertex_id", "Map a vertex ID to the corresponding vertex ID in the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t-p-id", "ipc::CollisionMesh::to_full_vertex_id::id", "Vertex ID in the collision mesh."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t", "ipc::CollisionMesh::vertex_area", "Get the barycentric area of a vertex."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area::vi", "Vertex ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t", "ipc::CollisionMesh::vertex_area_gradient", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t-p-vi", "ipc::CollisionMesh::vertex_area_gradient::vi", "Vertex ID."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh12vertex_areasEv", "ipc::CollisionMesh::vertex_areas", "Get the barycentric area of the vertices."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh23vertex_edge_adjacenciesEv", "ipc::CollisionMesh::vertex_edge_adjacencies", "Get the vertex-edge adjacency matrix."], [9, 1, 1, "_CPPv4N3ipc13CollisionMesh27vertex_matrix_to_dof_matrixERKN5Eigen12SparseMatrixIdEEi", "ipc::CollisionMesh::vertex_matrix_to_dof_matrix", "Convert a matrix meant for M_V * vertices to M_dof * x by duplicating the entries dim times."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh27vertex_matrix_to_dof_matrixERKN5Eigen12SparseMatrixIdEEi", "ipc::CollisionMesh::vertex_matrix_to_dof_matrix::M_V", "Convert a matrix meant for M_V * vertices to M_dof * x by duplicating the entries dim times."], [9, 2, 2, "_CPPv4N3ipc13CollisionMesh27vertex_matrix_to_dof_matrixERKN5Eigen12SparseMatrixIdEEi", "ipc::CollisionMesh::vertex_matrix_to_dof_matrix::dim", "Convert a matrix meant for M_V * vertices to M_dof * x by duplicating the entries dim times."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh25vertex_vertex_adjacenciesEv", "ipc::CollisionMesh::vertex_vertex_adjacencies", "Get the vertex-vertex adjacency matrix."], [9, 1, 1, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE", "ipc::CollisionMesh::vertices", "Compute the vertex positions from the positions of the full mesh."], [9, 2, 2, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE-p-full_positions", "ipc::CollisionMesh::vertices::full_positions", "The vertex positions of the full mesh (#FV \u00d7 dim)."], [9, 1, 1, "_CPPv4N3ipc13CollisionMeshD0Ev", "ipc::CollisionMesh::~CollisionMesh", "Destroy the Collision Mesh object."], [6, 0, 1, "_CPPv4N3ipc16CollisionStencilE", "ipc::CollisionStencil", "A stencil representing a collision between at most four vertices."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERK12VectorMax12d", "ipc::CollisionStencil::compute_distance", "Compute the distance of the stencil."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::compute_distance", "Compute the distance of the stencil."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::compute_distance::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::compute_distance::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERK12VectorMax12d-p-positions", "ipc::CollisionStencil::compute_distance::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::compute_distance::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERK12VectorMax12d", "ipc::CollisionStencil::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::compute_distance_gradient::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::compute_distance_gradient::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERK12VectorMax12d-p-positions", "ipc::CollisionStencil::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::compute_distance_gradient::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERK12VectorMax12d", "ipc::CollisionStencil::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::compute_distance_hessian::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::compute_distance_hessian::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERK12VectorMax12d-p-positions", "ipc::CollisionStencil::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::compute_distance_hessian::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::dof", "Select this stencil's DOF from the full matrix of DOF."], [6, 4, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-T", "ipc::CollisionStencil::dof::T", "Type of the DOF"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-X", "ipc::CollisionStencil::dof::X", "Full matrix of DOF (rowwise)."], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::dof::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::dof::faces", "Collision mesh faces"], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil12num_verticesEv", "ipc::CollisionStencil::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::vertex_ids::faces", "Collision mesh faces"], [6, 1, 1, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::CollisionStencil::vertices", "Get the vertex attributes of the contact stencil."], [6, 4, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-T", "ipc::CollisionStencil::vertices::T", "Type of the attributes"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::CollisionStencil::vertices::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::CollisionStencil::vertices::faces", "Collision mesh faces"], [6, 2, 2, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::CollisionStencil::vertices::vertices", "Vertex attributes"], [6, 1, 1, "_CPPv4N3ipc16CollisionStencilD0Ev", "ipc::CollisionStencil::~CollisionStencil", ""], [6, 0, 1, "_CPPv4N3ipc28ContinuousCollisionCandidateE", "ipc::ContinuousCollisionCandidate", "Virtual class for candidates that support CCD."], [6, 1, 1, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd", ""], [6, 1, 1, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::conservative_rescaling", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::ContinuousCollisionCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::ContinuousCollisionCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::ContinuousCollisionCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::max_iterations", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::ContinuousCollisionCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::min_distance", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-min_distance", "ipc::ContinuousCollisionCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::tmax", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::ContinuousCollisionCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::toi", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::ContinuousCollisionCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::tolerance", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::ContinuousCollisionCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::ContinuousCollisionCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::ContinuousCollisionCandidate::ccd::vertices_t1", ""], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::ContinuousCollisionCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 1, 1, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::ContinuousCollisionCandidate::write_ccd_query", "Write the CCD query to a stream."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::ContinuousCollisionCandidate::write_ccd_query::edges", "Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::ContinuousCollisionCandidate::write_ccd_query::faces", "Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-out", "ipc::ContinuousCollisionCandidate::write_ccd_query::out", "Stream to write to."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t0", "ipc::ContinuousCollisionCandidate::write_ccd_query::vertices_t0", "Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t1", "ipc::ContinuousCollisionCandidate::write_ccd_query::vertices_t1", "Mesh vertices at the end of the time step."], [6, 1, 1, "_CPPv4N3ipc28ContinuousCollisionCandidateD0Ev", "ipc::ContinuousCollisionCandidate::~ContinuousCollisionCandidate", ""], [5, 3, 1, "_CPPv4N3ipc26DEFAULT_BROAD_PHASE_METHODE", "ipc::DEFAULT_BROAD_PHASE_METHOD", ""], [7, 3, 1, "_CPPv4N3ipc34DEFAULT_CCD_CONSERVATIVE_RESCALINGE", "ipc::DEFAULT_CCD_CONSERVATIVE_RESCALING", "The default conservative rescaling value used to avoid taking steps exactly to impact."], [7, 3, 1, "_CPPv4N3ipc26DEFAULT_CCD_MAX_ITERATIONSE", "ipc::DEFAULT_CCD_MAX_ITERATIONS", "The default maximum number of iterations used with Tight-Inclusion CCD."], [7, 3, 1, "_CPPv4N3ipc21DEFAULT_CCD_TOLERANCEE", "ipc::DEFAULT_CCD_TOLERANCE", "The default tolerance used with Tight-Inclusion CCD."], [6, 0, 1, "_CPPv4N3ipc17EdgeEdgeCandidateE", "ipc::EdgeEdgeCandidate", "Subclassed by ipc::EdgeEdgeConstraint, ipc::EdgeEdgeFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue", ""], [6, 4, 2, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue::ee", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll", "ipc::EdgeEdgeCandidate::EdgeEdgeCandidate", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll", "ipc::EdgeEdgeCandidate::EdgeEdgeCandidate::edge0_id", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll", "ipc::EdgeEdgeCandidate::EdgeEdgeCandidate::edge1_id", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::conservative_rescaling", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::EdgeEdgeCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::EdgeEdgeCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::EdgeEdgeCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::max_iterations", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::EdgeEdgeCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::min_distance", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-min_distance", "ipc::EdgeEdgeCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::tmax", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::EdgeEdgeCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::toi", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::EdgeEdgeCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::tolerance", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::EdgeEdgeCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::EdgeEdgeCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeEdgeCandidate::ccd::vertices_t1", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::EdgeEdgeCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERK12VectorMax12d", "ipc::EdgeEdgeCandidate::compute_distance", "Compute the distance of the stencil."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::compute_distance", "Compute the distance of the stencil."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeEdgeCandidate::compute_distance::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeEdgeCandidate::compute_distance::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::EdgeEdgeCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::EdgeEdgeCandidate::compute_distance::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERK12VectorMax12d", "ipc::EdgeEdgeCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeEdgeCandidate::compute_distance_gradient::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeEdgeCandidate::compute_distance_gradient::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::EdgeEdgeCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::EdgeEdgeCandidate::compute_distance_gradient::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERK12VectorMax12d", "ipc::EdgeEdgeCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeEdgeCandidate::compute_distance_hessian::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeEdgeCandidate::compute_distance_hessian::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::EdgeEdgeCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::EdgeEdgeCandidate::compute_distance_hessian::vertices", "Collision mesh vertex positions."], [6, 3, 1, "_CPPv4N3ipc17EdgeEdgeCandidate8edge0_idE", "ipc::EdgeEdgeCandidate::edge0_id", "ID of the first edge."], [6, 3, 1, "_CPPv4N3ipc17EdgeEdgeCandidate8edge1_idE", "ipc::EdgeEdgeCandidate::edge1_id", "ID of the second edge."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate11known_dtypeEv", "ipc::EdgeEdgeCandidate::known_dtype", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate12num_verticesEv", "ipc::EdgeEdgeCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidateneERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidateneERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidateltERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator&lt;", "Compare EdgeEdgeCandidates for sorting."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidateltERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator&lt;::other", "Compare EdgeEdgeCandidates for sorting."], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidateeqERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidateeqERK17EdgeEdgeCandidate", "ipc::EdgeEdgeCandidate::operator==::other", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeEdgeCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeEdgeCandidate::vertex_ids::faces", "Collision mesh faces"], [6, 1, 1, "_CPPv4NK3ipc17EdgeEdgeCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeEdgeCandidate::write_ccd_query", "Write the CCD query to a stream."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeEdgeCandidate::write_ccd_query::edges", "Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeEdgeCandidate::write_ccd_query::faces", "Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-out", "ipc::EdgeEdgeCandidate::write_ccd_query::out", "Stream to write to."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t0", "ipc::EdgeEdgeCandidate::write_ccd_query::vertices_t0", "Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc17EdgeEdgeCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t1", "ipc::EdgeEdgeCandidate::write_ccd_query::vertices_t1", "Mesh vertices at the end of the time step."], [8, 0, 1, "_CPPv4N3ipc18EdgeEdgeConstraintE", "ipc::EdgeEdgeConstraint", "Inheritence diagram for ipc::EdgeEdgeConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue", ""], [8, 4, 2, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue::ee", ""], [8, 2, 2, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::AbslHashValue::h", ""], [8, 1, 1, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint", ""], [8, 1, 1, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint", ""], [8, 1, 1, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidateKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidateKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::candidate", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::dtype", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::dtype", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidateKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::dtype", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::edge0_id", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::edge0_id", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::edge1_id", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::edge1_id", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::eps_x", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::eps_x", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidateKdK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::eps_x", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::weight", ""], [8, 2, 2, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType", "ipc::EdgeEdgeConstraint::EdgeEdgeConstraint::weight_gradient", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::edges", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::faces", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::edges", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::faces", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_potential_gradient::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::dhat", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::edges", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::faces", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::project_hessian_to_psd", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::EdgeEdgeConstraint::compute_potential_hessian::vertices", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_shape_derivative_second_term", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_shape_derivative_second_term::dhat", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_shape_derivative_second_term::edges", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_shape_derivative_second_term::faces", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_shape_derivative_second_term::rest_positions", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::EdgeEdgeConstraint::compute_shape_derivative_second_term::vertices", "Compute w \u2207\u2093\u2207\u1d64b."], [8, 3, 1, "_CPPv4N3ipc18EdgeEdgeConstraint5dtypeE", "ipc::EdgeEdgeConstraint::dtype", "Cached distance type."], [8, 3, 1, "_CPPv4N3ipc18EdgeEdgeConstraint5eps_xE", "ipc::EdgeEdgeConstraint::eps_x", "Mollifier activation threshold."], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraint11known_dtypeEv", "ipc::EdgeEdgeConstraint::known_dtype", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraintneERK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::operator!=", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraintneERK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::operator!=::other", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstraintltERK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::operator&lt;", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstraintltERK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::operator&lt;::other", ""], [8, 1, 1, "_CPPv4NK3ipc18EdgeEdgeConstrainteqERK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::operator==", ""], [8, 2, 2, "_CPPv4NK3ipc18EdgeEdgeConstrainteqERK18EdgeEdgeConstraint", "ipc::EdgeEdgeConstraint::operator==::other", ""], [10, 6, 1, "_CPPv4N3ipc20EdgeEdgeDistanceTypeE", "ipc::EdgeEdgeDistanceType", "Closest pair between two edges."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType4AUTOE", "ipc::EdgeEdgeDistanceType::AUTO", "Automatically determine the closest pair."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA0_EBE", "ipc::EdgeEdgeDistanceType::EA0_EB", "The edges are closest at vertex 0 of edge A and the interior of edge B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB0E", "ipc::EdgeEdgeDistanceType::EA0_EB0", "The edges are closest at vertex 0 of edge A and 0 of edge B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB1E", "ipc::EdgeEdgeDistanceType::EA0_EB1", "The edges are closest at vertex 0 of edge A and 1 of edge B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA1_EBE", "ipc::EdgeEdgeDistanceType::EA1_EB", "The edges are closest at vertex 1 of edge A and the interior of edge B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB0E", "ipc::EdgeEdgeDistanceType::EA1_EB0", "The edges are closest at vertex 1 of edge A and 0 of edge B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB1E", "ipc::EdgeEdgeDistanceType::EA1_EB1", "The edges are closest at vertex 1 of edge A and 1 of edge B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType5EA_EBE", "ipc::EdgeEdgeDistanceType::EA_EB", "The edges are closest at an interior point of edge A and B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB0E", "ipc::EdgeEdgeDistanceType::EA_EB0", "The edges are closest at the interior of edge A and vertex 0 of edge B."], [10, 7, 1, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB1E", "ipc::EdgeEdgeDistanceType::EA_EB1", "The edges are closest at the interior of edge A and vertex 1 of edge B."], [11, 0, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraintE", "ipc::EdgeEdgeFrictionConstraint", "Compute the tangent basis of the constraint."], [11, 1, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeCandidate", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeCandidate::edge0_id", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeCandidate::edge1_id", ""], [11, 1, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraint", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraint", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeEdgeFrictionConstraint::EdgeEdgeFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint21compute_closest_pointERK12VectorMax12d", "ipc::EdgeEdgeFrictionConstraint::compute_closest_point", "Compute the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionConstraint::compute_closest_point::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d", "ipc::EdgeEdgeFrictionConstraint::compute_closest_point_jacobian", "Compute the Jacobian of the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionConstraint::compute_closest_point_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint21compute_tangent_basisERK12VectorMax12d", "ipc::EdgeEdgeFrictionConstraint::compute_tangent_basis", "Compute the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionConstraint::compute_tangent_basis::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d", "ipc::EdgeEdgeFrictionConstraint::compute_tangent_basis_jacobian", "Compute the Jacobian of the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeEdgeFrictionConstraint::compute_tangent_basis_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint11known_dtypeEv", "ipc::EdgeEdgeFrictionConstraint::known_dtype", ""], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint17relative_velocityERK12VectorMax12d", "ipc::EdgeEdgeFrictionConstraint::relative_velocity", "Compute the relative velocity of the constraint."], [11, 2, 2, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint17relative_velocityERK12VectorMax12d-p-velocities", "ipc::EdgeEdgeFrictionConstraint::relative_velocity::velocities", "Constraint's vertex velocities."], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint24relative_velocity_matrixERK11VectorMax2d", "ipc::EdgeEdgeFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint24relative_velocity_matrixEv", "ipc::EdgeEdgeFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 2, 2, "p-closest_point", "ipc::EdgeEdgeFrictionConstraint::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 1, 1, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d", "ipc::EdgeEdgeFrictionConstraint::relative_velocity_matrix_jacobian", "Construct the Jacobian of the relative velocity premultiplier wrt the closest points."], [11, 2, 2, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::EdgeEdgeFrictionConstraint::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [6, 0, 1, "_CPPv4N3ipc17EdgeFaceCandidateE", "ipc::EdgeFaceCandidate", "Candidate for intersection between edge and face."], [6, 1, 1, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue", ""], [6, 4, 2, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue::fv", ""], [6, 2, 2, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll", "ipc::EdgeFaceCandidate::EdgeFaceCandidate", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll", "ipc::EdgeFaceCandidate::EdgeFaceCandidate::edge_id", ""], [6, 2, 2, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll", "ipc::EdgeFaceCandidate::EdgeFaceCandidate::face_id", ""], [6, 3, 1, "_CPPv4N3ipc17EdgeFaceCandidate7edge_idE", "ipc::EdgeFaceCandidate::edge_id", "ID of the edge."], [6, 3, 1, "_CPPv4N3ipc17EdgeFaceCandidate7face_idE", "ipc::EdgeFaceCandidate::face_id", "ID of the face."], [6, 1, 1, "_CPPv4NK3ipc17EdgeFaceCandidateneERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeFaceCandidateneERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc17EdgeFaceCandidateltERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator&lt;", "Compare EdgeFaceCandidate for sorting."], [6, 2, 2, "_CPPv4NK3ipc17EdgeFaceCandidateltERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator&lt;::other", "Compare EdgeFaceCandidate for sorting."], [6, 1, 1, "_CPPv4NK3ipc17EdgeFaceCandidateeqERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc17EdgeFaceCandidateeqERK17EdgeFaceCandidate", "ipc::EdgeFaceCandidate::operator==::other", ""], [6, 0, 1, "_CPPv4N3ipc19EdgeVertexCandidateE", "ipc::EdgeVertexCandidate", "Subclassed by ipc::EdgeVertexConstraint, ipc::EdgeVertexFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue", ""], [6, 4, 2, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue::ev", ""], [6, 2, 2, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll", "ipc::EdgeVertexCandidate::EdgeVertexCandidate", ""], [6, 2, 2, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll", "ipc::EdgeVertexCandidate::EdgeVertexCandidate::edge_id", ""], [6, 2, 2, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll", "ipc::EdgeVertexCandidate::EdgeVertexCandidate::vertex_id", ""], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd", ""], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::conservative_rescaling", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::EdgeVertexCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::EdgeVertexCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::EdgeVertexCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::max_iterations", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::EdgeVertexCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::min_distance", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-min_distance", "ipc::EdgeVertexCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::tmax", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::EdgeVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::toi", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::EdgeVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::tolerance", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::EdgeVertexCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::EdgeVertexCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::EdgeVertexCandidate::ccd::vertices_t1", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::EdgeVertexCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERK12VectorMax12d", "ipc::EdgeVertexCandidate::compute_distance", "Compute the distance of the stencil."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::compute_distance", "Compute the distance of the stencil."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeVertexCandidate::compute_distance::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeVertexCandidate::compute_distance::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::EdgeVertexCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::EdgeVertexCandidate::compute_distance::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERK12VectorMax12d", "ipc::EdgeVertexCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeVertexCandidate::compute_distance_gradient::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeVertexCandidate::compute_distance_gradient::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::EdgeVertexCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::EdgeVertexCandidate::compute_distance_gradient::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERK12VectorMax12d", "ipc::EdgeVertexCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeVertexCandidate::compute_distance_hessian::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeVertexCandidate::compute_distance_hessian::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::EdgeVertexCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::EdgeVertexCandidate::compute_distance_hessian::vertices", "Collision mesh vertex positions."], [6, 3, 1, "_CPPv4N3ipc19EdgeVertexCandidate7edge_idE", "ipc::EdgeVertexCandidate::edge_id", "ID of the edge."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate11known_dtypeEv", "ipc::EdgeVertexCandidate::known_dtype", ""], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate12num_verticesEv", "ipc::EdgeVertexCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidateneERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidateneERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidateltERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator&lt;", "Compare EdgeVertexCandidates for sorting."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidateltERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator&lt;::other", "Compare EdgeVertexCandidates for sorting."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidateeqERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidateeqERK19EdgeVertexCandidate", "ipc::EdgeVertexCandidate::operator==::other", ""], [6, 3, 1, "_CPPv4N3ipc19EdgeVertexCandidate9vertex_idE", "ipc::EdgeVertexCandidate::vertex_id", "ID of the vertex."], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeVertexCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeVertexCandidate::vertex_ids::faces", "Collision mesh faces"], [6, 1, 1, "_CPPv4NK3ipc19EdgeVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::EdgeVertexCandidate::write_ccd_query", "Write the CCD query to a stream."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::EdgeVertexCandidate::write_ccd_query::edges", "Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::EdgeVertexCandidate::write_ccd_query::faces", "Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-out", "ipc::EdgeVertexCandidate::write_ccd_query::out", "Stream to write to."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t0", "ipc::EdgeVertexCandidate::write_ccd_query::vertices_t0", "Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc19EdgeVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t1", "ipc::EdgeVertexCandidate::write_ccd_query::vertices_t1", "Mesh vertices at the end of the time step."], [8, 0, 1, "_CPPv4N3ipc20EdgeVertexConstraintE", "ipc::EdgeVertexConstraint", "Inheritence diagram for ipc::EdgeVertexConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue", ""], [8, 4, 2, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue::ev", ""], [8, 2, 2, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint", "ipc::EdgeVertexConstraint::AbslHashValue::h", ""], [8, 1, 1, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexConstraint::EdgeVertexCandidate", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexConstraint::EdgeVertexCandidate::edge_id", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexConstraint::EdgeVertexCandidate::vertex_id", ""], [8, 1, 1, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::EdgeVertexConstraint::EdgeVertexConstraint", ""], [8, 1, 1, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintERK19EdgeVertexCandidate", "ipc::EdgeVertexConstraint::EdgeVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::EdgeVertexConstraint::EdgeVertexConstraint::_edge_id", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::EdgeVertexConstraint::EdgeVertexConstraint::_vertex_id", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::EdgeVertexConstraint::EdgeVertexConstraint::_weight", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::EdgeVertexConstraint::EdgeVertexConstraint::_weight_gradient", ""], [8, 2, 2, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintERK19EdgeVertexCandidate", "ipc::EdgeVertexConstraint::EdgeVertexConstraint::candidate", ""], [8, 1, 1, "_CPPv4NK3ipc20EdgeVertexConstraint11known_dtypeEv", "ipc::EdgeVertexConstraint::known_dtype", ""], [11, 0, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraintE", "ipc::EdgeVertexFrictionConstraint", "Compute the tangent basis of the constraint."], [11, 1, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexFrictionConstraint::EdgeVertexCandidate", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexFrictionConstraint::EdgeVertexCandidate::edge_id", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll", "ipc::EdgeVertexFrictionConstraint::EdgeVertexCandidate::vertex_id", ""], [11, 1, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraint", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraint", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::EdgeVertexFrictionConstraint::EdgeVertexFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d", "ipc::EdgeVertexFrictionConstraint::compute_closest_point", "Compute the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionConstraint::compute_closest_point::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d", "ipc::EdgeVertexFrictionConstraint::compute_closest_point_jacobian", "Compute the Jacobian of the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionConstraint::compute_closest_point_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d", "ipc::EdgeVertexFrictionConstraint::compute_tangent_basis", "Compute the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionConstraint::compute_tangent_basis::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d", "ipc::EdgeVertexFrictionConstraint::compute_tangent_basis_jacobian", "Compute the Jacobian of the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::EdgeVertexFrictionConstraint::compute_tangent_basis_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint17relative_velocityERK12VectorMax12d", "ipc::EdgeVertexFrictionConstraint::relative_velocity", "Compute the relative velocity of the constraint."], [11, 2, 2, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint17relative_velocityERK12VectorMax12d-p-velocities", "ipc::EdgeVertexFrictionConstraint::relative_velocity::velocities", "Constraint's vertex velocities."], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint24relative_velocity_matrixERK11VectorMax2d", "ipc::EdgeVertexFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint24relative_velocity_matrixEv", "ipc::EdgeVertexFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 2, 2, "p-closest_point", "ipc::EdgeVertexFrictionConstraint::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 1, 1, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d", "ipc::EdgeVertexFrictionConstraint::relative_velocity_matrix_jacobian", "Construct the Jacobian of the relative velocity premultiplier wrt the closest points."], [11, 2, 2, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::EdgeVertexFrictionConstraint::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [6, 0, 1, "_CPPv4N3ipc19FaceVertexCandidateE", "ipc::FaceVertexCandidate", "Subclassed by ipc::FaceVertexConstraint, ipc::FaceVertexFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue", ""], [6, 4, 2, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue::fv", ""], [6, 2, 2, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate", "ipc::FaceVertexCandidate::AbslHashValue::h", ""], [6, 1, 1, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll", "ipc::FaceVertexCandidate::FaceVertexCandidate", ""], [6, 2, 2, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll", "ipc::FaceVertexCandidate::FaceVertexCandidate::face_id", ""], [6, 2, 2, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll", "ipc::FaceVertexCandidate::FaceVertexCandidate::vertex_id", ""], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd", ""], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::conservative_rescaling", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::FaceVertexCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::FaceVertexCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::FaceVertexCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::max_iterations", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::FaceVertexCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::min_distance", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-min_distance", "ipc::FaceVertexCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::tmax", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::FaceVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::toi", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::FaceVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::tolerance", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::FaceVertexCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::FaceVertexCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::FaceVertexCandidate::ccd::vertices_t1", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::FaceVertexCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERK12VectorMax12d", "ipc::FaceVertexCandidate::compute_distance", "Compute the distance of the stencil."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::compute_distance", "Compute the distance of the stencil."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::FaceVertexCandidate::compute_distance::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::FaceVertexCandidate::compute_distance::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::FaceVertexCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::FaceVertexCandidate::compute_distance::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERK12VectorMax12d", "ipc::FaceVertexCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::FaceVertexCandidate::compute_distance_gradient::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::FaceVertexCandidate::compute_distance_gradient::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::FaceVertexCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::FaceVertexCandidate::compute_distance_gradient::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERK12VectorMax12d", "ipc::FaceVertexCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::FaceVertexCandidate::compute_distance_hessian::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::FaceVertexCandidate::compute_distance_hessian::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::FaceVertexCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::FaceVertexCandidate::compute_distance_hessian::vertices", "Collision mesh vertex positions."], [6, 3, 1, "_CPPv4N3ipc19FaceVertexCandidate7face_idE", "ipc::FaceVertexCandidate::face_id", "ID of the face."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate11known_dtypeEv", "ipc::FaceVertexCandidate::known_dtype", ""], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate12num_verticesEv", "ipc::FaceVertexCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidateneERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidateneERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidateltERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator&lt;", "Compare FaceVertexCandidate for sorting."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidateltERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator&lt;::other", "Compare FaceVertexCandidate for sorting."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidateeqERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidateeqERK19FaceVertexCandidate", "ipc::FaceVertexCandidate::operator==::other", ""], [6, 3, 1, "_CPPv4N3ipc19FaceVertexCandidate9vertex_idE", "ipc::FaceVertexCandidate::vertex_id", "ID of the vertex."], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::vertex_ids", "Get the vertex IDs of the contact stencil."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::FaceVertexCandidate::vertex_ids::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::FaceVertexCandidate::vertex_ids::faces", "Collision mesh faces"], [6, 1, 1, "_CPPv4NK3ipc19FaceVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::FaceVertexCandidate::write_ccd_query", "Write the CCD query to a stream."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::FaceVertexCandidate::write_ccd_query::edges", "Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::FaceVertexCandidate::write_ccd_query::faces", "Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-out", "ipc::FaceVertexCandidate::write_ccd_query::out", "Stream to write to."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t0", "ipc::FaceVertexCandidate::write_ccd_query::vertices_t0", "Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc19FaceVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t1", "ipc::FaceVertexCandidate::write_ccd_query::vertices_t1", "Mesh vertices at the end of the time step."], [8, 0, 1, "_CPPv4N3ipc20FaceVertexConstraintE", "ipc::FaceVertexConstraint", "Inheritence diagram for ipc::FaceVertexConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue", ""], [8, 4, 2, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue::fv", ""], [8, 2, 2, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint", "ipc::FaceVertexConstraint::AbslHashValue::h", ""], [8, 1, 1, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll", "ipc::FaceVertexConstraint::FaceVertexCandidate", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll", "ipc::FaceVertexConstraint::FaceVertexCandidate::face_id", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll", "ipc::FaceVertexConstraint::FaceVertexCandidate::vertex_id", ""], [8, 1, 1, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::FaceVertexConstraint::FaceVertexConstraint", ""], [8, 1, 1, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintERK19FaceVertexCandidate", "ipc::FaceVertexConstraint::FaceVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::FaceVertexConstraint::FaceVertexConstraint::_face_id", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::FaceVertexConstraint::FaceVertexConstraint::_vertex_id", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::FaceVertexConstraint::FaceVertexConstraint::_weight", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::FaceVertexConstraint::FaceVertexConstraint::_weight_gradient", ""], [8, 2, 2, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintERK19FaceVertexCandidate", "ipc::FaceVertexConstraint::FaceVertexConstraint::candidate", ""], [8, 1, 1, "_CPPv4NK3ipc20FaceVertexConstraint11known_dtypeEv", "ipc::FaceVertexConstraint::known_dtype", ""], [11, 0, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraintE", "ipc::FaceVertexFrictionConstraint", "Compute the tangent basis of the constraint."], [11, 1, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll", "ipc::FaceVertexFrictionConstraint::FaceVertexCandidate", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll", "ipc::FaceVertexFrictionConstraint::FaceVertexCandidate::face_id", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll", "ipc::FaceVertexFrictionConstraint::FaceVertexCandidate::vertex_id", ""], [11, 1, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraint", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraint", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::FaceVertexFrictionConstraint::FaceVertexFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d", "ipc::FaceVertexFrictionConstraint::compute_closest_point", "Compute the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc28FaceVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionConstraint::compute_closest_point::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d", "ipc::FaceVertexFrictionConstraint::compute_closest_point_jacobian", "Compute the Jacobian of the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc28FaceVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionConstraint::compute_closest_point_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d", "ipc::FaceVertexFrictionConstraint::compute_tangent_basis", "Compute the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc28FaceVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionConstraint::compute_tangent_basis::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d", "ipc::FaceVertexFrictionConstraint::compute_tangent_basis_jacobian", "Compute the Jacobian of the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc28FaceVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::FaceVertexFrictionConstraint::compute_tangent_basis_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint17relative_velocityERK12VectorMax12d", "ipc::FaceVertexFrictionConstraint::relative_velocity", "Compute the relative velocity of the constraint."], [11, 2, 2, "_CPPv4NK3ipc28FaceVertexFrictionConstraint17relative_velocityERK12VectorMax12d-p-velocities", "ipc::FaceVertexFrictionConstraint::relative_velocity::velocities", "Constraint's vertex velocities."], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint24relative_velocity_matrixERK11VectorMax2d", "ipc::FaceVertexFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint24relative_velocity_matrixEv", "ipc::FaceVertexFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 2, 2, "p-closest_point", "ipc::FaceVertexFrictionConstraint::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 1, 1, "_CPPv4NK3ipc28FaceVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d", "ipc::FaceVertexFrictionConstraint::relative_velocity_matrix_jacobian", "Construct the Jacobian of the relative velocity premultiplier wrt the closest points."], [11, 2, 2, "_CPPv4NK3ipc28FaceVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::FaceVertexFrictionConstraint::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [11, 0, 1, "_CPPv4N3ipc18FrictionConstraintE", "ipc::FrictionConstraint", "Subclassed by ipc::EdgeEdgeFrictionConstraint, ipc::EdgeVertexFrictionConstraint, ipc::FaceVertexFrictionConstraint, ipc::VertexVertexFrictionConstraint"], [11, 6, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRTE", "ipc::FrictionConstraint::DiffWRT", "Variable to differentiate the friction force with respect to."], [11, 7, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRT20LAGGED_DISPLACEMENTSE", "ipc::FrictionConstraint::DiffWRT::LAGGED_DISPLACEMENTS", "Differentiate w.r.t. lagged displacements."], [11, 7, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRT14REST_POSITIONSE", "ipc::FrictionConstraint::DiffWRT::REST_POSITIONS", "Differentiate w.r.t. rest positions."], [11, 7, 1, "_CPPv4N3ipc18FrictionConstraint7DiffWRT10VELOCITIESE", "ipc::FrictionConstraint::DiffWRT::VELOCITIES", "Differentiate w.r.t. current velocities."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint13closest_pointE", "ipc::FrictionConstraint::closest_point", "Barycentric coordinates of the closest point(s)"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint21compute_closest_pointERK12VectorMax12d", "ipc::FrictionConstraint::compute_closest_point", "Compute the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::FrictionConstraint::compute_closest_point::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d", "ipc::FrictionConstraint::compute_closest_point_jacobian", "Compute the Jacobian of the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::FrictionConstraint::compute_closest_point_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb", "ipc::FrictionConstraint::compute_force", "Compute the friction force."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-barrier_stiffness", "ipc::FrictionConstraint::compute_force::barrier_stiffness", "Barrier stiffness"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-dhat", "ipc::FrictionConstraint::compute_force::dhat", "Barrier activation distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-dmin", "ipc::FrictionConstraint::compute_force::dmin", "Minimum distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-edges", "ipc::FrictionConstraint::compute_force::edges", "Collision mesh edges"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-epsv", "ipc::FrictionConstraint::compute_force::epsv", "Smooth friction mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-faces", "ipc::FrictionConstraint::compute_force::faces", "Collision mesh faces"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-lagged_displacements", "ipc::FrictionConstraint::compute_force::lagged_displacements", "Previous displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-no_mu", "ipc::FrictionConstraint::compute_force::no_mu", "Whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-rest_positions", "ipc::FrictionConstraint::compute_force::rest_positions", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb-p-velocities", "ipc::FrictionConstraint::compute_force::velocities", "Current displacements of the vertices (rowwise)"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd", "ipc::FrictionConstraint::compute_force_jacobian", "Compute the friction force Jacobian."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-barrier_stiffness", "ipc::FrictionConstraint::compute_force_jacobian::barrier_stiffness", "Barrier stiffness"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-dhat", "ipc::FrictionConstraint::compute_force_jacobian::dhat", "Barrier activation distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-dmin", "ipc::FrictionConstraint::compute_force_jacobian::dmin", "Minimum distance"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-edges", "ipc::FrictionConstraint::compute_force_jacobian::edges", "Collision mesh edges"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-epsv", "ipc::FrictionConstraint::compute_force_jacobian::epsv", "Smooth friction mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-faces", "ipc::FrictionConstraint::compute_force_jacobian::faces", "Collision mesh faces"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-lagged_displacements", "ipc::FrictionConstraint::compute_force_jacobian::lagged_displacements", "Previous displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-rest_positions", "ipc::FrictionConstraint::compute_force_jacobian::rest_positions", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-velocities", "ipc::FrictionConstraint::compute_force_jacobian::velocities", "Current displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd-p-wrt", "ipc::FrictionConstraint::compute_force_jacobian::wrt", "Variable to differentiate the friction force with respect to."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint30compute_normal_force_magnitudeERK12VectorMax12dKdKdKd", "ipc::FrictionConstraint::compute_normal_force_magnitude", "Compute the normal force magnitude."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint30compute_normal_force_magnitudeERK12VectorMax12dKdKdKd-p-barrier_stiffness", "ipc::FrictionConstraint::compute_normal_force_magnitude::barrier_stiffness", "Barrier stiffness."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint30compute_normal_force_magnitudeERK12VectorMax12dKdKdKd-p-dhat", "ipc::FrictionConstraint::compute_normal_force_magnitude::dhat", "Barrier activiation distance."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint30compute_normal_force_magnitudeERK12VectorMax12dKdKdKd-p-dmin", "ipc::FrictionConstraint::compute_normal_force_magnitude::dmin", "Minimum distance."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint30compute_normal_force_magnitudeERK12VectorMax12dKdKdKd-p-positions", "ipc::FrictionConstraint::compute_normal_force_magnitude::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint39compute_normal_force_magnitude_gradientERK12VectorMax12dKdKdKd", "ipc::FrictionConstraint::compute_normal_force_magnitude_gradient", "Compute the gradient of the normal force magnitude."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint39compute_normal_force_magnitude_gradientERK12VectorMax12dKdKdKd-p-barrier_stiffness", "ipc::FrictionConstraint::compute_normal_force_magnitude_gradient::barrier_stiffness", "Barrier stiffness."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint39compute_normal_force_magnitude_gradientERK12VectorMax12dKdKdKd-p-dhat", "ipc::FrictionConstraint::compute_normal_force_magnitude_gradient::dhat", "Barrier activiation distance."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint39compute_normal_force_magnitude_gradientERK12VectorMax12dKdKdKd-p-dmin", "ipc::FrictionConstraint::compute_normal_force_magnitude_gradient::dmin", "Minimum distance."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint39compute_normal_force_magnitude_gradientERK12VectorMax12dKdKdKd-p-positions", "ipc::FrictionConstraint::compute_normal_force_magnitude_gradient::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FrictionConstraint::compute_potential", "Compute the friction dissapative potential."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::FrictionConstraint::compute_potential::edges", "Edges of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-epsv", "ipc::FrictionConstraint::compute_potential::epsv", "Smooth friction mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::FrictionConstraint::compute_potential::faces", "Faces of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-velocities", "ipc::FrictionConstraint::compute_potential::velocities", "Velocities of the vertices (rowwise)"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd", "ipc::FrictionConstraint::compute_potential_gradient", "Compute the friction dissapative potential gradient wrt velocities."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-edges", "ipc::FrictionConstraint::compute_potential_gradient::edges", "Edges of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-epsv", "ipc::FrictionConstraint::compute_potential_gradient::epsv", "Smooth friction mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-faces", "ipc::FrictionConstraint::compute_potential_gradient::faces", "Faces of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd-p-velocities", "ipc::FrictionConstraint::compute_potential_gradient::velocities", "Velocities of the vertices (rowwise)"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb", "ipc::FrictionConstraint::compute_potential_hessian", "Compute the friction dissapative potential hessian wrt velocities."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-edges", "ipc::FrictionConstraint::compute_potential_hessian::edges", "Edges of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-epsv", "ipc::FrictionConstraint::compute_potential_hessian::epsv", "Smooth friction mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-faces", "ipc::FrictionConstraint::compute_potential_hessian::faces", "Faces of the mesh"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-project_hessian_to_psd", "ipc::FrictionConstraint::compute_potential_hessian::project_hessian_to_psd", "Project the hessian to PSD"], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb-p-velocities", "ipc::FrictionConstraint::compute_potential_hessian::velocities", "Velocities of the vertices (rowwise)"], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint21compute_tangent_basisERK12VectorMax12d", "ipc::FrictionConstraint::compute_tangent_basis", "Compute the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::FrictionConstraint::compute_tangent_basis::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d", "ipc::FrictionConstraint::compute_tangent_basis_jacobian", "Compute the Jacobian of the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::FrictionConstraint::compute_tangent_basis_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint3dimEv", "ipc::FrictionConstraint::dim", "Get the dimension of the constraint."], [11, 1, 1, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd", "ipc::FrictionConstraint::init", "Initialize the constraint."], [11, 2, 2, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd-p-barrier_stiffness", "ipc::FrictionConstraint::init::barrier_stiffness", "Barrier stiffness"], [11, 2, 2, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd-p-dhat", "ipc::FrictionConstraint::init::dhat", "Barrier activation distance"], [11, 2, 2, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd-p-dmin", "ipc::FrictionConstraint::init::dmin", "Minimum distance"], [11, 2, 2, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd-p-edges", "ipc::FrictionConstraint::init::edges", "Edges of the mesh"], [11, 2, 2, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd-p-faces", "ipc::FrictionConstraint::init::faces", "Faces of the mesh"], [11, 2, 2, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd-p-positions", "ipc::FrictionConstraint::init::positions", "Vertex positions(rowwise)"], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint2muE", "ipc::FrictionConstraint::mu", "Coefficient of friction."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint4ndofEv", "ipc::FrictionConstraint::ndof", "Get the number of degrees of freedom for the constraint."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint22normal_force_magnitudeE", "ipc::FrictionConstraint::normal_force_magnitude", "Contact force magnitude."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint17relative_velocityERK12VectorMax12d", "ipc::FrictionConstraint::relative_velocity", "Compute the relative velocity of the constraint."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint17relative_velocityERK12VectorMax12d-p-velocities", "ipc::FrictionConstraint::relative_velocity::velocities", "Constraint's vertex velocities."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint24relative_velocity_matrixERK11VectorMax2d", "ipc::FrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint24relative_velocity_matrixEv", "ipc::FrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint24relative_velocity_matrixERK11VectorMax2d-p-closest_point", "ipc::FrictionConstraint::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 1, 1, "_CPPv4NK3ipc18FrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d", "ipc::FrictionConstraint::relative_velocity_matrix_jacobian", "Construct the Jacobian of the relative velocity premultiplier wrt the closest points."], [11, 2, 2, "_CPPv4NK3ipc18FrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::FrictionConstraint::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint13tangent_basisE", "ipc::FrictionConstraint::tangent_basis", "Tangent basis of the contact (max size 3\u00d72)"], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint6weightE", "ipc::FrictionConstraint::weight", "Weight."], [11, 3, 1, "_CPPv4N3ipc18FrictionConstraint15weight_gradientE", "ipc::FrictionConstraint::weight_gradient", "Gradient of weight with respect to all DOF."], [11, 1, 1, "_CPPv4N3ipc18FrictionConstraintD0Ev", "ipc::FrictionConstraint::~FrictionConstraint", ""], [11, 0, 1, "_CPPv4N3ipc19FrictionConstraintsE", "ipc::FrictionConstraints", "Compute the friction dissapative potential from the given velocity."], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints19FrictionConstraintsEv", "ipc::FrictionConstraints::FrictionConstraints", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::blend_mu", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::contact_constraints", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::contact_constraints", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::dhat", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::dhat", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::mesh", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::mesh", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::mu", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::mus", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE", "ipc::FrictionConstraints::build::vertices", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd", "ipc::FrictionConstraints::build::vertices", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints5clearEv", "ipc::FrictionConstraints::clear", "Clear the friction constraints."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb", "ipc::FrictionConstraints::compute_force", "Compute the friction force from the given velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-barrier_stiffness", "ipc::FrictionConstraints::compute_force::barrier_stiffness", "Barrier stiffness."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-dhat", "ipc::FrictionConstraints::compute_force::dhat", "Barrier activation distance."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-dmin", "ipc::FrictionConstraints::compute_force::dmin", "Minimum distance to use for the barrier."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-epsv", "ipc::FrictionConstraints::compute_force::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-lagged_displacements", "ipc::FrictionConstraints::compute_force::lagged_displacements", "Previous displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-mesh", "ipc::FrictionConstraints::compute_force::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-no_mu", "ipc::FrictionConstraints::compute_force::no_mu", "whether to not multiply by mu"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-rest_positions", "ipc::FrictionConstraints::compute_force::rest_positions", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb-p-velocities", "ipc::FrictionConstraints::compute_force::velocities", "Current displacements of the vertices (rowwise)"], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd", "ipc::FrictionConstraints::compute_force_jacobian", "Compute the Jacobian of the friction force wrt the velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-barrier_stiffness", "ipc::FrictionConstraints::compute_force_jacobian::barrier_stiffness", "Barrier stiffness."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-dhat", "ipc::FrictionConstraints::compute_force_jacobian::dhat", "Barrier activation distance."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-dmin", "ipc::FrictionConstraints::compute_force_jacobian::dmin", "Minimum distance to use for the barrier."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-epsv", "ipc::FrictionConstraints::compute_force_jacobian::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-lagged_displacements", "ipc::FrictionConstraints::compute_force_jacobian::lagged_displacements", "Previous displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-mesh", "ipc::FrictionConstraints::compute_force_jacobian::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-rest_positions", "ipc::FrictionConstraints::compute_force_jacobian::rest_positions", "Rest positions of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-velocities", "ipc::FrictionConstraints::compute_force_jacobian::velocities", "Current displacements of the vertices (rowwise)"], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd-p-wrt", "ipc::FrictionConstraints::compute_force_jacobian::wrt", "The variable to take the derivative with respect to."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::FrictionConstraints::compute_potential", "Compute the friction dissapative potential from the given velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-epsv", "ipc::FrictionConstraints::compute_potential::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::FrictionConstraints::compute_potential::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-velocity", "ipc::FrictionConstraints::compute_potential::velocity", "Current vertex velocity (rowwise)."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd", "ipc::FrictionConstraints::compute_potential_gradient", "Compute the gradient of the friction dissapative potential wrt the velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-epsv", "ipc::FrictionConstraints::compute_potential_gradient::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-mesh", "ipc::FrictionConstraints::compute_potential_gradient::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd-p-velocity", "ipc::FrictionConstraints::compute_potential_gradient::velocity", "Current vertex velocity (rowwise)."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb", "ipc::FrictionConstraints::compute_potential_hessian", "Compute the Hessian of the friction dissapative potential wrt the velocity."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-epsv", "ipc::FrictionConstraints::compute_potential_hessian::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-mesh", "ipc::FrictionConstraints::compute_potential_hessian::mesh", "The collision mesh."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-project_hessian_to_psd", "ipc::FrictionConstraints::compute_potential_hessian::project_hessian_to_psd", "If true, project the Hessian to be positive semi-definite."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb-p-velocity", "ipc::FrictionConstraints::compute_potential_hessian::velocity", "Current vertex velocity (rowwise)."], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd", "ipc::FrictionConstraints::default_blend_mu", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd", "ipc::FrictionConstraints::default_blend_mu::mu0", ""], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd", "ipc::FrictionConstraints::default_blend_mu::mu1", ""], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14ee_constraintsE", "ipc::FrictionConstraints::ee_constraints", ""], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints5emptyEv", "ipc::FrictionConstraints::empty", "Get if the friction constraints are empty."], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14ev_constraintsE", "ipc::FrictionConstraints::ev_constraints", ""], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14fv_constraintsE", "ipc::FrictionConstraints::fv_constraints", ""], [11, 1, 1, "_CPPv4N3ipc19FrictionConstraintsixEK6size_t", "ipc::FrictionConstraints::operator[]", "Get a reference to constriant idx."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraintsixEK6size_t", "ipc::FrictionConstraints::operator[]", "Get a const reference to constriant idx."], [11, 2, 2, "_CPPv4N3ipc19FrictionConstraintsixEK6size_t-p-idx", "ipc::FrictionConstraints::operator[]::idx", "The index of the constraint."], [11, 2, 2, "_CPPv4NK3ipc19FrictionConstraintsixEK6size_t-p-idx", "ipc::FrictionConstraints::operator[]::idx", "The index of the constraint."], [11, 1, 1, "_CPPv4NK3ipc19FrictionConstraints4sizeEv", "ipc::FrictionConstraints::size", "Get the number of friction constraints."], [11, 3, 1, "_CPPv4N3ipc19FrictionConstraints14vv_constraintsE", "ipc::FrictionConstraints::vv_constraints", ""], [5, 0, 1, "_CPPv4N3ipc8HashGridE", "ipc::HashGrid", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::HashGrid::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::HashGrid::build", "Build the broad phase for static collision detection."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::HashGrid::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::HashGrid::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::HashGrid::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::HashGrid::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::HashGrid::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::HashGrid::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::HashGrid::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::HashGrid::build::vertices_t0", "Starting vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::HashGrid::build::vertices_t1", "Ending vertices of the vertices."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid8cellSizeEv", "ipc::HashGrid::cellSize", ""], [5, 1, 1, "_CPPv4N3ipc8HashGrid5clearEv", "ipc::HashGrid::clear", "Clear the hash grid."], [5, 1, 1, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates", ""], [5, 1, 1, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates", ""], [5, 4, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::Candidate", ""], [5, 4, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::Candidate", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::boxes", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::boxes0", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::boxes1", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::can_collide", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::can_collide", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::candidates", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::candidates", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::items", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::items0", ""], [5, 2, 2, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE", "ipc::HashGrid::detect_candidates::items1", ""], [5, 1, 1, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::HashGrid::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::HashGrid::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::HashGrid::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::HashGrid::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::HashGrid::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::HashGrid::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::HashGrid::detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::HashGrid::detect_vertex_vertex_candidates::candidates", "Find the candidate vertex-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid9domainMaxEv", "ipc::HashGrid::domainMax", ""], [5, 1, 1, "_CPPv4NK3ipc8HashGrid9domainMinEv", "ipc::HashGrid::domainMin", ""], [5, 3, 1, "_CPPv4N3ipc8HashGrid10edge_itemsE", "ipc::HashGrid::edge_items", ""], [5, 3, 1, "_CPPv4N3ipc8HashGrid10face_itemsE", "ipc::HashGrid::face_items", ""], [5, 1, 1, "_CPPv4NK3ipc8HashGrid8gridSizeEv", "ipc::HashGrid::gridSize", ""], [5, 1, 1, "_CPPv4NK3ipc8HashGrid4hashEiii", "ipc::HashGrid::hash", "Create the hash of a cell location."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid4hashEiii", "ipc::HashGrid::hash::x", "Create the hash of a cell location."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid4hashEiii", "ipc::HashGrid::hash::y", "Create the hash of a cell location."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid4hashEiii", "ipc::HashGrid::hash::z", "Create the hash of a cell location."], [5, 1, 1, "_CPPv4NK3ipc8HashGrid10insert_boxERK4AABBKlRNSt6vectorI8HashItemEE", "ipc::HashGrid::insert_box", "Add an AABB of the extents to the hash grid."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid10insert_boxERK4AABBKlRNSt6vectorI8HashItemEE", "ipc::HashGrid::insert_box::aabb", "Add an AABB of the extents to the hash grid."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid10insert_boxERK4AABBKlRNSt6vectorI8HashItemEE", "ipc::HashGrid::insert_box::id", "Add an AABB of the extents to the hash grid."], [5, 2, 2, "_CPPv4NK3ipc8HashGrid10insert_boxERK4AABBKlRNSt6vectorI8HashItemEE", "ipc::HashGrid::insert_box::items", "Add an AABB of the extents to the hash grid."], [5, 1, 1, "_CPPv4N3ipc8HashGrid12insert_boxesEv", "ipc::HashGrid::insert_boxes", ""], [5, 1, 1, "_CPPv4NK3ipc8HashGrid12insert_boxesERKNSt6vectorI4AABBEERNSt6vectorI8HashItemEE", "ipc::HashGrid::insert_boxes", ""], [5, 2, 2, "_CPPv4NK3ipc8HashGrid12insert_boxesERKNSt6vectorI4AABBEERNSt6vectorI8HashItemEE", "ipc::HashGrid::insert_boxes::boxes", ""], [5, 2, 2, "_CPPv4NK3ipc8HashGrid12insert_boxesERKNSt6vectorI4AABBEERNSt6vectorI8HashItemEE", "ipc::HashGrid::insert_boxes::items", ""], [5, 3, 1, "_CPPv4N3ipc8HashGrid10m_cellSizeE", "ipc::HashGrid::m_cellSize", ""], [5, 3, 1, "_CPPv4N3ipc8HashGrid11m_domainMaxE", "ipc::HashGrid::m_domainMax", ""], [5, 3, 1, "_CPPv4N3ipc8HashGrid11m_domainMinE", "ipc::HashGrid::m_domainMin", ""], [5, 3, 1, "_CPPv4N3ipc8HashGrid10m_gridSizeE", "ipc::HashGrid::m_gridSize", ""], [5, 1, 1, "_CPPv4N3ipc8HashGrid6resizeERK10ArrayMax3dRK10ArrayMax3dd", "ipc::HashGrid::resize", ""], [5, 2, 2, "_CPPv4N3ipc8HashGrid6resizeERK10ArrayMax3dRK10ArrayMax3dd", "ipc::HashGrid::resize::cellSize", ""], [5, 2, 2, "_CPPv4N3ipc8HashGrid6resizeERK10ArrayMax3dRK10ArrayMax3dd", "ipc::HashGrid::resize::max", ""], [5, 2, 2, "_CPPv4N3ipc8HashGrid6resizeERK10ArrayMax3dRK10ArrayMax3dd", "ipc::HashGrid::resize::min", ""], [5, 3, 1, "_CPPv4N3ipc8HashGrid12vertex_itemsE", "ipc::HashGrid::vertex_items", ""], [7, 0, 1, "_CPPv4N3ipc27IntervalNonlinearTrajectoryE", "ipc::IntervalNonlinearTrajectory", "A nonlinear trajectory with an implementation of the max_distance_from_linear function using interval arithmetic."], [7, 1, 1, "_CPPv4NK3ipc27IntervalNonlinearTrajectory24max_distance_from_linearEKdKd", "ipc::IntervalNonlinearTrajectory::max_distance_from_linear", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory."], [7, 2, 2, "_CPPv4NK3ipc27IntervalNonlinearTrajectory24max_distance_from_linearEKdKd-p-t0", "ipc::IntervalNonlinearTrajectory::max_distance_from_linear::t0", "[in] Start time of the trajectory"], [7, 2, 2, "_CPPv4NK3ipc27IntervalNonlinearTrajectory24max_distance_from_linearEKdKd-p-t1", "ipc::IntervalNonlinearTrajectory::max_distance_from_linear::t1", "[in] End time of the trajectory"], [7, 1, 1, "_CPPv4NK3ipc27IntervalNonlinearTrajectoryclERKN5filib8IntervalE", "ipc::IntervalNonlinearTrajectory::operator()", "Compute the point's position over a time interval t."], [7, 2, 2, "_CPPv4NK3ipc27IntervalNonlinearTrajectoryclERKN5filib8IntervalE", "ipc::IntervalNonlinearTrajectory::operator()::t", "Compute the point's position over a time interval t."], [7, 1, 1, "_CPPv4N3ipc27IntervalNonlinearTrajectoryD0Ev", "ipc::IntervalNonlinearTrajectory::~IntervalNonlinearTrajectory", ""], [7, 0, 1, "_CPPv4N3ipc19NonlinearTrajectoryE", "ipc::NonlinearTrajectory", "A nonlinear trajectory is a function that maps time to a point in space."], [7, 1, 1, "_CPPv4NK3ipc19NonlinearTrajectory24max_distance_from_linearEKdKd", "ipc::NonlinearTrajectory::max_distance_from_linear", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory."], [7, 2, 2, "_CPPv4NK3ipc19NonlinearTrajectory24max_distance_from_linearEKdKd-p-t0", "ipc::NonlinearTrajectory::max_distance_from_linear::t0", "[in] Start time of the trajectory"], [7, 2, 2, "_CPPv4NK3ipc19NonlinearTrajectory24max_distance_from_linearEKdKd-p-t1", "ipc::NonlinearTrajectory::max_distance_from_linear::t1", "[in] End time of the trajectory"], [7, 1, 1, "_CPPv4NK3ipc19NonlinearTrajectoryclEKd", "ipc::NonlinearTrajectory::operator()", "Compute the point's position at time t."], [7, 2, 2, "_CPPv4NK3ipc19NonlinearTrajectoryclEKd", "ipc::NonlinearTrajectory::operator()::t", "Compute the point's position at time t."], [7, 1, 1, "_CPPv4N3ipc19NonlinearTrajectoryD0Ev", "ipc::NonlinearTrajectory::~NonlinearTrajectory", ""], [8, 0, 1, "_CPPv4N3ipc21PlaneVertexConstraintE", "ipc::PlaneVertexConstraint", "Inheritence diagram for ipc::PlaneVertexConstraint:"], [8, 1, 1, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint::plane_normal", ""], [8, 2, 2, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint::plane_origin", ""], [8, 2, 2, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl", "ipc::PlaneVertexConstraint::PlaneVertexConstraint::vertex_id", ""], [8, 1, 1, "_CPPv4NK3ipc21PlaneVertexConstraint16compute_distanceERK12VectorMax12d", "ipc::PlaneVertexConstraint::compute_distance", "Compute the distance between the point and plane."], [8, 2, 2, "_CPPv4NK3ipc21PlaneVertexConstraint16compute_distanceERK12VectorMax12d-p-point", "ipc::PlaneVertexConstraint::compute_distance::point", "Point's position."], [8, 1, 1, "_CPPv4NK3ipc21PlaneVertexConstraint25compute_distance_gradientERK12VectorMax12d", "ipc::PlaneVertexConstraint::compute_distance_gradient", "Compute the gradient of the distance w.r.t."], [8, 2, 2, "_CPPv4NK3ipc21PlaneVertexConstraint25compute_distance_gradientERK12VectorMax12d-p-point", "ipc::PlaneVertexConstraint::compute_distance_gradient::point", "Point's position."], [8, 1, 1, "_CPPv4NK3ipc21PlaneVertexConstraint24compute_distance_hessianERK12VectorMax12d", "ipc::PlaneVertexConstraint::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [8, 2, 2, "_CPPv4NK3ipc21PlaneVertexConstraint24compute_distance_hessianERK12VectorMax12d-p-point", "ipc::PlaneVertexConstraint::compute_distance_hessian::point", "Point's position."], [8, 1, 1, "_CPPv4NK3ipc21PlaneVertexConstraint12num_verticesEv", "ipc::PlaneVertexConstraint::num_vertices", "Get the number of vertices in the contact stencil."], [8, 3, 1, "_CPPv4N3ipc21PlaneVertexConstraint12plane_normalE", "ipc::PlaneVertexConstraint::plane_normal", ""], [8, 3, 1, "_CPPv4N3ipc21PlaneVertexConstraint12plane_originE", "ipc::PlaneVertexConstraint::plane_origin", ""], [8, 3, 1, "_CPPv4N3ipc21PlaneVertexConstraint9vertex_idE", "ipc::PlaneVertexConstraint::vertex_id", ""], [8, 1, 1, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::PlaneVertexConstraint::vertex_ids", "Get the vertex IDs of the contact stencil."], [8, 2, 2, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::PlaneVertexConstraint::vertex_ids::edges", "Collision mesh edges"], [8, 2, 2, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::PlaneVertexConstraint::vertex_ids::faces", "Collision mesh faces"], [10, 6, 1, "_CPPv4N3ipc21PointEdgeDistanceTypeE", "ipc::PointEdgeDistanceType", "Closest pair between a point and edge."], [10, 7, 1, "_CPPv4N3ipc21PointEdgeDistanceType4AUTOE", "ipc::PointEdgeDistanceType::AUTO", "Automatically determine the closest pair."], [10, 7, 1, "_CPPv4N3ipc21PointEdgeDistanceType3P_EE", "ipc::PointEdgeDistanceType::P_E", "The point is closest to the interior of the edge."], [10, 7, 1, "_CPPv4N3ipc21PointEdgeDistanceType4P_E0E", "ipc::PointEdgeDistanceType::P_E0", "The point is closest to edge vertex zero."], [10, 7, 1, "_CPPv4N3ipc21PointEdgeDistanceType4P_E1E", "ipc::PointEdgeDistanceType::P_E1", "The point is closest to edge vertex one."], [10, 6, 1, "_CPPv4N3ipc25PointTriangleDistanceTypeE", "ipc::PointTriangleDistanceType", "Closest pair between a point and triangle."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType4AUTOE", "ipc::PointTriangleDistanceType::AUTO", "Automatically determine the closest pair."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E0E", "ipc::PointTriangleDistanceType::P_E0", "The point is closest to triangle edge zero (vertex zero to one)."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E1E", "ipc::PointTriangleDistanceType::P_E1", "The point is closest to triangle edge one (vertex one to two)."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_E2E", "ipc::PointTriangleDistanceType::P_E2", "The point is closest to triangle edge two (vertex two to zero)."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType3P_TE", "ipc::PointTriangleDistanceType::P_T", "The point is closest to the interior of the triangle."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T0E", "ipc::PointTriangleDistanceType::P_T0", "The point is closest to triangle vertex zero."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T1E", "ipc::PointTriangleDistanceType::P_T1", "The point is closest to triangle vertex one."], [10, 7, 1, "_CPPv4N3ipc25PointTriangleDistanceType4P_T2E", "ipc::PointTriangleDistanceType::P_T2", "The point is closest to triangle vertex two."], [5, 0, 1, "_CPPv4N3ipc11SpatialHashE", "ipc::SpatialHash", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash11SpatialHashEv", "ipc::SpatialHash::SpatialHash", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::vertices", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::vertices_t0", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::vertices_t1", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::voxel_size", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::SpatialHash::voxel_size", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SpatialHash::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SpatialHash::build", "Build the broad phase for static collision detection."], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SpatialHash::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SpatialHash::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::edges", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SpatialHash::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SpatialHash::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::faces", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SpatialHash::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SpatialHash::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::inflation_radius", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::SpatialHash::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::vertices", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::SpatialHash::build::vertices_t0", "Starting vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::vertices_t0", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::SpatialHash::build::vertices_t1", "Ending vertices of the vertices."], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::vertices_t1", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::voxel_size", ""], [5, 2, 2, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd", "ipc::SpatialHash::build::voxel_size", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash15built_in_radiusE", "ipc::SpatialHash::built_in_radius", ""], [5, 1, 1, "_CPPv4N3ipc11SpatialHash5clearEv", "ipc::SpatialHash::clear", "Clear any built data."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::SpatialHash::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::SpatialHash::detect_edge_edge_candidates::candidates", "Find the candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::SpatialHash::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::SpatialHash::detect_edge_face_candidates::candidates", "Find the candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::SpatialHash::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::SpatialHash::detect_edge_vertex_candidates::candidates", "Find the candidate edge-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::SpatialHash::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::SpatialHash::detect_face_vertex_candidates::candidates", "Find the candidate face-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::SpatialHash::detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::SpatialHash::detect_vertex_vertex_candidates::candidates", "Find the candidate vertex-vertex collisions."], [5, 3, 1, "_CPPv4N3ipc11SpatialHash3dimE", "ipc::SpatialHash::dim", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash14edge_start_indE", "ipc::SpatialHash::edge_start_ind", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash13is_edge_indexEi", "ipc::SpatialHash::is_edge_index", "Check if primitive index refers to an edge."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash13is_edge_indexEi", "ipc::SpatialHash::is_edge_index::idx", "Check if primitive index refers to an edge."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash17is_triangle_indexEi", "ipc::SpatialHash::is_triangle_index", "Check if primitive index refers to a triangle."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17is_triangle_indexEi", "ipc::SpatialHash::is_triangle_index::idx", "Check if primitive index refers to a triangle."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash15is_vertex_indexEi", "ipc::SpatialHash::is_vertex_index", "Check if primitive index refers to a vertex."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash15is_vertex_indexEi", "ipc::SpatialHash::is_vertex_index::idx", "Check if primitive index refers to a vertex."], [5, 3, 1, "_CPPv4N3ipc11SpatialHash18left_bottom_cornerE", "ipc::SpatialHash::left_bottom_corner", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd", "ipc::SpatialHash::locate_box_voxel_axis_index", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd", "ipc::SpatialHash::locate_box_voxel_axis_index::inflation_radius", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd", "ipc::SpatialHash::locate_box_voxel_axis_index::max_corner", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd", "ipc::SpatialHash::locate_box_voxel_axis_index::max_index", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd", "ipc::SpatialHash::locate_box_voxel_axis_index::min_corner", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd", "ipc::SpatialHash::locate_box_voxel_axis_index::min_index", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash23locate_voxel_axis_indexERK11VectorMax3dR10ArrayMax3i", "ipc::SpatialHash::locate_voxel_axis_index", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23locate_voxel_axis_indexERK11VectorMax3dR10ArrayMax3i", "ipc::SpatialHash::locate_voxel_axis_index::p", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash23locate_voxel_axis_indexERK11VectorMax3dR10ArrayMax3i", "ipc::SpatialHash::locate_voxel_axis_index::voxel_axis_index", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash18locate_voxel_indexERK11VectorMax3d", "ipc::SpatialHash::locate_voxel_index", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash18locate_voxel_indexERK11VectorMax3d", "ipc::SpatialHash::locate_voxel_index::p", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash17one_div_voxelSizeE", "ipc::SpatialHash::one_div_voxelSize", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash24point_and_edge_occupancyE", "ipc::SpatialHash::point_and_edge_occupancy", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash20query_edge_for_edgesEiR13unordered_setIiE", "ipc::SpatialHash::query_edge_for_edges", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash20query_edge_for_edgesEiR13unordered_setIiE", "ipc::SpatialHash::query_edge_for_edges::eai", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash20query_edge_for_edgesEiR13unordered_setIiE", "ipc::SpatialHash::query_edge_for_edges::edge_inds", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash24query_edge_for_trianglesEiR13unordered_setIiE", "ipc::SpatialHash::query_edge_for_triangles", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash24query_edge_for_trianglesEiR13unordered_setIiE", "ipc::SpatialHash::query_edge_for_triangles::ei", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash24query_edge_for_trianglesEiR13unordered_setIiE", "ipc::SpatialHash::query_edge_for_triangles::tri_inds", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash21query_point_for_edgesEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_edges", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21query_point_for_edgesEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_edges::edge_inds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash21query_point_for_edgesEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_edges::vi", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash22query_point_for_pointsEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_points", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22query_point_for_pointsEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_points::vert_inds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash22query_point_for_pointsEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_points::vi", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash25query_point_for_trianglesEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_triangles", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash25query_point_for_trianglesEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_triangles::tri_inds", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash25query_point_for_trianglesEiR13unordered_setIiE", "ipc::SpatialHash::query_point_for_triangles::vi", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash16right_top_cornerE", "ipc::SpatialHash::right_top_corner", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash13to_edge_indexEi", "ipc::SpatialHash::to_edge_index", "Convert a primitive index to an edge index."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash13to_edge_indexEi", "ipc::SpatialHash::to_edge_index::idx", "Convert a primitive index to an edge index."], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash17to_triangle_indexEi", "ipc::SpatialHash::to_triangle_index", "Convert a primitive index to a triangle index."], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash17to_triangle_indexEi", "ipc::SpatialHash::to_triangle_index::idx", "Convert a primitive index to a triangle index."], [5, 3, 1, "_CPPv4N3ipc11SpatialHash13tri_start_indE", "ipc::SpatialHash::tri_start_ind", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash5voxelE", "ipc::SpatialHash::voxel", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexERK10ArrayMax3i", "ipc::SpatialHash::voxelAxisIndex2VoxelIndex", ""], [5, 1, 1, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexEiii", "ipc::SpatialHash::voxelAxisIndex2VoxelIndex", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexEiii", "ipc::SpatialHash::voxelAxisIndex2VoxelIndex::ix", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexEiii", "ipc::SpatialHash::voxelAxisIndex2VoxelIndex::iy", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexEiii", "ipc::SpatialHash::voxelAxisIndex2VoxelIndex::iz", ""], [5, 2, 2, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexERK10ArrayMax3i", "ipc::SpatialHash::voxelAxisIndex2VoxelIndex::voxel_axis_index", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash11voxel_countE", "ipc::SpatialHash::voxel_count", ""], [5, 3, 1, "_CPPv4N3ipc11SpatialHash15voxel_count_0x1E", "ipc::SpatialHash::voxel_count_0x1", ""], [5, 0, 1, "_CPPv4N3ipc20SweepAndTiniestQueueE", "ipc::SweepAndTiniestQueue", "Build the broad phase for static collision detection."], [5, 3, 1, "_CPPv4N3ipc20SweepAndTiniestQueue5boxesE", "ipc::SweepAndTiniestQueue::boxes", ""], [5, 1, 1, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SweepAndTiniestQueue::build", "Build the broad phase for continuous collision detection."], [5, 1, 1, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd", "ipc::SweepAndTiniestQueue::build", "Build the broad phase for static collision detection."], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SweepAndTiniestQueue::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-edges", "ipc::SweepAndTiniestQueue::build::edges", "Collision mesh edges"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SweepAndTiniestQueue::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-faces", "ipc::SweepAndTiniestQueue::build::faces", "Collision mesh faces"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SweepAndTiniestQueue::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-inflation_radius", "ipc::SweepAndTiniestQueue::build::inflation_radius", "Radius of inflation around all elements."], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices", "ipc::SweepAndTiniestQueue::build::vertices", "Vertex positions"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t0", "ipc::SweepAndTiniestQueue::build::vertices_t0", "Starting vertex positions"], [5, 2, 2, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd-p-vertices_t1", "ipc::SweepAndTiniestQueue::build::vertices_t1", "Ending vertex positions"], [5, 1, 1, "_CPPv4N3ipc20SweepAndTiniestQueue5clearEv", "ipc::SweepAndTiniestQueue::clear", "Clear any built data."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE", "ipc::SweepAndTiniestQueue::detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_edge_edge_candidates::candidates", "[out] The candidate edge-edge collisions."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE", "ipc::SweepAndTiniestQueue::detect_edge_face_candidates", "Find the candidate edge-face intersections."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_edge_face_candidates::candidates", "[out] The candidate edge-face intersections."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE", "ipc::SweepAndTiniestQueue::detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_edge_vertex_candidates::candidates", "[out] The candidate edge-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE", "ipc::SweepAndTiniestQueue::detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_face_vertex_candidates::candidates", "[out] The candidate face-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE", "ipc::SweepAndTiniestQueue::detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE-p-candidates", "ipc::SweepAndTiniestQueue::detect_vertex_vertex_candidates::candidates", "[out] The candidate vertex-vertex collisions."], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue7is_edgeEl", "ipc::SweepAndTiniestQueue::is_edge", ""], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue7is_edgeEl", "ipc::SweepAndTiniestQueue::is_edge::id", ""], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue7is_faceEl", "ipc::SweepAndTiniestQueue::is_face", ""], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue7is_faceEl", "ipc::SweepAndTiniestQueue::is_face::id", ""], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue9is_vertexEl", "ipc::SweepAndTiniestQueue::is_vertex", ""], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue9is_vertexEl", "ipc::SweepAndTiniestQueue::is_vertex::id", ""], [5, 3, 1, "_CPPv4N3ipc20SweepAndTiniestQueue12num_verticesE", "ipc::SweepAndTiniestQueue::num_vertices", ""], [5, 3, 1, "_CPPv4N3ipc20SweepAndTiniestQueue8overlapsE", "ipc::SweepAndTiniestQueue::overlaps", ""], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue10to_edge_idEl", "ipc::SweepAndTiniestQueue::to_edge_id", ""], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue10to_edge_idEl", "ipc::SweepAndTiniestQueue::to_edge_id::id", ""], [5, 1, 1, "_CPPv4NK3ipc20SweepAndTiniestQueue10to_face_idEl", "ipc::SweepAndTiniestQueue::to_face_id", ""], [5, 2, 2, "_CPPv4NK3ipc20SweepAndTiniestQueue10to_face_idEl", "ipc::SweepAndTiniestQueue::to_face_id::id", ""], [6, 0, 1, "_CPPv4N3ipc21VertexVertexCandidateE", "ipc::VertexVertexCandidate", "Subclassed by ipc::VertexVertexConstraint, ipc::VertexVertexFrictionConstraint"], [6, 1, 1, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue", ""], [6, 4, 2, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue::H", ""], [6, 2, 2, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue::h", ""], [6, 2, 2, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate", "ipc::VertexVertexCandidate::AbslHashValue::vv", ""], [6, 1, 1, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll", "ipc::VertexVertexCandidate::VertexVertexCandidate", ""], [6, 2, 2, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll", "ipc::VertexVertexCandidate::VertexVertexCandidate::vertex0_id", ""], [6, 2, 2, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll", "ipc::VertexVertexCandidate::VertexVertexCandidate::vertex1_id", ""], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd", ""], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd", "Perform narrow-phase CCD on the candidate."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::conservative_rescaling", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-conservative_rescaling", "ipc::VertexVertexCandidate::ccd::conservative_rescaling", "[in] Conservative rescaling value used to avoid taking steps exactly to impact."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-edges", "ipc::VertexVertexCandidate::ccd::edges", "[in] Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-faces", "ipc::VertexVertexCandidate::ccd::faces", "[in] Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::max_iterations", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-max_iterations", "ipc::VertexVertexCandidate::ccd::max_iterations", "[in] Maximum iterations used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::min_distance", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-min_distance", "ipc::VertexVertexCandidate::ccd::min_distance", "[in] Minimum separation distance between primitives."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::tmax", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tmax", "ipc::VertexVertexCandidate::ccd::tmax", "[in] Maximum time (normalized) to look for collisions."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::toi", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-toi", "ipc::VertexVertexCandidate::ccd::toi", "[out] Computed time of impact (normalized)."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::tolerance", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-tolerance", "ipc::VertexVertexCandidate::ccd::tolerance", "[in] CCD tolerance used by Tight-Inclusion CCD."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::vertices_t0", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t0", "ipc::VertexVertexCandidate::ccd::vertices_t0", "[in] Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd", "ipc::VertexVertexCandidate::ccd::vertices_t1", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd-p-vertices_t1", "ipc::VertexVertexCandidate::ccd::vertices_t1", "[in] Mesh vertices at the end of the time step."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERK12VectorMax12d", "ipc::VertexVertexCandidate::compute_distance", "Compute the distance of the stencil."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::VertexVertexCandidate::compute_distance", "Compute the distance of the stencil."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::VertexVertexCandidate::compute_distance::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::VertexVertexCandidate::compute_distance::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::VertexVertexCandidate::compute_distance::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::VertexVertexCandidate::compute_distance::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERK12VectorMax12d", "ipc::VertexVertexCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::VertexVertexCandidate::compute_distance_gradient", "Compute the distance gradient of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::VertexVertexCandidate::compute_distance_gradient::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::VertexVertexCandidate::compute_distance_gradient::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::VertexVertexCandidate::compute_distance_gradient::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::VertexVertexCandidate::compute_distance_gradient::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERK12VectorMax12d", "ipc::VertexVertexCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::VertexVertexCandidate::compute_distance_hessian", "Compute the distance Hessian of the stencil w.r.t."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::VertexVertexCandidate::compute_distance_hessian::edges", "Collision mesh edges"], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::VertexVertexCandidate::compute_distance_hessian::faces", "Collision mesh faces"], [6, 2, 2, "p-positions", "ipc::VertexVertexCandidate::compute_distance_hessian::positions", "Stencil's vertex positions."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices", "ipc::VertexVertexCandidate::compute_distance_hessian::vertices", "Collision mesh vertex positions."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate12num_verticesEv", "ipc::VertexVertexCandidate::num_vertices", "Get the number of vertices in the contact stencil."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidateneERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator!=", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidateneERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator!=::other", ""], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidateltERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator&lt;", "Compare EdgeVertexCandidates for sorting."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidateltERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator&lt;::other", "Compare EdgeVertexCandidates for sorting."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidateeqERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator==", ""], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidateeqERK21VertexVertexCandidate", "ipc::VertexVertexCandidate::operator==::other", ""], [6, 3, 1, "_CPPv4N3ipc21VertexVertexCandidate10vertex0_idE", "ipc::VertexVertexCandidate::vertex0_id", "ID of the first vertex."], [6, 3, 1, "_CPPv4N3ipc21VertexVertexCandidate10vertex1_idE", "ipc::VertexVertexCandidate::vertex1_id", "ID of the second vertex."], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::VertexVertexCandidate::vertex_ids", "Get the indices of the vertices."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::VertexVertexCandidate::vertex_ids::edges", "edge matrix of mesh"], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::VertexVertexCandidate::vertex_ids::faces", "face matrix of mesh"], [6, 1, 1, "_CPPv4NK3ipc21VertexVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE", "ipc::VertexVertexCandidate::write_ccd_query", "Write the CCD query to a stream."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-edges", "ipc::VertexVertexCandidate::write_ccd_query::edges", "Collision mesh edges as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-faces", "ipc::VertexVertexCandidate::write_ccd_query::faces", "Collision mesh triangular faces as rows of indicies into vertices."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-out", "ipc::VertexVertexCandidate::write_ccd_query::out", "Stream to write to."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t0", "ipc::VertexVertexCandidate::write_ccd_query::vertices_t0", "Mesh vertices at the start of the time step."], [6, 2, 2, "_CPPv4NK3ipc21VertexVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE-p-vertices_t1", "ipc::VertexVertexCandidate::write_ccd_query::vertices_t1", "Mesh vertices at the end of the time step."], [8, 0, 1, "_CPPv4N3ipc22VertexVertexConstraintE", "ipc::VertexVertexConstraint", "Inheritence diagram for ipc::VertexVertexConstraint:"], [8, 1, 1, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue", ""], [8, 4, 2, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue::H", ""], [8, 2, 2, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue::h", ""], [8, 2, 2, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint", "ipc::VertexVertexConstraint::AbslHashValue::vv", ""], [8, 1, 1, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll", "ipc::VertexVertexConstraint::VertexVertexCandidate", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll", "ipc::VertexVertexConstraint::VertexVertexCandidate::vertex0_id", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll", "ipc::VertexVertexConstraint::VertexVertexCandidate::vertex1_id", ""], [8, 1, 1, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::VertexVertexConstraint::VertexVertexConstraint", ""], [8, 1, 1, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintERK21VertexVertexCandidate", "ipc::VertexVertexConstraint::VertexVertexConstraint", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::VertexVertexConstraint::VertexVertexConstraint::_vertex0_id", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::VertexVertexConstraint::VertexVertexConstraint::_vertex1_id", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::VertexVertexConstraint::VertexVertexConstraint::_weight", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE", "ipc::VertexVertexConstraint::VertexVertexConstraint::_weight_gradient", ""], [8, 2, 2, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintERK21VertexVertexCandidate", "ipc::VertexVertexConstraint::VertexVertexConstraint::candidate", ""], [11, 0, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraintE", "ipc::VertexVertexFrictionConstraint", "Compute the tangent basis of the constraint."], [11, 1, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll", "ipc::VertexVertexFrictionConstraint::VertexVertexCandidate", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll", "ipc::VertexVertexFrictionConstraint::VertexVertexCandidate::vertex0_id", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll", "ipc::VertexVertexFrictionConstraint::VertexVertexCandidate::vertex1_id", ""], [11, 1, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraint", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint", ""], [11, 1, 1, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraint", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::constraint", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::dhat", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::edges", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::faces", ""], [11, 2, 2, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd", "ipc::VertexVertexFrictionConstraint::VertexVertexFrictionConstraint::vertices", ""], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d", "ipc::VertexVertexFrictionConstraint::compute_closest_point", "Compute the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc30VertexVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionConstraint::compute_closest_point::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d", "ipc::VertexVertexFrictionConstraint::compute_closest_point_jacobian", "Compute the Jacobian of the barycentric coordinates of the closest point."], [11, 2, 2, "_CPPv4NK3ipc30VertexVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionConstraint::compute_closest_point_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d", "ipc::VertexVertexFrictionConstraint::compute_tangent_basis", "Compute the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc30VertexVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionConstraint::compute_tangent_basis::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d", "ipc::VertexVertexFrictionConstraint::compute_tangent_basis_jacobian", "Compute the Jacobian of the tangent basis of the constraint."], [11, 2, 2, "_CPPv4NK3ipc30VertexVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d-p-positions", "ipc::VertexVertexFrictionConstraint::compute_tangent_basis_jacobian::positions", "Constraint's vertex positions."], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint17relative_velocityERK12VectorMax12d", "ipc::VertexVertexFrictionConstraint::relative_velocity", "Compute the relative velocity of the constraint."], [11, 2, 2, "_CPPv4NK3ipc30VertexVertexFrictionConstraint17relative_velocityERK12VectorMax12d-p-velocities", "ipc::VertexVertexFrictionConstraint::relative_velocity::velocities", "Constraint's vertex velocities."], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint24relative_velocity_matrixERK11VectorMax2d", "ipc::VertexVertexFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint24relative_velocity_matrixEv", "ipc::VertexVertexFrictionConstraint::relative_velocity_matrix", "Construct the premultiplier matrix for the relative velocity."], [11, 2, 2, "p-closest_point", "ipc::VertexVertexFrictionConstraint::relative_velocity_matrix::closest_point", "Barycentric coordinates of the closest point."], [11, 1, 1, "_CPPv4NK3ipc30VertexVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d", "ipc::VertexVertexFrictionConstraint::relative_velocity_matrix_jacobian", "Construct the Jacobian of the relative velocity premultiplier wrt the closest points."], [11, 2, 2, "_CPPv4NK3ipc30VertexVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d-p-closest_point", "ipc::VertexVertexFrictionConstraint::relative_velocity_matrix_jacobian::closest_point", "Barycentric coordinates of the closest point."], [7, 1, 1, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd", "ipc::additive_ccd::additive_ccd", "Computes the time of impact between two objects using additive continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd-p-conservative_rescaling", "ipc::additive_ccd::additive_ccd::conservative_rescaling", "The amount to rescale the objects by to ensure conservative advancement."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd-p-distance_squared", "ipc::additive_ccd::additive_ccd::distance_squared", "A function that computes the squared distance between the two objects at a given time."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd", "ipc::additive_ccd::additive_ccd::dx", "Computes the time of impact between two objects using additive continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd", "ipc::additive_ccd::additive_ccd::max_disp_mag", "Computes the time of impact between two objects using additive continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd-p-min_distance", "ipc::additive_ccd::additive_ccd::min_distance", "The minimum distance between the objects."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd-p-tmax", "ipc::additive_ccd::additive_ccd::tmax", "The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd-p-toi", "ipc::additive_ccd::additive_ccd::toi", "[out] The time of impact between the two objects."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd", "ipc::additive_ccd::additive_ccd::x", "Computes the time of impact between two objects using additive continuous collision detection."], [7, 1, 1, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd", "ipc::additive_ccd::edge_edge_ccd", "Computes the time of impact between two edges using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-conservative_rescaling", "ipc::additive_ccd::edge_edge_ccd::conservative_rescaling", "The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-ea0_t0", "ipc::additive_ccd::edge_edge_ccd::ea0_t0", "The initial position of the first endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-ea0_t1", "ipc::additive_ccd::edge_edge_ccd::ea0_t1", "The final position of the first endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-ea1_t0", "ipc::additive_ccd::edge_edge_ccd::ea1_t0", "The initial position of the second endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-ea1_t1", "ipc::additive_ccd::edge_edge_ccd::ea1_t1", "The final position of the second endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-eb0_t0", "ipc::additive_ccd::edge_edge_ccd::eb0_t0", "The initial position of the first endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-eb0_t1", "ipc::additive_ccd::edge_edge_ccd::eb0_t1", "The final position of the first endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-eb1_t0", "ipc::additive_ccd::edge_edge_ccd::eb1_t0", "The initial position of the second endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-eb1_t1", "ipc::additive_ccd::edge_edge_ccd::eb1_t1", "The final position of the second endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-min_distance", "ipc::additive_ccd::edge_edge_ccd::min_distance", "The minimum distance between two objects."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-tmax", "ipc::additive_ccd::edge_edge_ccd::tmax", "The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-toi", "ipc::additive_ccd::edge_edge_ccd::toi", "[out] The time of impact between the two edges."], [7, 1, 1, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd", "ipc::additive_ccd::point_edge_ccd", "Computes the time of impact between a point and an edge using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-conservative_rescaling", "ipc::additive_ccd::point_edge_ccd::conservative_rescaling", "The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-e0_t0", "ipc::additive_ccd::point_edge_ccd::e0_t0", "The initial position of the first endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-e0_t1", "ipc::additive_ccd::point_edge_ccd::e0_t1", "The final position of the first endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-e1_t0", "ipc::additive_ccd::point_edge_ccd::e1_t0", "The initial position of the second endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-e1_t1", "ipc::additive_ccd::point_edge_ccd::e1_t1", "The final position of the second endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-min_distance", "ipc::additive_ccd::point_edge_ccd::min_distance", "The minimum distance between two objects."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-p_t0", "ipc::additive_ccd::point_edge_ccd::p_t0", "The initial position of the point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-p_t1", "ipc::additive_ccd::point_edge_ccd::p_t1", "The final position of the point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-tmax", "ipc::additive_ccd::point_edge_ccd::tmax", "The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-toi", "ipc::additive_ccd::point_edge_ccd::toi", "[out] The time of impact between the point and the edge."], [7, 1, 1, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd", "ipc::additive_ccd::point_point_ccd", "Computes the time of impact between two points using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-conservative_rescaling", "ipc::additive_ccd::point_point_ccd::conservative_rescaling", "The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-min_distance", "ipc::additive_ccd::point_point_ccd::min_distance", "The minimum distance between two objects."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-p0_t0", "ipc::additive_ccd::point_point_ccd::p0_t0", "The initial position of the first point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-p0_t1", "ipc::additive_ccd::point_point_ccd::p0_t1", "The final position of the first point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-p1_t0", "ipc::additive_ccd::point_point_ccd::p1_t0", "The initial position of the second point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-p1_t1", "ipc::additive_ccd::point_point_ccd::p1_t1", "The final position of the second point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-tmax", "ipc::additive_ccd::point_point_ccd::tmax", "The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd-p-toi", "ipc::additive_ccd::point_point_ccd::toi", "[out] The time of impact between the two points."], [7, 1, 1, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd", "ipc::additive_ccd::point_triangle_ccd", "Computes the time of impact between a point and a triangle using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-conservative_rescaling", "ipc::additive_ccd::point_triangle_ccd::conservative_rescaling", "The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-min_distance", "ipc::additive_ccd::point_triangle_ccd::min_distance", "The minimum distance between two objects."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-p_t0", "ipc::additive_ccd::point_triangle_ccd::p_t0", "The initial position of the point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-p_t1", "ipc::additive_ccd::point_triangle_ccd::p_t1", "The final position of the point."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-t0_t0", "ipc::additive_ccd::point_triangle_ccd::t0_t0", "The initial position of the first vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-t0_t1", "ipc::additive_ccd::point_triangle_ccd::t0_t1", "The final position of the first vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-t1_t0", "ipc::additive_ccd::point_triangle_ccd::t1_t0", "The initial position of the second vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-t1_t1", "ipc::additive_ccd::point_triangle_ccd::t1_t1", "The final position of the second vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-t2_t0", "ipc::additive_ccd::point_triangle_ccd::t2_t0", "The initial position of the third vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-t2_t1", "ipc::additive_ccd::point_triangle_ccd::t2_t1", "The final position of the third vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-tmax", "ipc::additive_ccd::point_triangle_ccd::tmax", "The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd-p-toi", "ipc::additive_ccd::point_triangle_ccd::toi", "[out] The time of impact between the point and the triangle."], [4, 1, 1, "_CPPv4N3ipc7barrierEKdKd", "ipc::barrier", "Function that grows to infinity as d approaches 0 from the right."], [4, 2, 2, "_CPPv4N3ipc7barrierEKdKd-p-d", "ipc::barrier::d", "The distance."], [4, 2, 2, "_CPPv4N3ipc7barrierEKdKd-p-dhat", "ipc::barrier::dhat", "Activation distance of the barrier."], [4, 1, 1, "_CPPv4N3ipc16barrier_gradientEKdKd", "ipc::barrier_gradient", "Derivative of the barrier function."], [4, 2, 2, "_CPPv4N3ipc16barrier_gradientEKdKd-p-d", "ipc::barrier_gradient::d", "The distance."], [4, 2, 2, "_CPPv4N3ipc16barrier_gradientEKdKd-p-dhat", "ipc::barrier_gradient::dhat", "Activation distance of the barrier."], [4, 1, 1, "_CPPv4N3ipc15barrier_hessianEKdKd", "ipc::barrier_hessian", "Second derivative of the barrier function."], [4, 2, 2, "_CPPv4N3ipc15barrier_hessianEKdKd-p-d", "ipc::barrier_hessian::d", "The distance."], [4, 2, 2, "_CPPv4N3ipc15barrier_hessianEKdKd-p-dhat", "ipc::barrier_hessian::dhat", "Activation distance of the barrier."], [7, 1, 1, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd", "ipc::ccd_strategy", "Perform the CCD strategy outlined by Li et al."], [7, 2, 2, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd-p-ccd", "ipc::ccd_strategy::ccd", "[in] The continuous collision detection function."], [7, 2, 2, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd-p-conservative_rescaling", "ipc::ccd_strategy::conservative_rescaling", "[in] The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd-p-initial_distance", "ipc::ccd_strategy::initial_distance", "[in] The initial distance between the objects."], [7, 2, 2, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd-p-max_iterations", "ipc::ccd_strategy::max_iterations", "[in] The maximum number of iterations to perform."], [7, 2, 2, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd-p-min_distance", "ipc::ccd_strategy::min_distance", "[in] The minimum distance between the objects."], [7, 2, 2, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd-p-toi", "ipc::ccd_strategy::toi", "[out] Output time of impact."], [7, 1, 1, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl", "ipc::compute_collision_free_stepsize", "Computes a maximal step size that is collision free."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-broad_phase_method", "ipc::compute_collision_free_stepsize::broad_phase_method", "The broad phase method to use."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-max_iterations", "ipc::compute_collision_free_stepsize::max_iterations", "The maximum number of iterations for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-mesh", "ipc::compute_collision_free_stepsize::mesh", "The collision mesh."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-min_distance", "ipc::compute_collision_free_stepsize::min_distance", "The minimum distance allowable between any two elements."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-tolerance", "ipc::compute_collision_free_stepsize::tolerance", "The tolerance for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t0", "ipc::compute_collision_free_stepsize::vertices_t0", "Vertex vertices at start as rows of a matrix."], [7, 2, 2, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t1", "ipc::compute_collision_free_stepsize::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [11, 1, 1, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::dhat", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::distance_squared", ""], [11, 2, 2, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd", "ipc::compute_normal_force_magnitude::dmin", ""], [11, 1, 1, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::barrier_stiffness", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::dhat", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::distance_squared", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::distance_squared_gradient", ""], [11, 2, 2, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd", "ipc::compute_normal_force_magnitude_gradient::dmin", ""], [7, 1, 1, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd", "ipc::conservative_piecewise_linear_ccd", "Perform conservative piecewise linear CCD of a nonlinear trajectories."], [7, 2, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-conservative_rescaling", "ipc::conservative_piecewise_linear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-distance", "ipc::conservative_piecewise_linear_ccd::distance", "[in] Return the distance for a given time in [0, 1]."], [7, 2, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-linear_ccd", "ipc::conservative_piecewise_linear_ccd::linear_ccd", "[in] Perform linear CCD on a given time interval."], [7, 2, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-max_distance_from_linear", "ipc::conservative_piecewise_linear_ccd::max_distance_from_linear", "[in] Return the maximum distance from the linearized trajectory for a given time interval."], [7, 2, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-min_distance", "ipc::conservative_piecewise_linear_ccd::min_distance", "[in] Minimum separation distance between the objects."], [7, 2, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-tmax", "ipc::conservative_piecewise_linear_ccd::tmax", "[in] Maximum time to check for collision."], [7, 2, 2, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd-p-toi", "ipc::conservative_piecewise_linear_ccd::toi", "[out] Output time of impact."], [11, 1, 1, "_CPPv4N3ipc22df1_x_minus_f1_over_x3EKdKd", "ipc::df1_x_minus_f1_over_x3", "The derivative of f1 times s minus f1 all divided by s cubed."], [11, 2, 2, "_CPPv4N3ipc22df1_x_minus_f1_over_x3EKdKd-p-epsv", "ipc::df1_x_minus_f1_over_x3::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4N3ipc22df1_x_minus_f1_over_x3EKdKd-p-s", "ipc::df1_x_minus_f1_over_x3::s", "The tangential relative speed."], [7, 1, 1, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::edge_edge_ccd", "Computes the time of impact between two edges in 3D using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-conservative_rescaling", "ipc::edge_edge_ccd::conservative_rescaling", "[in] The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-ea0_t0", "ipc::edge_edge_ccd::ea0_t0", "[in] The initial position of the first endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-ea0_t1", "ipc::edge_edge_ccd::ea0_t1", "[in] The final position of the first endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-ea1_t0", "ipc::edge_edge_ccd::ea1_t0", "[in] The initial position of the second endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-ea1_t1", "ipc::edge_edge_ccd::ea1_t1", "[in] The final position of the second endpoint of the first edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-eb0_t0", "ipc::edge_edge_ccd::eb0_t0", "[in] The initial position of the first endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-eb0_t1", "ipc::edge_edge_ccd::eb0_t1", "[in] The final position of the first endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-eb1_t0", "ipc::edge_edge_ccd::eb1_t0", "[in] The initial position of the second endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-eb1_t1", "ipc::edge_edge_ccd::eb1_t1", "[in] The final position of the second endpoint of the second edge."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-max_iterations", "ipc::edge_edge_ccd::max_iterations", "[in] The maximum number of iterations to perform."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-min_distance", "ipc::edge_edge_ccd::min_distance", "[in] The minimum distance between the objects."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-tmax", "ipc::edge_edge_ccd::tmax", "[in] The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-toi", "ipc::edge_edge_ccd::toi", "[out] The time of impact between the two edges."], [7, 2, 2, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-tolerance", "ipc::edge_edge_ccd::tolerance", "[in] The error tolerance for the time of impact."], [10, 1, 1, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_cross_squarednorm", "Compute the squared norm of the edge-edge cross product."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_cross_squarednorm::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_cross_squarednorm::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_cross_squarednorm::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_cross_squarednorm::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_cross_squarednorm_gradient", "Compute the gradient of the squared norm of the edge cross product."], [10, 2, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_cross_squarednorm_gradient::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_cross_squarednorm_gradient::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_cross_squarednorm_gradient::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_cross_squarednorm_gradient::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_cross_squarednorm_hessian", "Compute the hessian of the squared norm of the edge cross product."], [10, 2, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_cross_squarednorm_hessian::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_cross_squarednorm_hessian::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_cross_squarednorm_hessian::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_cross_squarednorm_hessian::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance", "Compute the distance between a two lines segments in 3D."], [10, 2, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance::dtype", "The point edge distance type to compute."], [10, 2, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance_gradient::dtype", "The point edge distance type to compute."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance_gradient::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance_gradient::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance_gradient::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance_gradient::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType", "ipc::edge_edge_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [10, 2, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-dtype", "ipc::edge_edge_distance_hessian::dtype", "The point edge distance type to compute."], [10, 2, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea0", "ipc::edge_edge_distance_hessian::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-ea1", "ipc::edge_edge_distance_hessian::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb0", "ipc::edge_edge_distance_hessian::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType-p-eb1", "ipc::edge_edge_distance_hessian::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_distance_type", "Determine the closest pair between two edges."], [10, 2, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::edge_edge_distance_type::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::edge_edge_distance_type::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0", "ipc::edge_edge_distance_type::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1", "ipc::edge_edge_distance_type::eb1", "The second vertex of the second edge."], [10, 1, 1, "_CPPv4N3ipc19edge_edge_mollifierEKdKd", "ipc::edge_edge_mollifier", "Mollifier function for edge-edge distance."], [10, 1, 1, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd", "ipc::edge_edge_mollifier", "Compute a mollifier for the edge-edge distance."], [10, 2, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea0", "ipc::edge_edge_mollifier::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea1", "ipc::edge_edge_mollifier::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb0", "ipc::edge_edge_mollifier::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb1", "ipc::edge_edge_mollifier::eb1", "The second vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc19edge_edge_mollifierEKdKd-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eps_x", "ipc::edge_edge_mollifier::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4N3ipc19edge_edge_mollifierEKdKd-p-x", "ipc::edge_edge_mollifier::x", "Squared norm of the edge-edge cross product."], [10, 1, 1, "_CPPv4N3ipc28edge_edge_mollifier_gradientEKdKd", "ipc::edge_edge_mollifier_gradient", "The gradient of the mollifier function for edge-edge distance."], [10, 1, 1, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd", "ipc::edge_edge_mollifier_gradient", "Compute the gradient of the mollifier for the edge-edge distance."], [10, 2, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea0", "ipc::edge_edge_mollifier_gradient::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea1", "ipc::edge_edge_mollifier_gradient::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb0", "ipc::edge_edge_mollifier_gradient::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb1", "ipc::edge_edge_mollifier_gradient::eb1", "The second vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientEKdKd-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eps_x", "ipc::edge_edge_mollifier_gradient::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4N3ipc28edge_edge_mollifier_gradientEKdKd-p-x", "ipc::edge_edge_mollifier_gradient::x", "Squared norm of the edge-edge cross product."], [10, 1, 1, "_CPPv4N3ipc27edge_edge_mollifier_hessianEKdKd", "ipc::edge_edge_mollifier_hessian", "The hessian of the mollifier function for edge-edge distance."], [10, 1, 1, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd", "ipc::edge_edge_mollifier_hessian", "Compute the hessian of the mollifier for the edge-edge distance."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea0", "ipc::edge_edge_mollifier_hessian::ea0", "The first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-ea1", "ipc::edge_edge_mollifier_hessian::ea1", "The second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb0", "ipc::edge_edge_mollifier_hessian::eb0", "The first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eb1", "ipc::edge_edge_mollifier_hessian::eb1", "The second vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianEKdKd-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd-p-eps_x", "ipc::edge_edge_mollifier_hessian::eps_x", "Mollifier activation threshold."], [10, 2, 2, "_CPPv4N3ipc27edge_edge_mollifier_hessianEKdKd-p-x", "ipc::edge_edge_mollifier_hessian::x", "Squared norm of the edge-edge cross product."], [10, 1, 1, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_mollifier_threshold", "Compute the threshold of the mollifier edge-edge distance."], [10, 2, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0_rest", "ipc::edge_edge_mollifier_threshold::ea0_rest", "The rest position of the first vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1_rest", "ipc::edge_edge_mollifier_threshold::ea1_rest", "The rest position of the second vertex of the first edge."], [10, 2, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb0_rest", "ipc::edge_edge_mollifier_threshold::eb0_rest", "The rest position of the first vertex of the second edge."], [10, 2, 2, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-eb1_rest", "ipc::edge_edge_mollifier_threshold::eb1_rest", "The rest position of the second vertex of the second edge."], [7, 1, 1, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", "ipc::edge_edge_nonlinear_ccd", "Perform nonlinear CCD between two linear edges moving along nonlinear trajectories."], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::edge_edge_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-ea0", "ipc::edge_edge_nonlinear_ccd::ea0", "[in] First edge's first endpoint's trajectory"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-ea1", "ipc::edge_edge_nonlinear_ccd::ea1", "[in] First edge's second endpoint's trajectory"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-eb0", "ipc::edge_edge_nonlinear_ccd::eb0", "[in] Second edge's first endpoint's trajectory"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-eb1", "ipc::edge_edge_nonlinear_ccd::eb1", "[in] Second edge's second endpoint's trajectory"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::edge_edge_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::edge_edge_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the two edges"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::edge_edge_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::edge_edge_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 2, 2, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::edge_edge_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 1, 1, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::edge_edge_relative_velocity", "Compute the relative velocity of the edges."], [11, 2, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-coords", "ipc::edge_edge_relative_velocity::coords", "Two parametric coordinates of the closest points on the edges"], [11, 2, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dea0", "ipc::edge_edge_relative_velocity::dea0", "Velocity of the first endpoint of the first edge"], [11, 2, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dea1", "ipc::edge_edge_relative_velocity::dea1", "Velocity of the second endpoint of the first edge"], [11, 2, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-deb0", "ipc::edge_edge_relative_velocity::deb0", "Velocity of the first endpoint of the second edge"], [11, 2, 2, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-deb1", "ipc::edge_edge_relative_velocity::deb1", "Velocity of the second endpoint of the second edge"], [11, 1, 1, "_CPPv4N3ipc34edge_edge_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::edge_edge_relative_velocity_matrix", ""], [11, 2, 2, "_CPPv4N3ipc34edge_edge_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::edge_edge_relative_velocity_matrix::coords", ""], [11, 2, 2, "_CPPv4N3ipc34edge_edge_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::edge_edge_relative_velocity_matrix::dim", ""], [11, 1, 1, "_CPPv4N3ipc43edge_edge_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::edge_edge_relative_velocity_matrix_jacobian", ""], [11, 2, 2, "_CPPv4N3ipc43edge_edge_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::edge_edge_relative_velocity_matrix_jacobian::coords", ""], [11, 2, 2, "_CPPv4N3ipc43edge_edge_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::edge_edge_relative_velocity_matrix_jacobian::dim", ""], [11, 1, 1, "_CPPv4N3ipc23edge_edge_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4N3ipc23edge_edge_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis::ea0", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4N3ipc23edge_edge_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis::ea1", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4N3ipc23edge_edge_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis::eb0", "Compute a basis for the space tangent to the edge-edge pair."], [11, 2, 2, "_CPPv4N3ipc23edge_edge_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis::eb1", "Compute a basis for the space tangent to the edge-edge pair."], [11, 1, 1, "_CPPv4N3ipc32edge_edge_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis_jacobian", ""], [11, 2, 2, "_CPPv4N3ipc32edge_edge_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis_jacobian::ea0", ""], [11, 2, 2, "_CPPv4N3ipc32edge_edge_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis_jacobian::ea1", ""], [11, 2, 2, "_CPPv4N3ipc32edge_edge_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis_jacobian::eb0", ""], [11, 2, 2, "_CPPv4N3ipc32edge_edge_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::edge_edge_tangent_basis_jacobian::eb1", ""], [11, 1, 1, "_CPPv4N3ipc5f0_SFEKdKd", "ipc::f0_SF", "Smooth friction mollifier function."], [11, 2, 2, "_CPPv4N3ipc5f0_SFEKdKd-p-epsv", "ipc::f0_SF::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4N3ipc5f0_SFEKdKd-p-s", "ipc::f0_SF::s", "The tangential relative speed."], [11, 1, 1, "_CPPv4N3ipc12f1_SF_over_xEKdKd", "ipc::f1_SF_over_x", "Compute the derivative of f0_SF divided by s ( \\frac{f_0'(s)}{s})."], [11, 2, 2, "_CPPv4N3ipc12f1_SF_over_xEKdKd-p-epsv", "ipc::f1_SF_over_x::epsv", "Mollifier parameter \\epsilon_v."], [11, 2, 2, "_CPPv4N3ipc12f1_SF_over_xEKdKd-p-s", "ipc::f1_SF_over_x::s", "The tangential relative speed."], [12, 1, 1, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod", "ipc::has_intersections", "Determine if the mesh has self intersections."], [12, 2, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-broad_phase_method", "ipc::has_intersections::broad_phase_method", "The broad phase method to use."], [12, 2, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-mesh", "ipc::has_intersections::mesh", "The collision mesh."], [12, 2, 2, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod-p-vertices", "ipc::has_intersections::vertices", "Vertices of the collision mesh."], [4, 1, 1, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd", "ipc::initial_barrier_stiffness", "Compute an inital barrier stiffness using the barrier potential gradient."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-average_mass", "ipc::initial_barrier_stiffness::average_mass", "[in] Average mass of all bodies."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-bbox_diagonal", "ipc::initial_barrier_stiffness::bbox_diagonal", "[in] Length of the diagonal of the bounding box of the scene."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-dhat", "ipc::initial_barrier_stiffness::dhat", "[in] Activation distance of the barrier."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-dmin", "ipc::initial_barrier_stiffness::dmin", "[in] Minimum distance between elements."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-grad_barrier", "ipc::initial_barrier_stiffness::grad_barrier", "[in] Gradient of the barrier potential."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-grad_energy", "ipc::initial_barrier_stiffness::grad_energy", "[in] Gradient of the elasticity energy function."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-max_barrier_stiffness", "ipc::initial_barrier_stiffness::max_barrier_stiffness", "[out] Maximum stiffness of the barrier."], [4, 2, 2, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd-p-min_barrier_stiffness_scale", "ipc::initial_barrier_stiffness::min_barrier_stiffness_scale", "[in] Scale used to premultiply the minimum barrier stiffness."], [12, 1, 1, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE", "ipc::is_edge_intersecting_triangle", ""], [12, 2, 2, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE", "ipc::is_edge_intersecting_triangle::e0", ""], [12, 2, 2, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE", "ipc::is_edge_intersecting_triangle::e1", ""], [12, 2, 2, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE", "ipc::is_edge_intersecting_triangle::t0", ""], [12, 2, 2, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE", "ipc::is_edge_intersecting_triangle::t1", ""], [12, 2, 2, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE", "ipc::is_edge_intersecting_triangle::t2", ""], [7, 1, 1, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl", "ipc::is_step_collision_free", "Determine if the step is collision free."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-broad_phase_method", "ipc::is_step_collision_free::broad_phase_method", "The broad phase method to use."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-max_iterations", "ipc::is_step_collision_free::max_iterations", "The maximum number of iterations for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-mesh", "ipc::is_step_collision_free::mesh", "The collision mesh."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-min_distance", "ipc::is_step_collision_free::min_distance", "The minimum distance allowable between any two elements."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-tolerance", "ipc::is_step_collision_free::tolerance", "The tolerance for the CCD algorithm."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t0", "ipc::is_step_collision_free::vertices_t0", "Surface vertex vertices at start as rows of a matrix."], [7, 2, 2, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl-p-vertices_t1", "ipc::is_step_collision_free::vertices_t1", "Surface vertex vertices at end as rows of a matrix."], [10, 1, 1, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance", "Compute the distance between a two infinite lines in 3D."], [10, 2, 2, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::line_line_distance::ea0", "The first vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::line_line_distance::ea1", "The second vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance::eb0", "Compute the distance between a two infinite lines in 3D."], [10, 2, 2, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance::eb1", "Compute the distance between a two infinite lines in 3D."], [10, 1, 1, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance_gradient", "Compute the gradient of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::line_line_distance_gradient::ea0", "The first vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::line_line_distance_gradient::ea1", "The second vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance_gradient::eb0", "Compute the gradient of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance_gradient::eb1", "Compute the gradient of the distance between a two lines in 3D."], [10, 1, 1, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance_hessian", "Compute the hessian of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea0", "ipc::line_line_distance_hessian::ea0", "The first vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-ea1", "ipc::line_line_distance_hessian::ea1", "The second vertex of the edge defining the second line."], [10, 2, 2, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance_hessian::eb0", "Compute the hessian of the distance between a two lines in 3D."], [10, 2, 2, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::line_line_distance_hessian::eb1", "Compute the hessian of the distance between a two lines in 3D."], [13, 1, 1, "_CPPv4N3ipc6loggerEv", "ipc::logger", "Retrieves the current logger."], [7, 1, 1, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_edge_ccd", "Computes the time of impact between a point and an edge using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_edge_ccd::conservative_rescaling", "[in] The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-e0_t0", "ipc::point_edge_ccd::e0_t0", "[in] The initial position of the first endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-e0_t1", "ipc::point_edge_ccd::e0_t1", "[in] The final position of the first endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-e1_t0", "ipc::point_edge_ccd::e1_t0", "[in] The initial position of the second endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-e1_t1", "ipc::point_edge_ccd::e1_t1", "[in] The final position of the second endpoint of the edge."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-max_iterations", "ipc::point_edge_ccd::max_iterations", "[in] The maximum number of iterations to perform."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-min_distance", "ipc::point_edge_ccd::min_distance", "[in] The minimum distance between the objects."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-p_t0", "ipc::point_edge_ccd::p_t0", "[in] The initial position of the point."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-p_t1", "ipc::point_edge_ccd::p_t1", "[in] The final position of the point."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-tmax", "ipc::point_edge_ccd::tmax", "[in] The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-toi", "ipc::point_edge_ccd::toi", "[out] The time of impact between the point and the edge."], [7, 2, 2, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-tolerance", "ipc::point_edge_ccd::tolerance", "[in] The error tolerance for the time of impact."], [10, 1, 1, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType", "ipc::point_edge_distance", "Compute the distance between a point and edge in 2D or 3D."], [10, 2, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance::dtype", "The point edge distance type to compute."], [10, 2, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance::e0", "The first vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance::e1", "The second vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance::p", "The point."], [10, 1, 1, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType", "ipc::point_edge_distance_gradient", "Compute the gradient of the distance between a point and edge."], [10, 2, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance_gradient::dtype", "The point edge distance type to compute."], [10, 2, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance_gradient::e0", "The first vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance_gradient::e1", "The second vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance_gradient::p", "The point."], [10, 1, 1, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType", "ipc::point_edge_distance_hessian", "Compute the hessian of the distance between a point and edge."], [10, 2, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-dtype", "ipc::point_edge_distance_hessian::dtype", "The point edge distance type to compute."], [10, 2, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e0", "ipc::point_edge_distance_hessian::e0", "The first vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-e1", "ipc::point_edge_distance_hessian::e1", "The second vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType-p-p", "ipc::point_edge_distance_hessian::p", "The point."], [10, 1, 1, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_distance_type", "Determine the closest pair between a point and edge."], [10, 2, 2, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_edge_distance_type::e0", "The first vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_edge_distance_type::e1", "The second vertex of the edge."], [10, 2, 2, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_edge_distance_type::p", "The point."], [7, 1, 1, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", "ipc::point_edge_nonlinear_ccd", "Perform nonlinear CCD between a point and a linear edge moving along nonlinear trajectories."], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_edge_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-e0", "ipc::point_edge_nonlinear_ccd::e0", "[in] Edge's first endpoint's trajectory"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-e1", "ipc::point_edge_nonlinear_ccd::e1", "[in] Edge's second endpoint's trajectory"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::point_edge_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::point_edge_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the point and the edge"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p", "ipc::point_edge_nonlinear_ccd::p", "[in] Point's trajectory"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::point_edge_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::point_edge_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 2, 2, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::point_edge_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 1, 1, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd", "ipc::point_edge_relative_velocity", "Compute the relative velocity of a point and an edge."], [11, 2, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-alpha", "ipc::point_edge_relative_velocity::alpha", "Parametric coordinate of the closest point on the edge"], [11, 2, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-de0", "ipc::point_edge_relative_velocity::de0", "Velocity of the first endpoint of the edge"], [11, 2, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-de1", "ipc::point_edge_relative_velocity::de1", "Velocity of the second endpoint of the edge"], [11, 2, 2, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd-p-dp", "ipc::point_edge_relative_velocity::dp", "Velocity of the point"], [11, 1, 1, "_CPPv4N3ipc35point_edge_relative_velocity_matrixEKiKd", "ipc::point_edge_relative_velocity_matrix", ""], [11, 2, 2, "_CPPv4N3ipc35point_edge_relative_velocity_matrixEKiKd", "ipc::point_edge_relative_velocity_matrix::alpha", ""], [11, 2, 2, "_CPPv4N3ipc35point_edge_relative_velocity_matrixEKiKd", "ipc::point_edge_relative_velocity_matrix::dim", ""], [11, 1, 1, "_CPPv4N3ipc44point_edge_relative_velocity_matrix_jacobianEKiKd", "ipc::point_edge_relative_velocity_matrix_jacobian", ""], [11, 2, 2, "_CPPv4N3ipc44point_edge_relative_velocity_matrix_jacobianEKiKd", "ipc::point_edge_relative_velocity_matrix_jacobian::alpha", ""], [11, 2, 2, "_CPPv4N3ipc44point_edge_relative_velocity_matrix_jacobianEKiKd", "ipc::point_edge_relative_velocity_matrix_jacobian::dim", ""], [11, 1, 1, "_CPPv4N3ipc24point_edge_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis", ""], [11, 2, 2, "_CPPv4N3ipc24point_edge_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis::e0", ""], [11, 2, 2, "_CPPv4N3ipc24point_edge_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis::e1", ""], [11, 2, 2, "_CPPv4N3ipc24point_edge_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis::p", ""], [11, 1, 1, "_CPPv4N3ipc33point_edge_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis_jacobian", ""], [11, 2, 2, "_CPPv4N3ipc33point_edge_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis_jacobian::e0", ""], [11, 2, 2, "_CPPv4N3ipc33point_edge_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis_jacobian::e1", ""], [11, 2, 2, "_CPPv4N3ipc33point_edge_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_edge_tangent_basis_jacobian::p", ""], [10, 1, 1, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_line_distance", "Compute the distance between a point and line in 2D or 3D."], [10, 2, 2, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_line_distance::e0", "The first vertex of the edge defining the line."], [10, 2, 2, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_line_distance::e1", "The second vertex of the edge defining the line."], [10, 2, 2, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_line_distance::p", "The point."], [10, 1, 1, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_line_distance_gradient", "Compute the gradient of the distance between a point and line."], [10, 2, 2, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_line_distance_gradient::e0", "The first vertex of the edge defining the line."], [10, 2, 2, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_line_distance_gradient::e1", "The second vertex of the edge defining the line."], [10, 2, 2, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_line_distance_gradient::p", "The point."], [10, 1, 1, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_line_distance_hessian", "Compute the hessian of the distance between a point and line."], [10, 2, 2, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e0", "ipc::point_line_distance_hessian::e0", "The first vertex of the edge defining the line."], [10, 2, 2, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-e1", "ipc::point_line_distance_hessian::e1", "The second vertex of the edge defining the line."], [10, 2, 2, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p", "ipc::point_line_distance_hessian::p", "The point."], [10, 1, 1, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_plane_distance", "Compute the distance between a point and a plane."], [10, 1, 1, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_plane_distance", "Compute the distance between a point and a plane."], [10, 2, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-normal", "ipc::point_plane_distance::normal", "The normal of the plane."], [10, 2, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-origin", "ipc::point_plane_distance::origin", "The origin of the plane."], [10, 2, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance::p", "The point."], [10, 2, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance::p", "The point."], [10, 2, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_plane_distance::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_plane_distance::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_plane_distance::t2", "The third vertex of the triangle."], [10, 1, 1, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_plane_distance_gradient", "Compute the gradient of the distance between a point and a plane."], [10, 1, 1, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_plane_distance_gradient", "Compute the gradient of the distance between a point and a plane."], [10, 2, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-normal", "ipc::point_plane_distance_gradient::normal", "The normal of the plane."], [10, 2, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-origin", "ipc::point_plane_distance_gradient::origin", "The origin of the plane."], [10, 2, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_gradient::p", "The point."], [10, 2, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_gradient::p", "The point."], [10, 2, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_plane_distance_gradient::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_plane_distance_gradient::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_plane_distance_gradient::t2", "The third vertex of the triangle."], [10, 1, 1, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_plane_distance_hessian", "Compute the hessian of the distance between a point and a plane."], [10, 1, 1, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_plane_distance_hessian", "Compute the hessian of the distance between a point and a plane."], [10, 2, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-normal", "ipc::point_plane_distance_hessian::normal", "The normal of the plane."], [10, 2, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-origin", "ipc::point_plane_distance_hessian::origin", "The origin of the plane."], [10, 2, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_hessian::p", "The point."], [10, 2, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_plane_distance_hessian::p", "The point."], [10, 2, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_plane_distance_hessian::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_plane_distance_hessian::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_plane_distance_hessian::t2", "The third vertex of the triangle."], [7, 1, 1, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd", "ipc::point_point_ccd", "Computes the time of impact between two points using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_point_ccd::conservative_rescaling", "[in] The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-max_iterations", "ipc::point_point_ccd::max_iterations", "[in] The maximum number of iterations to perform."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-min_distance", "ipc::point_point_ccd::min_distance", "[in] The minimum distance between the points."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-p0_t0", "ipc::point_point_ccd::p0_t0", "[in] The initial position of the first point."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-p0_t1", "ipc::point_point_ccd::p0_t1", "[in] The final position of the first point."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-p1_t0", "ipc::point_point_ccd::p1_t0", "[in] The initial position of the second point."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-p1_t1", "ipc::point_point_ccd::p1_t1", "[in] The final position of the second point."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-tmax", "ipc::point_point_ccd::tmax", "[in] The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-toi", "ipc::point_point_ccd::toi", "[out] The time of impact between the two points."], [7, 2, 2, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd-p-tolerance", "ipc::point_point_ccd::tolerance", "[in] The error tolerance for the time of impact."], [10, 1, 1, "_CPPv4N3ipc20point_point_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_distance", "Compute the distance between two points."], [10, 2, 2, "_CPPv4N3ipc20point_point_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_distance::p0", "The first point."], [10, 2, 2, "_CPPv4N3ipc20point_point_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_distance::p1", "The second point."], [10, 1, 1, "_CPPv4N3ipc29point_point_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_distance_gradient", "Compute the gradient of the distance between two points."], [10, 2, 2, "_CPPv4N3ipc29point_point_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_distance_gradient::p0", "The first point."], [10, 2, 2, "_CPPv4N3ipc29point_point_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_distance_gradient::p1", "The second point."], [10, 1, 1, "_CPPv4N3ipc28point_point_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_distance_hessian", "Compute the hessian of the distance between two points."], [10, 2, 2, "_CPPv4N3ipc28point_point_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_distance_hessian::p0", "The first point."], [10, 2, 2, "_CPPv4N3ipc28point_point_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_distance_hessian::p1", "The second point."], [7, 1, 1, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", "ipc::point_point_nonlinear_ccd", "Perform nonlinear CCD between two points moving along nonlinear trajectories."], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_point_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::point_point_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::point_point_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the two points"], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p0", "ipc::point_point_nonlinear_ccd::p0", "[in] First point's trajectory"], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p1", "ipc::point_point_nonlinear_ccd::p1", "[in] Second point's trajectory"], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::point_point_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::point_point_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 2, 2, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::point_point_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 1, 1, "_CPPv4N3ipc29point_point_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_relative_velocity", "Compute the relative velocity of two points."], [11, 2, 2, "_CPPv4N3ipc29point_point_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-dp0", "ipc::point_point_relative_velocity::dp0", "Velocity of the first point"], [11, 2, 2, "_CPPv4N3ipc29point_point_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-dp1", "ipc::point_point_relative_velocity::dp1", "Velocity of the second point"], [11, 1, 1, "_CPPv4N3ipc36point_point_relative_velocity_matrixEKi", "ipc::point_point_relative_velocity_matrix", "Compute the relative velocity premultiplier matrix."], [11, 2, 2, "_CPPv4N3ipc36point_point_relative_velocity_matrixEKi-p-dim", "ipc::point_point_relative_velocity_matrix::dim", "Dimension (2 or 3)"], [11, 1, 1, "_CPPv4N3ipc45point_point_relative_velocity_matrix_jacobianEKi", "ipc::point_point_relative_velocity_matrix_jacobian", "Compute the jacobian of the relative velocity premultiplier matrix."], [11, 2, 2, "_CPPv4N3ipc45point_point_relative_velocity_matrix_jacobianEKi-p-dim", "ipc::point_point_relative_velocity_matrix_jacobian::dim", "Dimension (2 or 3)"], [11, 1, 1, "_CPPv4N3ipc25point_point_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_tangent_basis", "Compute a basis for the space tangent to the point-point pair."], [11, 2, 2, "_CPPv4N3ipc25point_point_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p0", "ipc::point_point_tangent_basis::p0", "First point"], [11, 2, 2, "_CPPv4N3ipc25point_point_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE-p-p1", "ipc::point_point_tangent_basis::p1", "Second point"], [11, 1, 1, "_CPPv4N3ipc34point_point_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_tangent_basis_jacobian", ""], [11, 2, 2, "_CPPv4N3ipc34point_point_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_tangent_basis_jacobian::p0", ""], [11, 2, 2, "_CPPv4N3ipc34point_point_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE", "ipc::point_point_tangent_basis_jacobian::p1", ""], [7, 1, 1, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd", "ipc::point_triangle_ccd", "Computes the time of impact between a point and a triangle in 3D using continuous collision detection."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_triangle_ccd::conservative_rescaling", "[in] The conservative rescaling of the time of impact."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-max_iterations", "ipc::point_triangle_ccd::max_iterations", "[in] The maximum number of iterations to perform."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-min_distance", "ipc::point_triangle_ccd::min_distance", "[in] The minimum distance between the objects."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-p_t0", "ipc::point_triangle_ccd::p_t0", "[in] The initial position of the point."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-p_t1", "ipc::point_triangle_ccd::p_t1", "[in] The final position of the point."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-t0_t0", "ipc::point_triangle_ccd::t0_t0", "[in] The initial position of the first vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-t0_t1", "ipc::point_triangle_ccd::t0_t1", "[in] The final position of the first vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-t1_t0", "ipc::point_triangle_ccd::t1_t0", "[in] The initial position of the second vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-t1_t1", "ipc::point_triangle_ccd::t1_t1", "[in] The final position of the second vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-t2_t0", "ipc::point_triangle_ccd::t2_t0", "[in] The initial position of the third vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-t2_t1", "ipc::point_triangle_ccd::t2_t1", "[in] The final position of the third vertex of the triangle."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-tmax", "ipc::point_triangle_ccd::tmax", "[in] The maximum time to check for collisions."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-toi", "ipc::point_triangle_ccd::toi", "[out] The time of impact between the point and the triangle."], [7, 2, 2, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd-p-tolerance", "ipc::point_triangle_ccd::tolerance", "[in] The error tolerance for the time of impact."], [10, 1, 1, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType", "ipc::point_triangle_distance", "Compute the distance between a points and a triangle."], [10, 2, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance::dtype", "The point-triangle distance type to compute."], [10, 2, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance::p", "The point."], [10, 2, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance::t2", "The third vertex of the triangle."], [10, 1, 1, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType", "ipc::point_triangle_distance_gradient", "Compute the gradient of the distance between a points and a triangle."], [10, 2, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance_gradient::dtype", "The point-triangle distance type to compute."], [10, 2, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance_gradient::p", "The point."], [10, 2, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance_gradient::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance_gradient::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance_gradient::t2", "The third vertex of the triangle."], [10, 1, 1, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType", "ipc::point_triangle_distance_hessian", "Compute the hessian of the distance between a points and a triangle."], [10, 2, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-dtype", "ipc::point_triangle_distance_hessian::dtype", "The point-triangle distance type to compute."], [10, 2, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-p", "ipc::point_triangle_distance_hessian::p", "The point."], [10, 2, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t0", "ipc::point_triangle_distance_hessian::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t1", "ipc::point_triangle_distance_hessian::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType-p-t2", "ipc::point_triangle_distance_hessian::t2", "The third vertex of the triangle."], [10, 1, 1, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_triangle_distance_type", "Determine the closest pair between a point and triangle."], [10, 2, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_triangle_distance_type::p", "The point."], [10, 2, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_triangle_distance_type::t0", "The first vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_triangle_distance_type::t1", "The second vertex of the triangle."], [10, 2, 2, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_triangle_distance_type::t2", "The third vertex of the triangle."], [7, 1, 1, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd", "ipc::point_triangle_nonlinear_ccd", "Perform nonlinear CCD between a point and a linear triangle moving along nonlinear trajectories."], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-conservative_rescaling", "ipc::point_triangle_nonlinear_ccd::conservative_rescaling", "[in] Conservative rescaling of the time of impact"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-max_iterations", "ipc::point_triangle_nonlinear_ccd::max_iterations", "[in] Maximum number of iterations for the linear CCD algorithm"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-min_distance", "ipc::point_triangle_nonlinear_ccd::min_distance", "[in] Minimum separation distance between the two edges"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-p", "ipc::point_triangle_nonlinear_ccd::p", "[in] Point's trajectory"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-t0", "ipc::point_triangle_nonlinear_ccd::t0", "[in] Triangle's first vertex's trajectory"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-t1", "ipc::point_triangle_nonlinear_ccd::t1", "[in] Triangle's second vertex's trajectory"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-t2", "ipc::point_triangle_nonlinear_ccd::t2", "[in] Triangle's third vertex's trajectory"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tmax", "ipc::point_triangle_nonlinear_ccd::tmax", "[in] Maximum time to check for collision"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-toi", "ipc::point_triangle_nonlinear_ccd::toi", "[out] Output time of impact"], [7, 2, 2, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd-p-tolerance", "ipc::point_triangle_nonlinear_ccd::tolerance", "[in] Tolerance for the linear CCD algorithm"], [11, 1, 1, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::point_triangle_relative_velocity", "Compute the relative velocity of the point to the triangle."], [11, 2, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-coords", "ipc::point_triangle_relative_velocity::coords", "Baricentric coordinates of the closest point on the triangle"], [11, 2, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dp", "ipc::point_triangle_relative_velocity::dp", "Velocity of the point"], [11, 2, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dt0", "ipc::point_triangle_relative_velocity::dt0", "Velocity of the first vertex of the triangle"], [11, 2, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dt1", "ipc::point_triangle_relative_velocity::dt1", "Velocity of the second vertex of the triangle"], [11, 2, 2, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE-p-dt2", "ipc::point_triangle_relative_velocity::dt2", "Velocity of the third vertex of the triangle"], [11, 1, 1, "_CPPv4N3ipc39point_triangle_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::point_triangle_relative_velocity_matrix", ""], [11, 2, 2, "_CPPv4N3ipc39point_triangle_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::point_triangle_relative_velocity_matrix::coords", ""], [11, 2, 2, "_CPPv4N3ipc39point_triangle_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::point_triangle_relative_velocity_matrix::dim", ""], [11, 1, 1, "_CPPv4N3ipc48point_triangle_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::point_triangle_relative_velocity_matrix_jacobian", ""], [11, 2, 2, "_CPPv4N3ipc48point_triangle_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::point_triangle_relative_velocity_matrix_jacobian::coords", ""], [11, 2, 2, "_CPPv4N3ipc48point_triangle_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE", "ipc::point_triangle_relative_velocity_matrix_jacobian::dim", ""], [11, 1, 1, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_triangle_tangent_basis", "Compute a basis for the space tangent to the point-triangle pair."], [11, 2, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-p", "ipc::point_triangle_tangent_basis::p", "Point"], [11, 2, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t0", "ipc::point_triangle_tangent_basis::t0", "Triangle's first vertex"], [11, 2, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t1", "ipc::point_triangle_tangent_basis::t1", "Triangle's second vertex"], [11, 2, 2, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE-p-t2", "ipc::point_triangle_tangent_basis::t2", "Triangle's third vertex"], [11, 1, 1, "_CPPv4N3ipc37point_triangle_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_triangle_tangent_basis_jacobian", ""], [11, 2, 2, "_CPPv4N3ipc37point_triangle_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_triangle_tangent_basis_jacobian::p", ""], [11, 2, 2, "_CPPv4N3ipc37point_triangle_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_triangle_tangent_basis_jacobian::t0", ""], [11, 2, 2, "_CPPv4N3ipc37point_triangle_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_triangle_tangent_basis_jacobian::t1", ""], [11, 2, 2, "_CPPv4N3ipc37point_triangle_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE", "ipc::point_triangle_tangent_basis_jacobian::t2", ""], [13, 1, 1, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd", "Matrix projection onto positive definite cone."], [13, 2, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd-p-A", "ipc::project_to_pd::A", "Symmetric matrix to project"], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd::_Cols", "Matrix projection onto positive definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd::_MaxCols", "Matrix projection onto positive definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd::_MaxRows", "Matrix projection onto positive definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd::_Options", "Matrix projection onto positive definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd::_Rows", "Matrix projection onto positive definite cone."], [13, 4, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd::_Scalar", "Matrix projection onto positive definite cone."], [13, 2, 2, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd", "ipc::project_to_pd::eps", "Matrix projection onto positive definite cone."], [13, 1, 1, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE", "ipc::project_to_psd", "Matrix projection onto positive semi-definite cone."], [13, 2, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE-p-A", "ipc::project_to_psd::A", "Symmetric matrix to project"], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE", "ipc::project_to_psd::_Cols", "Matrix projection onto positive semi-definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE", "ipc::project_to_psd::_MaxCols", "Matrix projection onto positive semi-definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE", "ipc::project_to_psd::_MaxRows", "Matrix projection onto positive semi-definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE", "ipc::project_to_psd::_Options", "Matrix projection onto positive semi-definite cone."], [13, 5, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE", "ipc::project_to_psd::_Rows", "Matrix projection onto positive semi-definite cone."], [13, 4, 2, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE", "ipc::project_to_psd::_Scalar", "Matrix projection onto positive semi-definite cone."], [13, 1, 1, "_CPPv4N3ipc10set_loggerENSt10shared_ptrIN6spdlog6loggerEEE", "ipc::set_logger", "Setup a logger object."], [13, 2, 2, "_CPPv4N3ipc10set_loggerENSt10shared_ptrIN6spdlog6loggerEEE-p-logger", "ipc::set_logger::logger", "New logger object to be used."], [4, 1, 1, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd", "ipc::update_barrier_stiffness", "Update the barrier stiffness if the distance is decreasing and less than dhat_epsilon_scale * diag."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-barrier_stiffness", "ipc::update_barrier_stiffness::barrier_stiffness", "[in] Current barrier stiffness."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-bbox_diagonal", "ipc::update_barrier_stiffness::bbox_diagonal", "[in] Length of the diagonal of the bounding box of the scene."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-dhat_epsilon_scale", "ipc::update_barrier_stiffness::dhat_epsilon_scale", "[in] Update if distance is less than this fraction of the diagonal."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-dmin", "ipc::update_barrier_stiffness::dmin", "[in] Minimum distance between elements."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-max_barrier_stiffness", "ipc::update_barrier_stiffness::max_barrier_stiffness", "[in] Maximum stiffness of the barrier."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-min_distance", "ipc::update_barrier_stiffness::min_distance", "[in] Current minimum distance between elements."], [4, 2, 2, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd-p-prev_min_distance", "ipc::update_barrier_stiffness::prev_min_distance", "[in] Previous minimum distance between elements."]], "ipctk": [[18, 8, 1, 0, "AABB", "Bases: pybind11_object"], [18, 8, 1, 0, "BVH", "Bases: BroadPhase"], [18, 8, 1, 0, "BroadPhase", "Bases: pybind11_object"], [18, 8, 1, 0, "BroadPhaseMethod", "Bases: pybind11_object"], [18, 8, 1, 0, "BruteForce", "Bases: BroadPhase"], [19, 8, 1, 0, "Candidates", "Bases: pybind11_object"], [21, 8, 1, 0, "CollisionConstraint", "Bases: CollisionStencil"], [21, 8, 1, 0, "CollisionConstraints", "Bases: pybind11_object"], [22, 8, 1, 0, "CollisionMesh", "Bases: pybind11_object"], [19, 8, 1, 0, "ContinuousCollisionCandidate", "Bases: pybind11_object"], [19, 8, 1, 0, "EdgeEdgeCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [21, 8, 1, 0, "EdgeEdgeConstraint", "Bases: EdgeEdgeCandidate, CollisionConstraint"], [23, 8, 1, 0, "EdgeEdgeDistanceType", "Bases: pybind11_object"], [24, 8, 1, 0, "EdgeEdgeFrictionConstraint", "Bases: EdgeEdgeCandidate, FrictionConstraint"], [19, 8, 1, 0, "EdgeFaceCandidate", "Bases: pybind11_object"], [19, 8, 1, 0, "EdgeVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [21, 8, 1, 0, "EdgeVertexConstraint", "Bases: EdgeVertexCandidate, CollisionConstraint"], [24, 8, 1, 0, "EdgeVertexFrictionConstraint", "Bases: EdgeVertexCandidate, FrictionConstraint"], [19, 8, 1, 0, "FaceVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [21, 8, 1, 0, "FaceVertexConstraint", "Bases: FaceVertexCandidate, CollisionConstraint"], [24, 8, 1, 0, "FaceVertexFrictionConstraint", "Bases: FaceVertexCandidate, FrictionConstraint"], [24, 8, 1, 0, "FrictionConstraint", "Bases: CollisionStencil"], [24, 8, 1, 0, "FrictionConstraints", "Bases: pybind11_object"], [18, 8, 1, 0, "HashGrid", "Bases: BroadPhase"], [20, 8, 1, 0, "IntervalNonlinearTrajectory", "Bases: NonlinearTrajectory"], [26, 8, 1, 0, "LoggerLevel", "Bases: pybind11_object"], [20, 8, 1, 0, "NonlinearTrajectory", "Bases: pybind11_object"], [21, 8, 1, 0, "PlaneVertexConstraint", "Bases: CollisionConstraint"], [23, 8, 1, 0, "PointEdgeDistanceType", "Bases: pybind11_object"], [23, 8, 1, 0, "PointTriangleDistanceType", "Bases: pybind11_object"], [18, 8, 1, 0, "SpatialHash", "Bases: BroadPhase"], [18, 8, 1, 0, "SweepAndTiniestQueue", "Bases: CopyMeshBroadPhase"], [19, 8, 1, 0, "VertexVertexCandidate", "Bases: CollisionStencil, ContinuousCollisionCandidate"], [21, 8, 1, 0, "VertexVertexConstraint", "Bases: VertexVertexCandidate, CollisionConstraint"], [24, 8, 1, 0, "VertexVertexFrictionConstraint", "Bases: VertexVertexCandidate, FrictionConstraint"], [17, 13, 1, 0, "barrier", "Function that grows to infinity as d approaches 0 from the right."], [17, 13, 1, 0, "barrier_gradient", "Derivative of the barrier function."], [17, 13, 1, 0, "barrier_hessian", "Second derivative of the barrier function."], [20, 13, 1, 0, "ccd_strategy", "Perform the CCD strategy outlined by Li et al. [2020]."], [20, 13, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free."], [24, 13, 1, 0, "compute_normal_force_magnitude", ""], [24, 13, 1, 0, "compute_normal_force_magnitude_gradient", ""], [20, 13, 1, 0, "conservative_piecewise_linear_ccd", "Perform conservative piecewise linear CCD of a nonlinear trajectories."], [24, 13, 1, 0, "df1_x_minus_f1_over_x3", "The derivative of f1 times s minus f1 all divided by s cubed."], [20, 13, 1, 0, "edge_edge_ccd", "Computes the time of impact between two edges in 3D using continuous collision detection."], [23, 13, 1, 0, "edge_edge_cross_squarednorm", "Compute the squared norm of the edge-edge cross product."], [23, 13, 1, 0, "edge_edge_cross_squarednorm_gradient", "Compute the gradient of the squared norm of the edge cross product."], [23, 13, 1, 0, "edge_edge_cross_squarednorm_hessian", "Compute the hessian of the squared norm of the edge cross product."], [23, 13, 1, 0, "edge_edge_distance", "Compute the distance between a two lines segments in 3D."], [23, 13, 1, 0, "edge_edge_distance_gradient", "Compute the gradient of the distance between a two lines segments."], [23, 13, 1, 0, "edge_edge_distance_hessian", "Compute the hessian of the distance between a two lines segments."], [23, 13, 1, 0, "edge_edge_distance_type", "Determine the closest pair between two edges."], [23, 13, 1, 0, "edge_edge_mollifier", "Overloaded function."], [23, 13, 1, 0, "edge_edge_mollifier_gradient", "Overloaded function."], [23, 13, 1, 0, "edge_edge_mollifier_hessian", "Overloaded function."], [23, 13, 1, 0, "edge_edge_mollifier_threshold", "Compute the threshold of the mollifier edge-edge distance."], [20, 13, 1, 0, "edge_edge_nonlinear_ccd", "Perform nonlinear CCD between two linear edges moving along nonlinear trajectories."], [24, 13, 1, 0, "edge_edge_relative_velocity", "Compute the relative velocity of the edges."], [24, 13, 1, 0, "edge_edge_relative_velocity_matrix", ""], [24, 13, 1, 0, "edge_edge_relative_velocity_matrix_jacobian", ""], [24, 13, 1, 0, "edge_edge_tangent_basis", "Compute a basis for the space tangent to the edge-edge pair."], [24, 13, 1, 0, "edge_edge_tangent_basis_jacobian", ""], [24, 13, 1, 0, "f0_SF", "Smooth friction mollifier function."], [24, 13, 1, 0, "f1_SF_over_x", "Compute the derivative of f0_SF divided by s (\\frac{f_0'(s)}{s})."], [26, 13, 1, 0, "get_num_threads", "get maximum number of threads to use"], [25, 13, 1, 0, "has_intersections", "Determine if the mesh has self intersections."], [17, 13, 1, 0, "initial_barrier_stiffness", "Compute an inital barrier stiffness using the barrier potential gradient."], [25, 13, 1, 0, "is_edge_intersecting_triangle", ""], [20, 13, 1, 0, "is_step_collision_free", "Determine if the step is collision free."], [23, 13, 1, 0, "line_line_distance", "Compute the distance between a two infinite lines in 3D."], [23, 13, 1, 0, "line_line_distance_gradient", "Compute the gradient of the distance between a two lines in 3D."], [23, 13, 1, 0, "line_line_distance_hessian", "Compute the hessian of the distance between a two lines in 3D."], [20, 13, 1, 0, "point_edge_ccd", "Computes the time of impact between a point and an edge using continuous collision detection."], [23, 13, 1, 0, "point_edge_distance", "Compute the distance between a point and edge in 2D or 3D."], [23, 13, 1, 0, "point_edge_distance_gradient", "Compute the gradient of the distance between a point and edge."], [23, 13, 1, 0, "point_edge_distance_hessian", "Compute the hessian of the distance between a point and edge."], [23, 13, 1, 0, "point_edge_distance_type", "Determine the closest pair between a point and edge."], [20, 13, 1, 0, "point_edge_nonlinear_ccd", "Perform nonlinear CCD between a point and a linear edge moving along nonlinear trajectories."], [24, 13, 1, 0, "point_edge_relative_velocity", "Compute the relative velocity of a point and an edge"], [24, 13, 1, 0, "point_edge_relative_velocity_matrix", ""], [24, 13, 1, 0, "point_edge_relative_velocity_matrix_jacobian", ""], [24, 13, 1, 0, "point_edge_tangent_basis", ""], [24, 13, 1, 0, "point_edge_tangent_basis_jacobian", ""], [23, 13, 1, 0, "point_line_distance", "Compute the distance between a point and line in 2D or 3D."], [23, 13, 1, 0, "point_line_distance_gradient", "Compute the gradient of the distance between a point and line."], [23, 13, 1, 0, "point_line_distance_hessian", "Compute the hessian of the distance between a point and line."], [23, 13, 1, 0, "point_plane_distance", "Overloaded function."], [23, 13, 1, 0, "point_plane_distance_gradient", "Overloaded function."], [23, 13, 1, 0, "point_plane_distance_hessian", "Overloaded function."], [20, 13, 1, 0, "point_point_ccd", "Computes the time of impact between two points using continuous collision detection."], [23, 13, 1, 0, "point_point_distance", "Compute the distance between two points."], [23, 13, 1, 0, "point_point_distance_gradient", "Compute the gradient of the distance between two points."], [23, 13, 1, 0, "point_point_distance_hessian", "Compute the hessian of the distance between two points."], [20, 13, 1, 0, "point_point_nonlinear_ccd", "Perform nonlinear CCD between two points moving along nonlinear trajectories."], [24, 13, 1, 0, "point_point_relative_velocity", "Compute the relative velocity of two points"], [24, 13, 1, 0, "point_point_relative_velocity_matrix", "Compute the relative velocity premultiplier matrix"], [24, 13, 1, 0, "point_point_relative_velocity_matrix_jacobian", "Compute the jacobian of the relative velocity premultiplier matrix"], [24, 13, 1, 0, "point_point_tangent_basis", "Compute a basis for the space tangent to the point-point pair."], [24, 13, 1, 0, "point_point_tangent_basis_jacobian", ""], [20, 13, 1, 0, "point_triangle_ccd", "Computes the time of impact between a point and a triangle in 3D using continuous collision detection."], [23, 13, 1, 0, "point_triangle_distance", "Compute the distance between a points and a triangle."], [23, 13, 1, 0, "point_triangle_distance_gradient", "Compute the gradient of the distance between a points and a triangle."], [23, 13, 1, 0, "point_triangle_distance_hessian", "Compute the hessian of the distance between a points and a triangle."], [23, 13, 1, 0, "point_triangle_distance_type", "Determine the closest pair between a point and triangle."], [20, 13, 1, 0, "point_triangle_nonlinear_ccd", "Perform nonlinear CCD between a point and a linear triangle moving along nonlinear trajectories."], [24, 13, 1, 0, "point_triangle_relative_velocity", "Compute the relative velocity of the point to the triangle."], [24, 13, 1, 0, "point_triangle_relative_velocity_matrix", ""], [24, 13, 1, 0, "point_triangle_relative_velocity_matrix_jacobian", ""], [24, 13, 1, 0, "point_triangle_tangent_basis", "Compute a basis for the space tangent to the point-triangle pair."], [24, 13, 1, 0, "point_triangle_tangent_basis_jacobian", ""], [26, 13, 1, 0, "project_to_pd", "Matrix projection onto positive definite cone"], [26, 13, 1, 0, "project_to_psd", "Matrix projection onto positive semi-definite cone"], [25, 13, 1, 0, "segment_segment_intersect", "Given two segments in 2d test whether they intersect each other using predicates orient2d"], [26, 13, 1, 0, "set_logger_level", "Set log level"], [26, 13, 1, 0, "set_num_threads", "set maximum number of threads to use"], [17, 13, 1, 0, "update_barrier_stiffness", "Update the barrier stiffness if the distance is decreasing and less than dhat_epsilon_scale * diag."]], "ipctk.AABB": [[18, 9, 1, 0, "__annotations__", ""], [18, 10, 1, 0, "__init__", "Overloaded function."], [18, 9, 1, 0, "__module__", ""], [18, 10, 1, 0, "conservative_inflation", "Compute a conservative inflation of the AABB."], [18, 10, 1, 0, "from_point", "Overloaded function."], [18, 10, 1, 0, "intersects", "Check if another AABB intersects with this one."], [18, 12, 1, 0, "max", "Maximum corner of the AABB."], [18, 12, 1, 0, "min", "Minimum corner of the AABB."], [18, 12, 1, 0, "vertex_ids", "Vertex IDs attached to the AABB."]], "ipctk.AABB.intersects": [[18, 11, 2, 0, "other", "The other AABB."]], "ipctk.BVH": [[18, 9, 1, 0, "__annotations__", ""], [18, 10, 1, 0, "__init__", ""], [18, 9, 1, 0, "__module__", ""]], "ipctk.BroadPhase": [[18, 9, 1, 0, "__annotations__", ""], [18, 10, 1, 0, "__init__", ""], [18, 9, 1, 0, "__module__", ""], [18, 10, 1, 0, "build", "Overloaded function."], [18, 12, 1, 0, "can_vertices_collide", "Function for determining if two vertices can collide."], [18, 10, 1, 0, "clear", "Clear any built data."], [18, 10, 1, 0, "detect_collision_candidates", "Detect all collision candidates needed for a given dimensional simulation."], [18, 10, 1, 0, "detect_edge_edge_candidates", "Find the candidate edge-edge collisions."], [18, 10, 1, 0, "detect_edge_face_candidates", "Find the candidate edge-face intersections."], [18, 10, 1, 0, "detect_edge_vertex_candidates", "Find the candidate edge-vertex collisions."], [18, 10, 1, 0, "detect_face_vertex_candidates", "Find the candidate face-vertex collisions."], [18, 10, 1, 0, "detect_vertex_vertex_candidates", "Find the candidate vertex-vertex collisions."], [18, 10, 1, 0, "make_broad_phase", "Construct a registered broad phase object."]], "ipctk.BroadPhase.detect_collision_candidates": [[18, 11, 2, 0, "dim", "The dimension of the simulation (i.e., 2 or 3)."]], "ipctk.BroadPhase.make_broad_phase": [[18, 11, 2, 0, "method", "The broad phase method to use."]], "ipctk.BroadPhaseMethod": [[18, 9, 1, 0, "BOUNDING_VOLUME_HIERARCHY", ""], [18, 9, 1, 0, "BRUTE_FORCE", ""], [18, 9, 1, 0, "HASH_GRID", ""], [18, 9, 1, 0, "SPATIAL_HASH", ""], [18, 9, 1, 0, "SWEEP_AND_TINIEST_QUEUE", ""], [18, 9, 1, 0, "SWEEP_AND_TINIEST_QUEUE_GPU", ""], [18, 10, 1, 0, "__eq__", ""], [18, 10, 1, 0, "__getstate__", ""], [18, 10, 1, 0, "__hash__", ""], [18, 10, 1, 0, "__index__", ""], [18, 10, 1, 0, "__init__", ""], [18, 10, 1, 0, "__int__", ""], [18, 9, 1, 0, "__members__", ""], [18, 9, 1, 0, "__module__", ""], [18, 10, 1, 0, "__ne__", ""], [18, 10, 1, 0, "__repr__", ""], [18, 10, 1, 0, "__setstate__", ""], [18, 10, 1, 0, "__str__", "name(self: handle) -> str"], [18, 12, 1, 0, "name", ""], [18, 12, 1, 0, "value", ""]], "ipctk.BruteForce": [[18, 9, 1, 0, "__annotations__", ""], [18, 10, 1, 0, "__init__", ""], [18, 9, 1, 0, "__module__", ""]], "ipctk.Candidates": [[19, 9, 1, 0, "__annotations__", ""], [19, 10, 1, 0, "__getitem__", ""], [19, 10, 1, 0, "__init__", ""], [19, 10, 1, 0, "__len__", ""], [19, 9, 1, 0, "__module__", ""], [19, 10, 1, 0, "build", "Overloaded function."], [19, 10, 1, 0, "clear", ""], [19, 10, 1, 0, "compute_cfl_stepsize", "Computes a CFL-inspired CCD maximum step step size."], [19, 10, 1, 0, "compute_collision_free_stepsize", "Computes a maximal step size that is collision free using the set of collision candidates."], [19, 10, 1, 0, "compute_noncandidate_conservative_stepsize", "Computes a conservative bound on the largest-feasible step size for surface primitives not in contact."], [19, 12, 1, 0, "ee_candidates", ""], [19, 10, 1, 0, "empty", ""], [19, 12, 1, 0, "ev_candidates", ""], [19, 12, 1, 0, "fv_candidates", ""], [19, 10, 1, 0, "is_step_collision_free", "Determine if the step is collision free from the set of candidates."], [19, 10, 1, 0, "save_obj", ""], [19, 12, 1, 0, "vv_candidates", ""]], "ipctk.CollisionConstraint": [[21, 9, 1, 0, "__annotations__", ""], [21, 10, 1, 0, "__init__", ""], [21, 9, 1, 0, "__module__", ""], [21, 10, 1, 0, "compute_potential", ""], [21, 10, 1, 0, "compute_potential_gradient", ""], [21, 10, 1, 0, "compute_potential_hessian", ""], [21, 10, 1, 0, "compute_shape_derivative", "Compute the derivative of the potential gradient wrt the shape."], [21, 12, 1, 0, "dmin", ""], [21, 12, 1, 0, "weight", ""], [21, 12, 1, 0, "weight_gradient", ""]], "ipctk.CollisionConstraints": [[21, 9, 1, 0, "__annotations__", ""], [21, 10, 1, 0, "__getitem__", "Get a reference to constriant idx."], [21, 10, 1, 0, "__init__", ""], [21, 10, 1, 0, "__len__", "Get the number of collision constraints."], [21, 9, 1, 0, "__module__", ""], [21, 12, 1, 0, "are_shape_derivatives_enabled", "If the collision constraints are using the convergent formulation."], [21, 10, 1, 0, "build", "Overloaded function."], [21, 10, 1, 0, "clear", "Clear the collision constraints."], [21, 10, 1, 0, "compute_minimum_distance", "Computes the minimum distance between any non-adjacent elements."], [21, 10, 1, 0, "compute_potential", "Compute the barrier potential for a given constraint set."], [21, 10, 1, 0, "compute_potential_gradient", "Compute the gradient of the barrier potential."], [21, 10, 1, 0, "compute_potential_hessian", "Compute the hessian of the barrier potential."], [21, 10, 1, 0, "compute_shape_derivative", "Compute the barrier shape derivative."], [21, 12, 1, 0, "ee_constraints", ""], [21, 10, 1, 0, "empty", "Get if the collision constraints are empty."], [21, 12, 1, 0, "ev_constraints", ""], [21, 12, 1, 0, "fv_constraints", ""], [21, 10, 1, 0, "is_edge_edge", "Get if the constraint at idx is an edge-edge constraint."], [21, 10, 1, 0, "is_edge_vertex", "Get if the constraint at idx is an edge-vertex constraint."], [21, 10, 1, 0, "is_face_vertex", "Get if the constraint at idx is an face-vertex constraint."], [21, 10, 1, 0, "is_plane_vertex", "Get if the constraint at idx is an plane-vertex constraint."], [21, 10, 1, 0, "is_vertex_vertex", "Get if the constraint at idx is a vertex-vertex constraint."], [21, 12, 1, 0, "pv_constraints", ""], [21, 10, 1, 0, "to_string", "Overloaded function."], [21, 12, 1, 0, "use_convergent_formulation", "If the collision constraints should use the convergent formulation."], [21, 12, 1, 0, "vv_constraints", ""]], "ipctk.CollisionConstraints.__getitem__": [[21, 11, 2, 0, "idx", "The index of the constraint."]], "ipctk.CollisionConstraints.is_edge_edge": [[21, 11, 2, 0, "idx", "The index of the constraint."]], "ipctk.CollisionConstraints.is_edge_vertex": [[21, 11, 2, 0, "idx", "The index of the constraint."]], "ipctk.CollisionConstraints.is_face_vertex": [[21, 11, 2, 0, "idx", "The index of the constraint."]], "ipctk.CollisionConstraints.is_plane_vertex": [[21, 11, 2, 0, "idx", "The index of the constraint."]], "ipctk.CollisionConstraints.is_vertex_vertex": [[21, 11, 2, 0, "idx", "The index of the constraint."]], "ipctk.CollisionMesh": [[22, 9, 1, 0, "__annotations__", ""], [22, 10, 1, 0, "__init__", "Overloaded function."], [22, 9, 1, 0, "__module__", ""], [22, 10, 1, 0, "are_adjacencies_initialized", "Determine if the adjacencies have been initialized by calling init_adjacencies()."], [22, 10, 1, 0, "are_area_jacobians_initialized", "Determine if the area Jacobians have been initialized by calling init_area_jacobians()."], [22, 10, 1, 0, "build_from_full_mesh", "Helper function that automatically builds include_vertex using construct_is_on_surface."], [22, 12, 1, 0, "can_collide", "A function that takes two vertex IDs and returns true if the vertices (and faces or edges containing the vertices) can collide. By default all primitives can collide with all other primitives."], [22, 12, 1, 0, "codim_vertices", "Get the indices of codimensional vertices of the collision mesh (#CV x 1)."], [22, 10, 1, 0, "construct_faces_to_edges", "Construct a matrix that maps from the faces' edges to rows in the edges matrix."], [22, 10, 1, 0, "construct_is_on_surface", "Construct a vector of bools indicating whether each vertex is on the surface."], [22, 12, 1, 0, "dim", "Get the dimension of the mesh."], [22, 10, 1, 0, "displace_vertices", "Compute the vertex positions from vertex displacements on the full mesh."], [22, 10, 1, 0, "edge_area", "Get the barycentric area of an edge."], [22, 10, 1, 0, "edge_area_gradient", "Get the gradient of the barycentric area of an edge wrt the rest positions of all points."], [22, 10, 1, 0, "edge_areas", "Get the barycentric area of the edges."], [22, 12, 1, 0, "edge_vertex_adjacencies", "Get the edge-vertex adjacency matrix."], [22, 12, 1, 0, "edges", "Get the edges of the collision mesh (#E \u00d7 2)."], [22, 12, 1, 0, "faces", "Get the faces of the collision mesh (#F \u00d7 3)."], [22, 12, 1, 0, "faces_to_edges", "Get the mapping from faces to edges of the collision mesh (#F \u00d7 3)."], [22, 12, 1, 0, "full_ndof", "Get the number of degrees of freedom in the full mesh."], [22, 12, 1, 0, "full_num_vertices", "Get the number of vertices in the full mesh."], [22, 10, 1, 0, "init_adjacencies", "Initialize vertex-vertex and edge-vertex adjacencies."], [22, 10, 1, 0, "init_area_jacobians", "Initialize vertex and edge areas."], [22, 10, 1, 0, "is_vertex_on_boundary", "Is a vertex on the boundary of the collision mesh?"], [22, 10, 1, 0, "map_displacements", "Map vertex displacements on the full mesh to vertex displacements on the collision mesh."], [22, 12, 1, 0, "ndof", "Get the number of degrees of freedom in the collision mesh."], [22, 12, 1, 0, "num_codim_vertices", "Get the number of codimensional vertices in the collision mesh."], [22, 12, 1, 0, "num_edges", "Get the number of edges in the collision mesh."], [22, 12, 1, 0, "num_faces", "Get the number of faces in the collision mesh."], [22, 12, 1, 0, "num_vertices", "Get the number of vertices in the collision mesh."], [22, 12, 1, 0, "rest_positions", "Get the vertices of the collision mesh at rest (#V \u00d7 dim)."], [22, 10, 1, 0, "to_full_dof", "Overloaded function."], [22, 10, 1, 0, "to_full_vertex_id", "Map a vertex ID to the corresponding vertex ID in the full mesh."], [22, 10, 1, 0, "vertex_area", "Get the barycentric area of a vertex."], [22, 10, 1, 0, "vertex_area_gradient", "Get the gradient of the barycentric area of a vertex wrt the rest positions of all points."], [22, 12, 1, 0, "vertex_areas", "Get the barycentric area of the vertices."], [22, 12, 1, 0, "vertex_edge_adjacencies", "Get the vertex-edge adjacency matrix."], [22, 12, 1, 0, "vertex_vertex_adjacencies", "Get the vertex-vertex adjacency matrix."], [22, 10, 1, 0, "vertices", "Compute the vertex positions from the positions of the full mesh."]], "ipctk.CollisionMesh.build_from_full_mesh": [[22, 11, 2, 0, "edges", "The edge matrix of mesh (#E \u00d7 2)."], [22, 11, 2, 0, "faces", "The face matrix of mesh (#F \u00d7 3)."], [22, 11, 2, 0, "full_rest_positions", "The full vertices at rest (#FV \u00d7 dim)."]], "ipctk.CollisionMesh.construct_faces_to_edges": [[22, 11, 2, 0, "edges", "The edge matrix of mesh (#E \u00d7 2)."], [22, 11, 2, 0, "faces", "The face matrix of mesh (#F \u00d7 3)."]], "ipctk.CollisionMesh.construct_is_on_surface": [[22, 11, 2, 0, "codim_vertices", "The indices of codimensional vertices (#CV x 1)."], [22, 11, 2, 0, "edges", "The surface edges of the mesh (#E \u00d7 2)."], [22, 11, 2, 0, "num_vertices", "The number of vertices in the mesh."]], "ipctk.CollisionMesh.displace_vertices": [[22, 11, 2, 0, "full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."]], "ipctk.CollisionMesh.edge_area": [[22, 11, 2, 0, "ei", "Edge ID."]], "ipctk.CollisionMesh.edge_area_gradient": [[22, 11, 2, 0, "ei", "Edge ID."]], "ipctk.CollisionMesh.is_vertex_on_boundary": [[22, 11, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.map_displacements": [[22, 11, 2, 0, "full_displacements", "The vertex displacements on the full mesh (#FV \u00d7 dim)."]], "ipctk.CollisionMesh.to_full_vertex_id": [[22, 11, 2, 0, "id", "Vertex ID in the collision mesh."]], "ipctk.CollisionMesh.vertex_area": [[22, 11, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.vertex_area_gradient": [[22, 11, 2, 0, "vi", "Vertex ID."]], "ipctk.CollisionMesh.vertices": [[22, 11, 2, 0, "full_positions", "The vertex positions of the full mesh (#FV \u00d7 dim)."]], "ipctk.ContinuousCollisionCandidate": [[19, 9, 1, 0, "__annotations__", ""], [19, 10, 1, 0, "__init__", ""], [19, 9, 1, 0, "__module__", ""], [19, 10, 1, 0, "ccd", "Perform narrow-phase CCD on the candidate."], [19, 10, 1, 0, "print_ccd_query", "Print the CCD query to cout."]], "ipctk.ContinuousCollisionCandidate.ccd": [[19, 11, 2, 0, "conservative_rescaling", "Conservative rescaling value used to avoid taking steps exactly to impact."], [19, 11, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [19, 11, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [19, 11, 2, 0, "max_iterations", "Maximum iterations used by Tight-Inclusion CCD."], [19, 11, 2, 0, "min_distance", "Minimum separation distance between primitives."], [19, 11, 2, 0, "tmax", "Maximum time (normalized) to look for collisions. Should be in [0, 1]."], [19, 11, 2, 0, "tolerance", "CCD tolerance used by Tight-Inclusion CCD."], [19, 11, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [19, 11, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.ContinuousCollisionCandidate.print_ccd_query": [[19, 11, 2, 0, "edges", "Collision mesh edges as rows of indicies into vertices."], [19, 11, 2, 0, "faces", "Collision mesh triangular faces as rows of indicies into vertices."], [19, 11, 2, 0, "vertices_t0", "Mesh vertices at the start of the time step."], [19, 11, 2, 0, "vertices_t1", "Mesh vertices at the end of the time step."]], "ipctk.EdgeEdgeCandidate": [[19, 9, 1, 0, "__annotations__", ""], [19, 10, 1, 0, "__eq__", ""], [19, 9, 1, 0, "__hash__", ""], [19, 10, 1, 0, "__init__", ""], [19, 10, 1, 0, "__lt__", "Compare EdgeEdgeCandidates for sorting."], [19, 9, 1, 0, "__module__", ""], [19, 10, 1, 0, "__ne__", ""], [19, 10, 1, 0, "__repr__", ""], [19, 10, 1, 0, "__str__", ""], [19, 12, 1, 0, "edge0_id", "ID of the first edge."], [19, 12, 1, 0, "edge1_id", "ID of the second edge."]], "ipctk.EdgeEdgeConstraint": [[21, 9, 1, 0, "__annotations__", ""], [21, 10, 1, 0, "__eq__", ""], [21, 9, 1, 0, "__hash__", ""], [21, 10, 1, 0, "__init__", "Overloaded function."], [21, 10, 1, 0, "__lt__", ""], [21, 9, 1, 0, "__module__", ""], [21, 10, 1, 0, "__ne__", ""], [21, 12, 1, 0, "dtype", "Cached distance type."], [21, 12, 1, 0, "eps_x", "Mollifier activation threshold."]], "ipctk.EdgeEdgeDistanceType": [[23, 9, 1, 0, "AUTO", ""], [23, 9, 1, 0, "EA0_EB", ""], [23, 9, 1, 0, "EA0_EB0", ""], [23, 9, 1, 0, "EA0_EB1", ""], [23, 9, 1, 0, "EA1_EB", ""], [23, 9, 1, 0, "EA1_EB0", ""], [23, 9, 1, 0, "EA1_EB1", ""], [23, 9, 1, 0, "EA_EB", ""], [23, 9, 1, 0, "EA_EB0", ""], [23, 9, 1, 0, "EA_EB1", ""], [23, 9, 1, 0, "__annotations__", ""], [23, 10, 1, 0, "__eq__", ""], [23, 10, 1, 0, "__getstate__", ""], [23, 10, 1, 0, "__hash__", ""], [23, 10, 1, 0, "__index__", ""], [23, 10, 1, 0, "__init__", ""], [23, 10, 1, 0, "__int__", ""], [23, 9, 1, 0, "__members__", ""], [23, 9, 1, 0, "__module__", ""], [23, 10, 1, 0, "__ne__", ""], [23, 10, 1, 0, "__repr__", ""], [23, 10, 1, 0, "__setstate__", ""], [23, 10, 1, 0, "__str__", "name(self: handle) -> str"], [23, 12, 1, 0, "name", ""], [23, 12, 1, 0, "value", ""]], "ipctk.EdgeEdgeFrictionConstraint": [[24, 9, 1, 0, "__annotations__", ""], [24, 10, 1, 0, "__init__", "Overloaded function."], [24, 9, 1, 0, "__module__", ""]], "ipctk.EdgeFaceCandidate": [[19, 9, 1, 0, "__annotations__", ""], [19, 10, 1, 0, "__eq__", ""], [19, 9, 1, 0, "__hash__", ""], [19, 10, 1, 0, "__init__", ""], [19, 10, 1, 0, "__lt__", "Compare EdgeFaceCandidate for sorting."], [19, 9, 1, 0, "__module__", ""], [19, 10, 1, 0, "__ne__", ""], [19, 10, 1, 0, "__repr__", ""], [19, 10, 1, 0, "__str__", ""], [19, 12, 1, 0, "edge_id", "ID of the edge"], [19, 12, 1, 0, "face_id", "ID of the face"]], "ipctk.EdgeVertexCandidate": [[19, 9, 1, 0, "__annotations__", ""], [19, 10, 1, 0, "__eq__", ""], [19, 9, 1, 0, "__hash__", ""], [19, 10, 1, 0, "__init__", ""], [19, 10, 1, 0, "__lt__", "Compare EdgeVertexCandidates for sorting."], [19, 9, 1, 0, "__module__", ""], [19, 10, 1, 0, "__ne__", ""], [19, 10, 1, 0, "__repr__", ""], [19, 10, 1, 0, "__str__", ""], [19, 12, 1, 0, "edge_id", "ID of the edge"], [19, 12, 1, 0, "vertex_id", "ID of the vertex"]], "ipctk.EdgeVertexConstraint": [[21, 9, 1, 0, "__annotations__", ""], [21, 10, 1, 0, "__init__", "Overloaded function."], [21, 9, 1, 0, "__module__", ""]], "ipctk.EdgeVertexFrictionConstraint": [[24, 9, 1, 0, "__annotations__", ""], [24, 10, 1, 0, "__init__", "Overloaded function."], [24, 9, 1, 0, "__module__", ""]], "ipctk.FaceVertexCandidate": [[19, 9, 1, 0, "__annotations__", ""], [19, 10, 1, 0, "__eq__", ""], [19, 9, 1, 0, "__hash__", ""], [19, 10, 1, 0, "__init__", ""], [19, 10, 1, 0, "__lt__", "Compare FaceVertexCandidate for sorting."], [19, 9, 1, 0, "__module__", ""], [19, 10, 1, 0, "__ne__", ""], [19, 10, 1, 0, "__repr__", ""], [19, 10, 1, 0, "__str__", ""], [19, 12, 1, 0, "face_id", "ID of the face"], [19, 12, 1, 0, "vertex_id", "ID of the vertex"]], "ipctk.FaceVertexConstraint": [[21, 9, 1, 0, "__annotations__", ""], [21, 10, 1, 0, "__init__", "Overloaded function."], [21, 9, 1, 0, "__module__", ""]], "ipctk.FaceVertexFrictionConstraint": [[24, 9, 1, 0, "__annotations__", ""], [24, 10, 1, 0, "__init__", "Overloaded function."], [24, 9, 1, 0, "__module__", ""]], "ipctk.FrictionConstraint": [[24, 8, 1, 0, "DiffWRT", "Bases: pybind11_object"], [24, 9, 1, 0, "LAGGED_DISPLACEMENTS", ""], [24, 9, 1, 0, "REST_POSITIONS", ""], [24, 9, 1, 0, "VELOCITIES", ""], [24, 9, 1, 0, "__annotations__", ""], [24, 10, 1, 0, "__init__", ""], [24, 9, 1, 0, "__module__", ""], [24, 12, 1, 0, "closest_point", "Barycentric coordinates of the closest point(s)"], [24, 10, 1, 0, "compute_force", "Compute the friction force."], [24, 10, 1, 0, "compute_force_jacobian", "Compute the friction force Jacobian."], [24, 10, 1, 0, "compute_potential", "Compute the friction dissapative potential."], [24, 10, 1, 0, "compute_potential_gradient", "Compute the friction dissapative potential gradient wrt velocities."], [24, 10, 1, 0, "compute_potential_hessian", "Compute the friction dissapative potential hessian wrt velocities."], [24, 12, 1, 0, "mu", "Coefficient of friction"], [24, 12, 1, 0, "normal_force_magnitude", "Contact force magnitude"], [24, 12, 1, 0, "tangent_basis", "Tangent basis of the contact (max size 3\u00d72)"], [24, 12, 1, 0, "weight", "Weight"], [24, 12, 1, 0, "weight_gradient", "Gradient of weight with respect to all DOF"]], "ipctk.FrictionConstraint.DiffWRT": [[24, 9, 1, 0, "LAGGED_DISPLACEMENTS", ""], [24, 9, 1, 0, "REST_POSITIONS", ""], [24, 9, 1, 0, "VELOCITIES", ""], [24, 9, 1, 0, "__annotations__", ""], [24, 10, 1, 0, "__eq__", ""], [24, 10, 1, 0, "__getstate__", ""], [24, 10, 1, 0, "__hash__", ""], [24, 10, 1, 0, "__index__", ""], [24, 10, 1, 0, "__init__", ""], [24, 10, 1, 0, "__int__", ""], [24, 9, 1, 0, "__members__", ""], [24, 9, 1, 0, "__module__", ""], [24, 10, 1, 0, "__ne__", ""], [24, 10, 1, 0, "__repr__", ""], [24, 10, 1, 0, "__setstate__", ""], [24, 10, 1, 0, "__str__", "name(self: handle) -> str"], [24, 12, 1, 0, "name", ""], [24, 12, 1, 0, "value", ""]], "ipctk.FrictionConstraint.compute_force": [[24, 11, 2, 0, "barrier_stiffness", "Barrier stiffness"], [24, 11, 2, 0, "dhat", "Barrier activation distance"], [24, 11, 2, 0, "dmin", "Minimum distance"], [24, 11, 2, 0, "edges", "Collision mesh edges"], [24, 11, 2, 0, "epsv", "Smooth friction mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "faces", "Collision mesh faces"], [24, 11, 2, 0, "lagged_displacements", "Previous displacements of the vertices (rowwise)"], [24, 11, 2, 0, "no_mu", "Whether to not multiply by mu"], [24, 11, 2, 0, "rest_positions", "Rest positions of the vertices (rowwise)"], [24, 11, 2, 0, "velocities", "Current displacements of the vertices (rowwise)"]], "ipctk.FrictionConstraint.compute_force_jacobian": [[24, 11, 2, 0, "barrier_stiffness", "Barrier stiffness"], [24, 11, 2, 0, "dhat", "Barrier activation distance"], [24, 11, 2, 0, "dmin", "Minimum distance"], [24, 11, 2, 0, "edges", "Collision mesh edges"], [24, 11, 2, 0, "epsv", "Smooth friction mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "faces", "Collision mesh faces"], [24, 11, 2, 0, "lagged_displacements", "Previous displacements of the vertices (rowwise)"], [24, 11, 2, 0, "rest_positions", "Rest positions of the vertices (rowwise)"], [24, 11, 2, 0, "velocities", "Current displacements of the vertices (rowwise)"], [24, 11, 2, 0, "wrt", "Variable to differentiate the friction force with respect to."]], "ipctk.FrictionConstraint.compute_potential": [[24, 11, 2, 0, "edges", "Edges of the mesh"], [24, 11, 2, 0, "epsv", "Smooth friction mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "faces", "Faces of the mesh"], [24, 11, 2, 0, "velocities", "Velocities of the vertices (rowwise)"]], "ipctk.FrictionConstraint.compute_potential_gradient": [[24, 11, 2, 0, "edges", "Edges of the mesh"], [24, 11, 2, 0, "epsv", "Smooth friction mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "faces", "Faces of the mesh"], [24, 11, 2, 0, "velocities", "Velocities of the vertices (rowwise)"]], "ipctk.FrictionConstraint.compute_potential_hessian": [[24, 11, 2, 0, "edges", "Edges of the mesh"], [24, 11, 2, 0, "epsv", "Smooth friction mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "faces", "Faces of the mesh"], [24, 11, 2, 0, "project_hessian_to_psd", "Project the hessian to PSD"], [24, 11, 2, 0, "velocities", "Velocities of the vertices (rowwise)"]], "ipctk.FrictionConstraints": [[24, 9, 1, 0, "__annotations__", ""], [24, 10, 1, 0, "__getitem__", "Get a reference to constriant idx."], [24, 10, 1, 0, "__init__", ""], [24, 10, 1, 0, "__len__", "Get the number of friction constraints."], [24, 9, 1, 0, "__module__", ""], [24, 10, 1, 0, "build", "Overloaded function."], [24, 10, 1, 0, "clear", "Clear the friction constraints."], [24, 10, 1, 0, "compute_force", "Compute the friction force from the given velocity."], [24, 10, 1, 0, "compute_force_jacobian", "Compute the Jacobian of the friction force wrt the velocity."], [24, 10, 1, 0, "compute_potential", "Compute the friction dissapative potential from the given velocity."], [24, 10, 1, 0, "compute_potential_gradient", "Compute the gradient of the friction dissapative potential wrt the velocity."], [24, 10, 1, 0, "compute_potential_hessian", "Compute the Hessian of the friction dissapative potential wrt the velocity."], [24, 10, 1, 0, "default_blend_mu", ""], [24, 12, 1, 0, "ee_constraints", ""], [24, 10, 1, 0, "empty", "Get if the friction constraints are empty."], [24, 12, 1, 0, "ev_constraints", ""], [24, 12, 1, 0, "fv_constraints", ""], [24, 12, 1, 0, "vv_constraints", ""]], "ipctk.FrictionConstraints.__getitem__": [[24, 11, 2, 0, "idx", "The index of the constraint."]], "ipctk.HashGrid": [[18, 9, 1, 0, "__annotations__", ""], [18, 10, 1, 0, "__init__", ""], [18, 9, 1, 0, "__module__", ""], [18, 10, 1, 0, "cellSize", ""], [18, 10, 1, 0, "domainMax", ""], [18, 10, 1, 0, "domainMin", ""], [18, 10, 1, 0, "gridSize", ""]], "ipctk.IntervalNonlinearTrajectory": [[20, 9, 1, 0, "__annotations__", ""], [20, 10, 1, 0, "__call__", "Overloaded function."], [20, 10, 1, 0, "__init__", ""], [20, 9, 1, 0, "__module__", ""], [20, 10, 1, 0, "max_distance_from_linear", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory"]], "ipctk.IntervalNonlinearTrajectory.max_distance_from_linear": [[20, 11, 2, 0, "t0", "Start time of the trajectory"], [20, 11, 2, 0, "t1", "End time of the trajectory"]], "ipctk.LoggerLevel": [[26, 9, 1, 0, "__annotations__", ""], [26, 10, 1, 0, "__eq__", ""], [26, 10, 1, 0, "__getstate__", ""], [26, 10, 1, 0, "__hash__", ""], [26, 10, 1, 0, "__index__", ""], [26, 10, 1, 0, "__init__", ""], [26, 10, 1, 0, "__int__", ""], [26, 9, 1, 0, "__members__", ""], [26, 9, 1, 0, "__module__", ""], [26, 10, 1, 0, "__ne__", ""], [26, 10, 1, 0, "__repr__", ""], [26, 10, 1, 0, "__setstate__", ""], [26, 10, 1, 0, "__str__", "name(self: handle) -> str"], [26, 9, 1, 0, "critical", ""], [26, 9, 1, 0, "debug", ""], [26, 9, 1, 0, "error", ""], [26, 9, 1, 0, "info", ""], [26, 12, 1, 0, "name", ""], [26, 9, 1, 0, "off", ""], [26, 9, 1, 0, "trace", ""], [26, 12, 1, 0, "value", ""], [26, 9, 1, 0, "warn", ""]], "ipctk.NonlinearTrajectory": [[20, 9, 1, 0, "__annotations__", ""], [20, 10, 1, 0, "__call__", "Compute the point's position at time t"], [20, 10, 1, 0, "__init__", ""], [20, 9, 1, 0, "__module__", ""], [20, 10, 1, 0, "max_distance_from_linear", "Compute the maximum distance from the nonlinear trajectory to a linearized trajectory"]], "ipctk.NonlinearTrajectory.max_distance_from_linear": [[20, 11, 2, 0, "t0", "Start time of the trajectory"], [20, 11, 2, 0, "t1", "End time of the trajectory"]], "ipctk.PlaneVertexConstraint": [[21, 9, 1, 0, "__annotations__", ""], [21, 10, 1, 0, "__init__", ""], [21, 9, 1, 0, "__module__", ""], [21, 12, 1, 0, "plane_normal", ""], [21, 12, 1, 0, "plane_origin", ""], [21, 12, 1, 0, "vertex_id", ""]], "ipctk.PointEdgeDistanceType": [[23, 9, 1, 0, "AUTO", ""], [23, 9, 1, 0, "P_E", ""], [23, 9, 1, 0, "P_E0", ""], [23, 9, 1, 0, "P_E1", ""], [23, 9, 1, 0, "__annotations__", ""], [23, 10, 1, 0, "__eq__", ""], [23, 10, 1, 0, "__getstate__", ""], [23, 10, 1, 0, "__hash__", ""], [23, 10, 1, 0, "__index__", ""], [23, 10, 1, 0, "__init__", ""], [23, 10, 1, 0, "__int__", ""], [23, 9, 1, 0, "__members__", ""], [23, 9, 1, 0, "__module__", ""], [23, 10, 1, 0, "__ne__", ""], [23, 10, 1, 0, "__repr__", ""], [23, 10, 1, 0, "__setstate__", ""], [23, 10, 1, 0, "__str__", "name(self: handle) -> str"], [23, 12, 1, 0, "name", ""], [23, 12, 1, 0, "value", ""]], "ipctk.PointTriangleDistanceType": [[23, 9, 1, 0, "AUTO", ""], [23, 9, 1, 0, "P_E0", ""], [23, 9, 1, 0, "P_E1", ""], [23, 9, 1, 0, "P_E2", ""], [23, 9, 1, 0, "P_T", ""], [23, 9, 1, 0, "P_T0", ""], [23, 9, 1, 0, "P_T1", ""], [23, 9, 1, 0, "P_T2", ""], [23, 9, 1, 0, "__annotations__", ""], [23, 10, 1, 0, "__eq__", ""], [23, 10, 1, 0, "__getstate__", ""], [23, 10, 1, 0, "__hash__", ""], [23, 10, 1, 0, "__index__", ""], [23, 10, 1, 0, "__init__", ""], [23, 10, 1, 0, "__int__", ""], [23, 9, 1, 0, "__members__", ""], [23, 9, 1, 0, "__module__", ""], [23, 10, 1, 0, "__ne__", ""], [23, 10, 1, 0, "__repr__", ""], [23, 10, 1, 0, "__setstate__", ""], [23, 10, 1, 0, "__str__", "name(self: handle) -> str"], [23, 12, 1, 0, "name", ""], [23, 12, 1, 0, "value", ""]], "ipctk.SpatialHash": [[18, 9, 1, 0, "__annotations__", ""], [18, 10, 1, 0, "__init__", "Overloaded function."], [18, 9, 1, 0, "__module__", ""], [18, 10, 1, 0, "build", "Overloaded function."], [18, 10, 1, 0, "clear", ""], [18, 12, 1, 0, "edge_start_ind", ""], [18, 10, 1, 0, "is_edge_index", "Check if primitive index refers to an edge."], [18, 10, 1, 0, "is_triangle_index", "Check if primitive index refers to a triangle."], [18, 10, 1, 0, "is_vertex_index", "Check if primitive index refers to a vertex."], [18, 12, 1, 0, "left_bottom_corner", ""], [18, 12, 1, 0, "one_div_voxelSize", ""], [18, 12, 1, 0, "point_and_edge_occupancy", ""], [18, 12, 1, 0, "right_top_corner", ""], [18, 10, 1, 0, "to_edge_index", "Convert a primitive index to an edge index."], [18, 10, 1, 0, "to_triangle_index", "Convert a primitive index to a triangle index."], [18, 12, 1, 0, "tri_start_ind", ""], [18, 12, 1, 0, "voxel", ""], [18, 12, 1, 0, "voxel_count", ""], [18, 12, 1, 0, "voxel_count_0x1", ""]], "ipctk.SweepAndTiniestQueue": [[18, 9, 1, 0, "__annotations__", ""], [18, 10, 1, 0, "__init__", ""], [18, 9, 1, 0, "__module__", ""]], "ipctk.VertexVertexCandidate": [[19, 9, 1, 0, "__annotations__", ""], [19, 10, 1, 0, "__eq__", ""], [19, 9, 1, 0, "__hash__", ""], [19, 10, 1, 0, "__init__", ""], [19, 10, 1, 0, "__lt__", "Compare EdgeVertexCandidates for sorting."], [19, 9, 1, 0, "__module__", ""], [19, 10, 1, 0, "__ne__", ""], [19, 10, 1, 0, "__repr__", ""], [19, 10, 1, 0, "__str__", ""], [19, 12, 1, 0, "vertex0_id", "ID of the first vertex"], [19, 12, 1, 0, "vertex1_id", "ID of the second vertex"]], "ipctk.VertexVertexConstraint": [[21, 9, 1, 0, "__annotations__", ""], [21, 10, 1, 0, "__init__", "Overloaded function."], [21, 9, 1, 0, "__module__", ""]], "ipctk.VertexVertexFrictionConstraint": [[24, 9, 1, 0, "__annotations__", ""], [24, 10, 1, 0, "__init__", "Overloaded function."], [24, 9, 1, 0, "__module__", ""]], "ipctk.additive_ccd": [[20, 13, 1, 0, "additive_ccd", "Computes the time of impact between two objects using additive continuous collision detection."], [20, 13, 1, 0, "edge_edge_ccd", "Computes the time of impact between two edges using continuous collision detection."], [20, 13, 1, 0, "point_edge_ccd", "Computes the time of impact between a point and an edge using continuous collision detection."], [20, 13, 1, 0, "point_point_ccd", "Computes the time of impact between two points using continuous collision detection."], [20, 13, 1, 0, "point_triangle_ccd", "Computes the time of impact between a point and a triangle using continuous collision detection."]], "ipctk.additive_ccd.additive_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The amount to rescale the objects by to ensure conservative advancement."], [20, 11, 2, 0, "distance_squared", "A function that computes the squared distance between the two objects at a given time."], [20, 11, 2, 0, "min_distance", "The minimum distance between the objects."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."]], "ipctk.additive_ccd.edge_edge_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "ea0_t0", "The initial position of the first endpoint of the first edge."], [20, 11, 2, 0, "ea0_t1", "The final position of the first endpoint of the first edge."], [20, 11, 2, 0, "ea1_t0", "The initial position of the second endpoint of the first edge."], [20, 11, 2, 0, "ea1_t1", "The final position of the second endpoint of the first edge."], [20, 11, 2, 0, "eb0_t0", "The initial position of the first endpoint of the second edge."], [20, 11, 2, 0, "eb0_t1", "The final position of the first endpoint of the second edge."], [20, 11, 2, 0, "eb1_t0", "The initial position of the second endpoint of the second edge."], [20, 11, 2, 0, "eb1_t1", "The final position of the second endpoint of the second edge."], [20, 11, 2, 0, "min_distance", "The minimum distance between two objects."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."]], "ipctk.additive_ccd.point_edge_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "e0_t0", "The initial position of the first endpoint of the edge."], [20, 11, 2, 0, "e0_t1", "The final position of the first endpoint of the edge."], [20, 11, 2, 0, "e1_t0", "The initial position of the second endpoint of the edge."], [20, 11, 2, 0, "e1_t1", "The final position of the second endpoint of the edge."], [20, 11, 2, 0, "min_distance", "The minimum distance between two objects."], [20, 11, 2, 0, "p_t0", "The initial position of the point."], [20, 11, 2, 0, "p_t1", "The final position of the point."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."]], "ipctk.additive_ccd.point_point_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "min_distance", "The minimum distance between two objects."], [20, 11, 2, 0, "p0_t0", "The initial position of the first point."], [20, 11, 2, 0, "p0_t1", "The final position of the first point."], [20, 11, 2, 0, "p1_t0", "The initial position of the second point."], [20, 11, 2, 0, "p1_t1", "The final position of the second point."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."]], "ipctk.additive_ccd.point_triangle_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "min_distance", "The minimum distance between two objects."], [20, 11, 2, 0, "p_t0", "The initial position of the point."], [20, 11, 2, 0, "p_t1", "The final position of the point."], [20, 11, 2, 0, "t0_t0", "The initial position of the first vertex of the triangle."], [20, 11, 2, 0, "t0_t1", "The final position of the first vertex of the triangle."], [20, 11, 2, 0, "t1_t0", "The initial position of the second vertex of the triangle."], [20, 11, 2, 0, "t1_t1", "The final position of the second vertex of the triangle."], [20, 11, 2, 0, "t2_t0", "The initial position of the third vertex of the triangle."], [20, 11, 2, 0, "t2_t1", "The final position of the third vertex of the triangle."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."]], "ipctk.barrier": [[17, 11, 2, 0, "d", "The distance."], [17, 11, 2, 0, "dhat", "Activation distance of the barrier."]], "ipctk.barrier_gradient": [[17, 11, 2, 0, "d", "The distance."], [17, 11, 2, 0, "dhat", "Activation distance of the barrier."]], "ipctk.barrier_hessian": [[17, 11, 2, 0, "d", "The distance."], [17, 11, 2, 0, "dhat", "Activation distance of the barrier."]], "ipctk.ccd_strategy": [[20, 11, 2, 0, "ccd", "The continuous collision detection function."], [20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "initial_distance", "The initial distance between the objects."], [20, 11, 2, 0, "max_iterations", "The maximum number of iterations to perform."], [20, 11, 2, 0, "min_distance", "The minimum distance between the objects."]], "ipctk.conservative_piecewise_linear_ccd": [[20, 11, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact."], [20, 11, 2, 0, "distance", "Return the distance for a given time in [0, 1]."], [20, 11, 2, 0, "linear_ccd", "Perform linear CCD on a given time interval."], [20, 11, 2, 0, "max_distance_from_linear", "Return the maximum distance from the linearized trajectory for a given time interval."], [20, 11, 2, 0, "min_distance", "Minimum separation distance between the objects."], [20, 11, 2, 0, "tmax", "Maximum time to check for collision."]], "ipctk.df1_x_minus_f1_over_x3": [[24, 11, 2, 0, "epsv", "Mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "s", "The tangential relative speed."]], "ipctk.edge_edge_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "ea0_t0", "The initial position of the first endpoint of the first edge."], [20, 11, 2, 0, "ea0_t1", "The final position of the first endpoint of the first edge."], [20, 11, 2, 0, "ea1_t0", "The initial position of the second endpoint of the first edge."], [20, 11, 2, 0, "ea1_t1", "The final position of the second endpoint of the first edge."], [20, 11, 2, 0, "eb0_t0", "The initial position of the first endpoint of the second edge."], [20, 11, 2, 0, "eb0_t1", "The final position of the first endpoint of the second edge."], [20, 11, 2, 0, "eb1_t0", "The initial position of the second endpoint of the second edge."], [20, 11, 2, 0, "eb1_t1", "The final position of the second endpoint of the second edge."], [20, 11, 2, 0, "max_iterations", "The maximum number of iterations to perform."], [20, 11, 2, 0, "min_distance", "The minimum distance between the objects."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."], [20, 11, 2, 0, "tolerance", "The error tolerance for the time of impact."]], "ipctk.edge_edge_cross_squarednorm": [[23, 11, 2, 0, "ea0", "The first vertex of the first edge."], [23, 11, 2, 0, "ea1", "The second vertex of the first edge."], [23, 11, 2, 0, "eb0", "The first vertex of the second edge."], [23, 11, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_cross_squarednorm_gradient": [[23, 11, 2, 0, "ea0", "The first vertex of the first edge."], [23, 11, 2, 0, "ea1", "The second vertex of the first edge."], [23, 11, 2, 0, "eb0", "The first vertex of the second edge."], [23, 11, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_cross_squarednorm_hessian": [[23, 11, 2, 0, "ea0", "The first vertex of the first edge."], [23, 11, 2, 0, "ea1", "The second vertex of the first edge."], [23, 11, 2, 0, "eb0", "The first vertex of the second edge."], [23, 11, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_distance_type": [[23, 11, 2, 0, "ea0", "The first vertex of the first edge."], [23, 11, 2, 0, "ea1", "The second vertex of the first edge."], [23, 11, 2, 0, "eb0", "The first vertex of the second edge."], [23, 11, 2, 0, "eb1", "The second vertex of the second edge."]], "ipctk.edge_edge_mollifier_threshold": [[23, 11, 2, 0, "ea0_rest", "The rest position of the first vertex of the first edge."], [23, 11, 2, 0, "ea1_rest", "The rest position of the second vertex of the first edge."], [23, 11, 2, 0, "eb0_rest", "The rest position of the first vertex of the second edge."], [23, 11, 2, 0, "eb1_rest", "The rest position of the second vertex of the second edge."]], "ipctk.edge_edge_nonlinear_ccd": [[20, 11, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [20, 11, 2, 0, "ea0", "First edge's first endpoint's trajectory"], [20, 11, 2, 0, "ea1", "First edge's second endpoint's trajectory"], [20, 11, 2, 0, "eb0", "Second edge's first endpoint's trajectory"], [20, 11, 2, 0, "eb1", "Second edge's second endpoint's trajectory"], [20, 11, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [20, 11, 2, 0, "min_distance", "Minimum separation distance between the two edges"], [20, 11, 2, 0, "tmax", "Maximum time to check for collision"], [20, 11, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.edge_edge_relative_velocity": [[24, 11, 2, 0, "coords", "Two parametric coordinates of the closest points on the edges"], [24, 11, 2, 0, "dea0", "Velocity of the first endpoint of the first edge"], [24, 11, 2, 0, "dea1", "Velocity of the second endpoint of the first edge"], [24, 11, 2, 0, "deb0", "Velocity of the first endpoint of the second edge"], [24, 11, 2, 0, "deb1", "Velocity of the second endpoint of the second edge"]], "ipctk.f0_SF": [[24, 11, 2, 0, "epsv", "Mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "s", "The tangential relative speed."]], "ipctk.f1_SF_over_x": [[24, 11, 2, 0, "epsv", "Mollifier parameter \\epsilon_v."], [24, 11, 2, 0, "s", "The tangential relative speed."]], "ipctk.initial_barrier_stiffness": [[17, 11, 2, 0, "average_mass", "Average mass of all bodies."], [17, 11, 2, 0, "bbox_diagonal", "Length of the diagonal of the bounding box of the scene."], [17, 11, 2, 0, "dhat", "Activation distance of the barrier."], [17, 11, 2, 0, "dmin", "Minimum distance between elements."], [17, 11, 2, 0, "grad_barrier", "Gradient of the barrier potential."], [17, 11, 2, 0, "grad_energy", "Gradient of the elasticity energy function."], [17, 11, 2, 0, "min_barrier_stiffness_scale", "Scale used to premultiply the minimum barrier stiffness."]], "ipctk.line_line_distance": [[23, 11, 2, 0, "ea0", "The first vertex of the edge defining the second line."], [23, 11, 2, 0, "ea1", "The second vertex of the edge defining the second line."]], "ipctk.line_line_distance_gradient": [[23, 11, 2, 0, "ea0", "The first vertex of the edge defining the second line."], [23, 11, 2, 0, "ea1", "The second vertex of the edge defining the second line."]], "ipctk.line_line_distance_hessian": [[23, 11, 2, 0, "ea0", "The first vertex of the edge defining the second line."], [23, 11, 2, 0, "ea1", "The second vertex of the edge defining the second line."]], "ipctk.point_edge_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "e0_t0", "The initial position of the first endpoint of the edge."], [20, 11, 2, 0, "e0_t1", "The final position of the first endpoint of the edge."], [20, 11, 2, 0, "e1_t0", "The initial position of the second endpoint of the edge."], [20, 11, 2, 0, "e1_t1", "The final position of the second endpoint of the edge."], [20, 11, 2, 0, "max_iterations", "The maximum number of iterations to perform."], [20, 11, 2, 0, "min_distance", "The minimum distance between the objects."], [20, 11, 2, 0, "p_t0", "The initial position of the point."], [20, 11, 2, 0, "p_t1", "The final position of the point."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."], [20, 11, 2, 0, "tolerance", "The error tolerance for the time of impact."]], "ipctk.point_edge_distance_type": [[23, 11, 2, 0, "e0", "The first vertex of the edge."], [23, 11, 2, 0, "e1", "The second vertex of the edge."], [23, 11, 2, 0, "p", "The point."]], "ipctk.point_edge_nonlinear_ccd": [[20, 11, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [20, 11, 2, 0, "e0", "Edge's first endpoint's trajectory"], [20, 11, 2, 0, "e1", "Edge's second endpoint's trajectory"], [20, 11, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [20, 11, 2, 0, "min_distance", "Minimum separation distance between the point and the edge"], [20, 11, 2, 0, "p", "Point's trajectory"], [20, 11, 2, 0, "tmax", "Maximum time to check for collision"], [20, 11, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.point_edge_relative_velocity": [[24, 11, 2, 0, "alpha", "Parametric coordinate of the closest point on the edge"], [24, 11, 2, 0, "de0", "Velocity of the first endpoint of the edge"], [24, 11, 2, 0, "de1", "Velocity of the second endpoint of the edge"], [24, 11, 2, 0, "dp", "Velocity of the point"]], "ipctk.point_line_distance": [[23, 11, 2, 0, "e0", "The first vertex of the edge defining the line."], [23, 11, 2, 0, "e1", "The second vertex of the edge defining the line."], [23, 11, 2, 0, "p", "The point."]], "ipctk.point_line_distance_gradient": [[23, 11, 2, 0, "e0", "The first vertex of the edge defining the line."], [23, 11, 2, 0, "e1", "The second vertex of the edge defining the line."], [23, 11, 2, 0, "p", "The point."]], "ipctk.point_line_distance_hessian": [[23, 11, 2, 0, "e0", "The first vertex of the edge defining the line."], [23, 11, 2, 0, "e1", "The second vertex of the edge defining the line."], [23, 11, 2, 0, "p", "The point."]], "ipctk.point_point_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "max_iterations", "The maximum number of iterations to perform."], [20, 11, 2, 0, "min_distance", "The minimum distance between the points."], [20, 11, 2, 0, "p0_t0", "The initial position of the first point."], [20, 11, 2, 0, "p0_t1", "The final position of the first point."], [20, 11, 2, 0, "p1_t0", "The initial position of the second point."], [20, 11, 2, 0, "p1_t1", "The final position of the second point."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."], [20, 11, 2, 0, "tolerance", "The error tolerance for the time of impact."]], "ipctk.point_point_distance": [[23, 11, 2, 0, "p0", "The first point."], [23, 11, 2, 0, "p1", "The second point."]], "ipctk.point_point_distance_gradient": [[23, 11, 2, 0, "p0", "The first point."], [23, 11, 2, 0, "p1", "The second point."]], "ipctk.point_point_distance_hessian": [[23, 11, 2, 0, "p0", "The first point."], [23, 11, 2, 0, "p1", "The second point."]], "ipctk.point_point_nonlinear_ccd": [[20, 11, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [20, 11, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [20, 11, 2, 0, "min_distance", "Minimum separation distance between the two points"], [20, 11, 2, 0, "p0", "First point's trajectory"], [20, 11, 2, 0, "p1", "Second point's trajectory"], [20, 11, 2, 0, "tmax", "Maximum time to check for collision"], [20, 11, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.point_point_relative_velocity": [[24, 11, 2, 0, "dp0", "Velocity of the first point"], [24, 11, 2, 0, "dp1", "Velocity of the second point"]], "ipctk.point_point_relative_velocity_matrix": [[24, 11, 2, 0, "dim", "Dimension (2 or 3)"]], "ipctk.point_point_relative_velocity_matrix_jacobian": [[24, 11, 2, 0, "dim", "Dimension (2 or 3)"]], "ipctk.point_point_tangent_basis": [[24, 11, 2, 0, "p0", "First point"], [24, 11, 2, 0, "p1", "Second point"]], "ipctk.point_triangle_ccd": [[20, 11, 2, 0, "conservative_rescaling", "The conservative rescaling of the time of impact."], [20, 11, 2, 0, "max_iterations", "The maximum number of iterations to perform."], [20, 11, 2, 0, "min_distance", "The minimum distance between the objects."], [20, 11, 2, 0, "p_t0", "The initial position of the point."], [20, 11, 2, 0, "p_t1", "The final position of the point."], [20, 11, 2, 0, "t0_t0", "The initial position of the first vertex of the triangle."], [20, 11, 2, 0, "t0_t1", "The final position of the first vertex of the triangle."], [20, 11, 2, 0, "t1_t0", "The initial position of the second vertex of the triangle."], [20, 11, 2, 0, "t1_t1", "The final position of the second vertex of the triangle."], [20, 11, 2, 0, "t2_t0", "The initial position of the third vertex of the triangle."], [20, 11, 2, 0, "t2_t1", "The final position of the third vertex of the triangle."], [20, 11, 2, 0, "tmax", "The maximum time to check for collisions."], [20, 11, 2, 0, "tolerance", "The error tolerance for the time of impact."]], "ipctk.point_triangle_distance_type": [[23, 11, 2, 0, "p", "The point."], [23, 11, 2, 0, "t0", "The first vertex of the triangle."], [23, 11, 2, 0, "t1", "The second vertex of the triangle."], [23, 11, 2, 0, "t2", "The third vertex of the triangle."]], "ipctk.point_triangle_nonlinear_ccd": [[20, 11, 2, 0, "conservative_rescaling", "Conservative rescaling of the time of impact"], [20, 11, 2, 0, "max_iterations", "Maximum number of iterations for the linear CCD algorithm"], [20, 11, 2, 0, "min_distance", "Minimum separation distance between the two edges"], [20, 11, 2, 0, "p", "Point's trajectory"], [20, 11, 2, 0, "t0", "Triangle's first vertex's trajectory"], [20, 11, 2, 0, "t1", "Triangle's second vertex's trajectory"], [20, 11, 2, 0, "t2", "Triangle's third vertex's trajectory"], [20, 11, 2, 0, "tmax", "Maximum time to check for collision"], [20, 11, 2, 0, "tolerance", "Tolerance for the linear CCD algorithm"]], "ipctk.point_triangle_relative_velocity": [[24, 11, 2, 0, "coords", "Baricentric coordinates of the closest point on the triangle"], [24, 11, 2, 0, "dp", "Velocity of the point"], [24, 11, 2, 0, "dt0", "Velocity of the first vertex of the triangle"], [24, 11, 2, 0, "dt1", "Velocity of the second vertex of the triangle"], [24, 11, 2, 0, "dt2", "Velocity of the third vertex of the triangle"]], "ipctk.point_triangle_tangent_basis": [[24, 11, 2, 0, "p", "Point"], [24, 11, 2, 0, "t0", "Triangle's first vertex"], [24, 11, 2, 0, "t1", "Triangle's second vertex"], [24, 11, 2, 0, "t2", "Triangle's third vertex"]], "ipctk.project_to_pd": [[26, 11, 2, 0, "A", "Symmetric matrix to project"]], "ipctk.project_to_psd": [[26, 11, 2, 0, "A", "Symmetric matrix to project"]], "ipctk.segment_segment_intersect": [[25, 11, 2, 0, "A", "1st endpoint of segment 1"], [25, 11, 2, 0, "B", "2st endpoint of segment 1"], [25, 11, 2, 0, "C", "1st endpoint of segment 2"], [25, 11, 2, 0, "D", "2st endpoint of segment 2"]], "ipctk.update_barrier_stiffness": [[17, 11, 2, 0, "barrier_stiffness", "Current barrier stiffness."], [17, 11, 2, 0, "bbox_diagonal", "Length of the diagonal of the bounding box of the scene."], [17, 11, 2, 0, "dhat_epsilon_scale", "Update if distance is less than this fraction of the diagonal."], [17, 11, 2, 0, "dmin", "Minimum distance between elements."], [17, 11, 2, 0, "max_barrier_stiffness", "Maximum stiffness of the barrier."], [17, 11, 2, 0, "min_distance", "Current minimum distance between elements."], [17, 11, 2, 0, "prev_min_distance", "Previous minimum distance between elements."]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:functionParam", "3": "cpp:member", "4": "cpp:templateTypeParam", "5": "cpp:templateNonTypeParam", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:class", "9": "py:attribute", "10": "py:method", "11": "py:parameter", "12": "py:property", "13": "py:function"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "functionParam", "C++ function parameter"], "3": ["cpp", "member", "C++ member"], "4": ["cpp", "templateTypeParam", "C++ type template parameter"], "5": ["cpp", "templateNonTypeParam", "C++ non-type template parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "class", "Python class"], "9": ["py", "attribute", "Python attribute"], "10": ["py", "method", "Python method"], "11": ["py", "parameter", "Python parameter"], "12": ["py", "property", "Python property"], "13": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "v1": 0, "1": [0, 1], "aug": 0, "18": 0, "2023": 0, "0": 0, "jul": 0, "25": 0, "detail": [0, 28], "feb": 0, "21": 0, "pre": 0, "2021": 0, "10": 0, "05": 0, "9e2cc2a": 0, "ad": 0, "09": 0, "08": 0, "acf2a80": 0, "chang": 0, "07": 0, "26": 0, "1479aae": 0, "22": 0, "e24c76d": 0, "fix": [0, 2], "17": 0, "a20f7a2": 0, "15": 0, "7301b42": 0, "86ae4e5": 0, "remov": 0, "4d16954": 0, "b3808e1": 0, "06": 0, "aa59aeb": 0, "245b13b": 0, "11": 0, "5c34dcd": 0, "24056cc": 0, "81d65f3": 0, "04": 0, "59ec167": 0, "03": 0, "664d65f": 0, "9b4ebfc": 0, "29": 0, "293d0ad": 0, "c8a6d5": 0, "02": 0, "9c7493": 0, "01": 0, "b510253": 0, "a395175": 0, "12": 0, "deee6d0": 0, "2020": 0, "20": 0, "93143ad": 0, "4553509": 0, "51f4903": 0, "9be6c0f": 0, "cb8b53f": 0, "4a5f84f": 0, "1d51a61": 0, "b737fb0": 0, "6ee60a": 0, "cc3947d": 0, "5582582": 0, "b48ba0e": 0, "9a4576b": 0, "19": 0, "31a37e0": 0, "acb7664": 0, "7dd2ab7": 0, "contributor": 1, "coven": 1, "code": [1, 27], "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": 1, "correct": 1, "2": 1, "warn": [1, 23, 33], "3": 1, "temporari": 1, "ban": 1, "4": 1, "perman": 1, "attribut": 1, "contribut": [2, 14], "type": [2, 10, 23], "report": 2, "bug": 2, "implement": 2, "featur": [2, 14], "write": 2, "document": [2, 16, 27], "submit": 2, "feedback": 2, "c": 3, "build": [3, 14, 16], "tip": 3, "depend": [3, 14], "option": [3, 14], "usag": [3, 14], "unit": [3, 14], "test": [3, 14], "barrier": [4, 17, 28, 29], "adapt": [4, 17, 29], "stiff": [4, 17, 29], "broad": [5, 18, 29], "phase": [5, 18, 29], "brute": [5, 18], "forc": [5, 11, 18, 24], "hash": [5, 18], "grid": [5, 18], "spatial": [5, 18], "bvh": [5, 18], "sweep": [5, 18], "tiniest": [5, 18], "queue": [5, 18], "aabb": [5, 18], "candid": [6, 19], "collis": [6, 7, 8, 9, 19, 20, 21, 22, 29], "stencil": [6, 19], "continu": [6, 7, 19, 20, 29], "vertex": [6, 8, 11, 19, 21, 24], "edg": [6, 8, 10, 11, 19, 21, 23, 24], "face": [6, 8, 19, 21], "detect": [7, 20, 29], "individu": [7, 20], "ccd": [7, 20, 31], "function": [7, 20], "gener": [7, 20, 27], "interfac": [7, 20], "addit": [7, 20], "nonlinear": [7, 20, 31, 33], "constraint": [8, 11, 21, 24, 29], "plane": [8, 10, 21, 23], "mesh": [9, 22, 29, 33], "distanc": [10, 23], "mollifi": [10, 11, 23, 24], "line": [10, 23], "point": [10, 23], "triangl": [10, 11, 23, 24], "friction": [11, 24, 28, 29], "smooth": [11, 24], "normal": [11, 24], "magnitud": [11, 24], "tangent": [11, 24], "basi": [11, 24], "jacobian": [11, 24], "rel": [11, 24], "veloc": [11, 24], "multipli": [11, 24], "matrici": [11, 24], "matrix": [11, 24], "intersect": [12, 25, 30], "util": [13, 26], "logger": [13, 26, 30], "posit": [13, 26, 33], "semi": [13, 26, 33], "definit": [13, 26, 33], "project": [13, 26, 33], "home": 14, "descript": 14, "limit": 14, "python": [14, 16], "bind": 14, "citat": 14, "licens": [14, 15], "instal": 16, "cmake": 16, "help": 16, "note": [19, 20, 23, 28, 29, 31], "error": 19, "multi": [26, 30], "thread": [26, 30], "style": 27, "guid": 27, "format": 27, "name": 27, "convent": 27, "specif": 27, "converg": 28, "formul": 28, "import": [28, 29], "technic": 28, "physic": [28, 33], "get": 29, "start": 29, "contact": 29, "potenti": 29, "deriv": 29, "model": 29, "thick": 29, "dissip": 29, "narrow": 29, "minimum": 29, "separ": 29, "miscellan": 30, "static": 30, "check": 30, "defin": 31, "trajectori": 31, "comput": 31, "conserv": 31, "envelop": 31, "perform": 31, "refer": 32, "simul": 33, "volumetr": 33, "base": 33, "curv": 33}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx_last_updated_by_git": 1, "sphinx": 57}, "alltitles": {"Changelog": [[0, "changelog"]], "v1.1.1 (Aug 18, 2023)": [[0, "v1-1-1-aug-18-2023"]], "v1.1.0 (Jul 25, 2023)": [[0, "v1-1-0-jul-25-2023"]], "Details": [[0, "details"], [0, "details-1"]], "v1.0.0 (Feb 21, 2023)": [[0, "v1-0-0-feb-21-2023"]], "Pre-v1.0.0": [[0, "pre-v1-0-0"]], "2021-10-05 (9e2cc2a)": [[0, "e2cc2a"]], "Added": [[0, "added"], [0, "added-1"], [0, "added-2"], [0, "added-3"], [0, "added-4"], [0, "added-5"], [0, "added-6"], [0, "added-7"], [0, "added-8"], [0, "added-9"], [0, "added-10"], [0, "added-11"], [0, "added-12"], [0, "added-13"], [0, "added-14"], [0, "added-15"], [0, "added-16"], [0, "added-17"]], "2021-09-05 (9e2cc2a)": [[0, "e2cc2a-1"]], "2021-08-21 (acf2a80)": [[0, "acf2a80"]], "Changed": [[0, "changed"], [0, "changed-1"], [0, "changed-2"], [0, "changed-3"], [0, "changed-4"], [0, "changed-5"], [0, "changed-6"], [0, "changed-7"], [0, "changed-8"], [0, "changed-9"], [0, "changed-10"], [0, "changed-11"], [0, "changed-12"], [0, "changed-13"], [0, "changed-14"], [0, "changed-15"], [0, "changed-16"], [0, "changed-17"], [0, "changed-18"], [0, "changed-19"]], "2021-07-26 (1479aae)": [[0, "aae"]], "2021-07-22 (e24c76d)": [[0, "e24c76d"]], "Fixed": [[0, "fixed"], [0, "fixed-1"], [0, "fixed-2"], [0, "fixed-3"], [0, "fixed-4"], [0, "fixed-5"], [0, "fixed-6"], [0, "fixed-7"], [0, "fixed-8"], [0, "fixed-9"], [0, "fixed-10"], [0, "fixed-11"]], "2021-07-17 (a20f7a2)": [[0, "a20f7a2"]], "2021-07-15 (7301b42)": [[0, "b42"]], "2021-07-08 (86ae4e5)": [[0, "ae4e5"]], "Removed": [[0, "removed"]], "2021-07-05 (4d16954)": [[0, "d16954"]], "2021-07-05 (b3808e1)": [[0, "b3808e1"]], "2021-06-18 (aa59aeb)": [[0, "aa59aeb"]], "2021-05-18 (245b13b)": [[0, "b13b"]], "2021-05-11 (5c34dcd)": [[0, "c34dcd"]], "2021-05-06 (24056cc)": [[0, "cc"]], "2021-05-06 (81d65f3)": [[0, "d65f3"]], "2021-05-04 (59ec167)": [[0, "ec167"]], "2021-05-03 (664d65f)": [[0, "d65f"]], "2021-05-03 (9b4ebfc)": [[0, "b4ebfc"]], "2021-04-29 (293d0ad)": [[0, "d0ad"]], "2021-04-21 (c8a6d5)": [[0, "c8a6d5"]], "2021-02-11 (9c7493)": [[0, "c7493"]], "2021-02-01 (b510253)": [[0, "b510253"]], "2021-02-01 (a395175)": [[0, "a395175"]], "2021-01-12 (deee6d0)": [[0, "deee6d0"]], "2021-01-09 (deee6d0)": [[0, "deee6d0-1"]], "2020-11-20 (93143ad)": [[0, "ad"]], "2020-11-06 (4553509)": [[0, "id35"]], "2020-10-22 (51f4903)": [[0, "f4903"]], "2020-10-22 (9be6c0f)": [[0, "be6c0f"]], "2020-10-10 (cb8b53f)": [[0, "cb8b53f"]], "2020-10-10 (4a5f84f)": [[0, "a5f84f"]], "2020-10-10 (1d51a61)": [[0, "d51a61"]], "2020-10-09 (b737fb0)": [[0, "b737fb0"]], "2020-10-08 (6ee60ae)": [[0, "ee60ae"]], "2020-10-08 (cc3947d)": [[0, "cc3947d"]], "2020-10-07 (5582582)": [[0, "section-1"]], "2020-10-06 (b48ba0e)": [[0, "b48ba0e"]], "2020-10-05 (9a4576b)": [[0, "a4576b"]], "2020-09-19 (31a37e0)": [[0, "a37e0"]], "2020-09-19 (acb7664)": [[0, "acb7664"]], "2020-09-04 (7dd2ab7)": [[0, "dd2ab7"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "Contributing": [[2, "contributing"], [14, "contributing"]], "Types of Contributions": [[2, "types-of-contributions"]], "Report Bugs": [[2, "report-bugs"]], "Fix Bugs": [[2, "fix-bugs"]], "Implement Features": [[2, "implement-features"]], "Write Documentation": [[2, "write-documentation"]], "Submit Feedback": [[2, "submit-feedback"]], "C++": [[3, "c"]], "Build": [[3, "build"], [14, "build"], [16, "build"]], "Tip": [[3, null]], "Dependencies": [[3, "dependencies"], [3, "id1"], [14, "dependencies"], [14, "id1"]], "Optional": [[3, "optional"], [14, "optional"]], "Usage": [[3, "usage"], [14, "usage"]], "Unit Tests": [[3, "unit-tests"], [14, "unit-tests"]], "Barrier": [[4, "barrier"], [17, "barrier"]], "Adaptive Barrier Stiffness": [[4, "adaptive-barrier-stiffness"], [17, "adaptive-barrier-stiffness"], [29, "adaptive-barrier-stiffness"]], "Broad Phase": [[5, "broad-phase"], [5, "id1"], [18, "broad-phase"], [18, "id1"]], "Brute Force": [[5, "brute-force"], [18, "brute-force"]], "Hash Grid": [[5, "hash-grid"], [18, "hash-grid"]], "Spatial Hash": [[5, "spatial-hash"], [18, "spatial-hash"]], "BVH": [[5, "bvh"], [18, "bvh"]], "Sweep and Tiniest Queue": [[5, "sweep-and-tiniest-queue"], [18, "sweep-and-tiniest-queue"]], "AABB": [[5, "aabb"], [18, "aabb"]], "Candidates": [[6, "candidates"], [6, "id1"], [19, "candidates"], [19, "id1"]], "Collision Stencil": [[6, "collision-stencil"], [19, "collision-stencil"]], "Continuous Collision Candidate": [[6, "continuous-collision-candidate"], [19, "continuous-collision-candidate"]], "Vertex-Vertex Candidate": [[6, "vertex-vertex-candidate"], [19, "vertex-vertex-candidate"]], "Edge-Vertex Candidate": [[6, "edge-vertex-candidate"], [19, "edge-vertex-candidate"]], "Edge-Edge Candidate": [[6, "edge-edge-candidate"], [19, "edge-edge-candidate"]], "Edge-Face Candidate": [[6, "edge-face-candidate"], [19, "edge-face-candidate"]], "Face-Vertex Candidate": [[6, "face-vertex-candidate"], [19, "face-vertex-candidate"]], "Continuous Collision Detection": [[7, "continuous-collision-detection"], [20, "continuous-collision-detection"], [29, "continuous-collision-detection"]], "Individual CCD Functions": [[7, "individual-ccd-functions"], [20, "individual-ccd-functions"]], "Generic Interface": [[7, "generic-interface"], [7, "id1"], [7, "id2"], [20, "generic-interface"], [20, "id1"], [20, "id2"]], "Additive CCD": [[7, "additive-ccd"], [20, "additive-ccd"]], "Nonlinear CCD": [[7, "nonlinear-ccd"], [20, "nonlinear-ccd"], [31, "nonlinear-ccd"]], "Collision Constraints": [[8, "collision-constraints"], [8, "id1"], [21, "collision-constraints"], [21, "id1"], [29, "collision-constraints"]], "Collision Constraint": [[8, "collision-constraint"], [21, "collision-constraint"]], "Vertex-Vertex Collision Constraint": [[8, "vertex-vertex-collision-constraint"], [21, "vertex-vertex-collision-constraint"]], "Edge-Vertex Collision Constraint": [[8, "edge-vertex-collision-constraint"], [21, "edge-vertex-collision-constraint"]], "Edge-Edge Collision Constraint": [[8, "edge-edge-collision-constraint"], [21, "edge-edge-collision-constraint"]], "Face-Vertex Collision Constraint": [[8, "face-vertex-collision-constraint"], [21, "face-vertex-collision-constraint"]], "Plane-Vertex Collision Constraint": [[8, "plane-vertex-collision-constraint"], [21, "plane-vertex-collision-constraint"]], "Collision Mesh": [[9, "collision-mesh"], [22, "collision-mesh"], [29, "collision-mesh"]], "Distance": [[10, "distance"], [23, "distance"]], "Distance Type": [[10, "distance-type"], [23, "distance-type"]], "Edge-Edge Mollifier": [[10, "edge-edge-mollifier"], [23, "edge-edge-mollifier"]], "Edge-Edge": [[10, "edge-edge"], [23, "edge-edge"]], "Line-Line": [[10, "line-line"], [23, "line-line"]], "Point-Edge": [[10, "point-edge"], [23, "point-edge"]], "Point-Line": [[10, "point-line"], [23, "point-line"]], "Point-Plane": [[10, "point-plane"], [23, "point-plane"]], "Point-Point": [[10, "point-point"], [23, "point-point"]], "Point-Triangle": [[10, "point-triangle"], [23, "point-triangle"]], "Friction": [[11, "friction"], [24, "friction"], [28, "friction"], [29, "friction"]], "Friction Constraints": [[11, "friction-constraints"], [24, "friction-constraints"]], "Friction Constraint": [[11, "friction-constraint"], [24, "friction-constraint"]], "Vertex-Vertex Friction Constraint": [[11, "vertex-vertex-friction-constraint"], [24, "vertex-vertex-friction-constraint"]], "Edge-Vertex Friction Constraint": [[11, "edge-vertex-friction-constraint"], [24, "edge-vertex-friction-constraint"]], "Edge-Edge Friction Constraint": [[11, "edge-edge-friction-constraint"], [24, "edge-edge-friction-constraint"]], "Triangle-Vertex Friction Constraint": [[11, "triangle-vertex-friction-constraint"], [24, "triangle-vertex-friction-constraint"]], "Smooth Mollifier": [[11, "smooth-mollifier"], [24, "smooth-mollifier"]], "Normal Force Magnitude": [[11, "normal-force-magnitude"], [24, "normal-force-magnitude"]], "Tangent Basis": [[11, "tangent-basis"], [24, "tangent-basis"]], "Tangent Basis Jacobians": [[11, "tangent-basis-jacobians"], [24, "tangent-basis-jacobians"]], "Relative Velocity": [[11, "relative-velocity"], [24, "relative-velocity"]], "Relative Velocity as Multiplier Matricies": [[11, "relative-velocity-as-multiplier-matricies"], [24, "relative-velocity-as-multiplier-matricies"]], "Relative Velocity Matrix Jacobians": [[11, "relative-velocity-matrix-jacobians"], [24, "relative-velocity-matrix-jacobians"]], "Intersections": [[12, "intersections"], [25, "intersections"]], "Utils": [[13, "utils"], [26, "utils"]], "Logger": [[13, "logger"], [26, "logger"], [30, "logger"]], "Positive Semi-Definite Projection": [[13, "positive-semi-definite-projection"], [26, "positive-semi-definite-projection"], [33, "positive-semi-definite-projection"]], "Home": [[14, "home"]], "Description": [[14, "description"]], "Features": [[14, "features"]], "Limitations": [[14, "limitations"]], "Python Bindings": [[14, "python-bindings"]], "Citation": [[14, "citation"]], "License": [[14, "license"], [15, "license"]], "Python": [[16, "python"]], "Installation": [[16, "installation"]], "CMake Build": [[16, "cmake-build"]], "Help/Documentation": [[16, "help-documentation"]], "Note": [[19, null], [19, null], [20, null], [20, null], [20, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [28, null], [29, null], [29, null], [29, null], [29, null], [31, null]], "Error": [[19, null]], "Warning": [[23, null], [23, null], [23, null], [33, null]], "Multi-Threading": [[26, "multi-threading"]], "Style Guide": [[27, "style-guide"]], "Code Formatting": [[27, "code-formatting"]], "Naming conventions": [[27, "naming-conventions"]], "General": [[27, "general"]], "Specific": [[27, "specific"]], "Documentation": [[27, "documentation"]], "Convergent Formulation": [[28, "convergent-formulation"]], "Important": [[28, null], [29, null]], "Technical Details": [[28, "technical-details"]], "Physical Barrier": [[28, "physical-barrier"]], "Getting Started": [[29, "getting-started"]], "Contact Potential": [[29, "contact-potential"]], "Contact Potential Derivatives": [[29, "contact-potential-derivatives"]], "Modeling Thickness": [[29, "modeling-thickness"]], "Friction Dissipative Potential": [[29, "friction-dissipative-potential"]], "Derivatives": [[29, "derivatives"]], "Broad-Phase": [[29, "broad-phase"]], "Narrow-Phase": [[29, "narrow-phase"]], "Minimum Separation": [[29, "minimum-separation"]], "Miscellaneous": [[30, "miscellaneous"]], "Static Intersection Checks": [[30, "static-intersection-checks"]], "Multi-threading": [[30, "multi-threading"]], "Defining the Trajectory": [[31, "defining-the-trajectory"]], "Computing a Conservative Envelope": [[31, "computing-a-conservative-envelope"]], "Performing Nonlinear CCD": [[31, "performing-nonlinear-ccd"]], "References": [[32, "references"]], "Physical Simulation": [[33, "physical-simulation"]], "Volumetric Meshes": [[33, "volumetric-meshes"]], "Nonlinear Bases and Curved Meshes": [[33, "nonlinear-bases-and-curved-meshes"]]}, "indexentries": {"ipc::barrier (c++ function)": [[4, "_CPPv4N3ipc7barrierEKdKd"]], "ipc::barrier_gradient (c++ function)": [[4, "_CPPv4N3ipc16barrier_gradientEKdKd"]], "ipc::barrier_hessian (c++ function)": [[4, "_CPPv4N3ipc15barrier_hessianEKdKd"]], "ipc::initial_barrier_stiffness (c++ function)": [[4, "_CPPv4N3ipc25initial_barrier_stiffnessEKdKdKdRKN5Eigen8VectorXdERKN5Eigen8VectorXdERdKdKd"]], "ipc::update_barrier_stiffness (c++ function)": [[4, "_CPPv4N3ipc24update_barrier_stiffnessEKdKdKdKdKdKdKd"]], "ipc::aabb (c++ class)": [[5, "_CPPv4N3ipc4AABBE"]], "ipc::aabb::aabb (c++ function)": [[5, "_CPPv4N3ipc4AABB4AABBERK10ArrayMax3dRK10ArrayMax3d"], [5, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABB"], [5, "_CPPv4N3ipc4AABB4AABBERK4AABBRK4AABBRK4AABB"], [5, "_CPPv4N3ipc4AABB4AABBEv"]], "ipc::aabb::conservative_inflation (c++ function)": [[5, "_CPPv4N3ipc4AABB22conservative_inflationER10ArrayMax3dR10ArrayMax3dKd"]], "ipc::aabb::from_point (c++ function)": [[5, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dKd"], [5, "_CPPv4N3ipc4AABB10from_pointERK11VectorMax3dRK11VectorMax3dKd"]], "ipc::aabb::intersects (c++ function)": [[5, "_CPPv4NK3ipc4AABB10intersectsERK4AABB"]], "ipc::aabb::max (c++ member)": [[5, "_CPPv4N3ipc4AABB3maxE"]], "ipc::aabb::min (c++ member)": [[5, "_CPPv4N3ipc4AABB3minE"]], "ipc::aabb::vertex_ids (c++ member)": [[5, "_CPPv4N3ipc4AABB10vertex_idsE"]], "ipc::bvh (c++ class)": [[5, "_CPPv4N3ipc3BVHE"]], "ipc::bvh::build (c++ function)": [[5, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"], [5, "_CPPv4N3ipc3BVH5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::bvh::clear (c++ function)": [[5, "_CPPv4N3ipc3BVH5clearEv"]], "ipc::bvh::detect_candidates (c++ function)": [[5, "_CPPv4I0_b_bEN3ipc3BVH17detect_candidatesEvRKNSt6vectorI4AABBEERKN9SimpleBVH3BVHERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE"]], "ipc::bvh::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::bvh::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::bvh::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::bvh::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::bvh::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc3BVH31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE"]], "ipc::bvh::edge_bvh (c++ member)": [[5, "_CPPv4N3ipc3BVH8edge_bvhE"]], "ipc::bvh::face_bvh (c++ member)": [[5, "_CPPv4N3ipc3BVH8face_bvhE"]], "ipc::bvh::init_bvh (c++ function)": [[5, "_CPPv4N3ipc3BVH8init_bvhERKNSt6vectorI4AABBEERN9SimpleBVH3BVHE"]], "ipc::bvh::vertex_bvh (c++ member)": [[5, "_CPPv4N3ipc3BVH10vertex_bvhE"]], "ipc::broadphase (c++ class)": [[5, "_CPPv4N3ipc10BroadPhaseE"]], "ipc::broadphase::build (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"], [5, "_CPPv4N3ipc10BroadPhase5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::broadphase::can_edge_face_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase21can_edge_face_collideE6size_t6size_t"]], "ipc::broadphase::can_edge_vertex_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase23can_edge_vertex_collideE6size_t6size_t"]], "ipc::broadphase::can_edges_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase17can_edges_collideE6size_t6size_t"]], "ipc::broadphase::can_face_vertex_collide (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase23can_face_vertex_collideE6size_t6size_t"]], "ipc::broadphase::can_vertices_collide (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase20can_vertices_collideE"]], "ipc::broadphase::clear (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase5clearEv"]], "ipc::broadphase::default_can_vertices_collide (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase28default_can_vertices_collideE6size_t6size_t"]], "ipc::broadphase::detect_collision_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_collision_candidatesEiR10Candidates"]], "ipc::broadphase::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::broadphase::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::broadphase::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::broadphase::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::broadphase::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BroadPhase31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE"]], "ipc::broadphase::edge_boxes (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase10edge_boxesE"]], "ipc::broadphase::face_boxes (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase10face_boxesE"]], "ipc::broadphase::make_broad_phase (c++ function)": [[5, "_CPPv4N3ipc10BroadPhase16make_broad_phaseEK16BroadPhaseMethod"]], "ipc::broadphase::vertex_boxes (c++ member)": [[5, "_CPPv4N3ipc10BroadPhase12vertex_boxesE"]], "ipc::broadphase::~broadphase (c++ function)": [[5, "_CPPv4N3ipc10BroadPhaseD0Ev"]], "ipc::broadphasemethod (c++ enum)": [[5, "_CPPv4N3ipc16BroadPhaseMethodE"]], "ipc::broadphasemethod::brute_force (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11BRUTE_FORCEE"]], "ipc::broadphasemethod::bvh (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod3BVHE"]], "ipc::broadphasemethod::hash_grid (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod9HASH_GRIDE"]], "ipc::broadphasemethod::num_methods (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod11NUM_METHODSE"]], "ipc::broadphasemethod::spatial_hash (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod12SPATIAL_HASHE"]], "ipc::broadphasemethod::sweep_and_tiniest_queue (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod23SWEEP_AND_TINIEST_QUEUEE"]], "ipc::broadphasemethod::sweep_and_tiniest_queue_gpu (c++ enumerator)": [[5, "_CPPv4N3ipc16BroadPhaseMethod27SWEEP_AND_TINIEST_QUEUE_GPUE"]], "ipc::bruteforce (c++ class)": [[5, "_CPPv4N3ipc10BruteForceE"]], "ipc::bruteforce::detect_candidates (c++ function)": [[5, "_CPPv4I0_bENK3ipc10BruteForce17detect_candidatesEvRKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE"]], "ipc::bruteforce::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::bruteforce::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::bruteforce::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::bruteforce::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::bruteforce::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc10BruteForce31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE"]], "ipc::default_broad_phase_method (c++ member)": [[5, "_CPPv4N3ipc26DEFAULT_BROAD_PHASE_METHODE"]], "ipc::hashgrid (c++ class)": [[5, "_CPPv4N3ipc8HashGridE"]], "ipc::hashgrid::build (c++ function)": [[5, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc8HashGrid5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"]], "ipc::hashgrid::cellsize (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid8cellSizeEv"]], "ipc::hashgrid::clear (c++ function)": [[5, "_CPPv4N3ipc8HashGrid5clearEv"]], "ipc::hashgrid::detect_candidates (c++ function)": [[5, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE"], [5, "_CPPv4I0ENK3ipc8HashGrid17detect_candidatesEvRKNSt6vectorI8HashItemEERKNSt6vectorI8HashItemEERKNSt6vectorI4AABBEERKNSt6vectorI4AABBEERKNSt8functionIFb6size_t6size_tEEERNSt6vectorI9CandidateEE"]], "ipc::hashgrid::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::hashgrid::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::hashgrid::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::hashgrid::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::hashgrid::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE"]], "ipc::hashgrid::domainmax (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid9domainMaxEv"]], "ipc::hashgrid::domainmin (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid9domainMinEv"]], "ipc::hashgrid::edge_items (c++ member)": [[5, "_CPPv4N3ipc8HashGrid10edge_itemsE"]], "ipc::hashgrid::face_items (c++ member)": [[5, "_CPPv4N3ipc8HashGrid10face_itemsE"]], "ipc::hashgrid::gridsize (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid8gridSizeEv"]], "ipc::hashgrid::hash (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid4hashEiii"]], "ipc::hashgrid::insert_box (c++ function)": [[5, "_CPPv4NK3ipc8HashGrid10insert_boxERK4AABBKlRNSt6vectorI8HashItemEE"]], "ipc::hashgrid::insert_boxes (c++ function)": [[5, "_CPPv4N3ipc8HashGrid12insert_boxesEv"], [5, "_CPPv4NK3ipc8HashGrid12insert_boxesERKNSt6vectorI4AABBEERNSt6vectorI8HashItemEE"]], "ipc::hashgrid::m_cellsize (c++ member)": [[5, "_CPPv4N3ipc8HashGrid10m_cellSizeE"]], "ipc::hashgrid::m_domainmax (c++ member)": [[5, "_CPPv4N3ipc8HashGrid11m_domainMaxE"]], "ipc::hashgrid::m_domainmin (c++ member)": [[5, "_CPPv4N3ipc8HashGrid11m_domainMinE"]], "ipc::hashgrid::m_gridsize (c++ member)": [[5, "_CPPv4N3ipc8HashGrid10m_gridSizeE"]], "ipc::hashgrid::resize (c++ function)": [[5, "_CPPv4N3ipc8HashGrid6resizeERK10ArrayMax3dRK10ArrayMax3dd"]], "ipc::hashgrid::vertex_items (c++ member)": [[5, "_CPPv4N3ipc8HashGrid12vertex_itemsE"]], "ipc::spatialhash (c++ class)": [[5, "_CPPv4N3ipc11SpatialHashE"]], "ipc::spatialhash::spatialhash (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"], [5, "_CPPv4N3ipc11SpatialHash11SpatialHashERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"], [5, "_CPPv4N3ipc11SpatialHash11SpatialHashEv"]], "ipc::spatialhash::build (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc11SpatialHash5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEdd"]], "ipc::spatialhash::built_in_radius (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash15built_in_radiusE"]], "ipc::spatialhash::clear (c++ function)": [[5, "_CPPv4N3ipc11SpatialHash5clearEv"]], "ipc::spatialhash::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::spatialhash::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::spatialhash::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::spatialhash::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::spatialhash::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE"]], "ipc::spatialhash::dim (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash3dimE"]], "ipc::spatialhash::edge_start_ind (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash14edge_start_indE"]], "ipc::spatialhash::is_edge_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash13is_edge_indexEi"]], "ipc::spatialhash::is_triangle_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash17is_triangle_indexEi"]], "ipc::spatialhash::is_vertex_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash15is_vertex_indexEi"]], "ipc::spatialhash::left_bottom_corner (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash18left_bottom_cornerE"]], "ipc::spatialhash::locate_box_voxel_axis_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash27locate_box_voxel_axis_indexE10ArrayMax3d10ArrayMax3dR10ArrayMax3iR10ArrayMax3iKd"]], "ipc::spatialhash::locate_voxel_axis_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash23locate_voxel_axis_indexERK11VectorMax3dR10ArrayMax3i"]], "ipc::spatialhash::locate_voxel_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash18locate_voxel_indexERK11VectorMax3d"]], "ipc::spatialhash::one_div_voxelsize (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash17one_div_voxelSizeE"]], "ipc::spatialhash::point_and_edge_occupancy (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash24point_and_edge_occupancyE"]], "ipc::spatialhash::query_edge_for_edges (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash20query_edge_for_edgesEiR13unordered_setIiE"]], "ipc::spatialhash::query_edge_for_triangles (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash24query_edge_for_trianglesEiR13unordered_setIiE"]], "ipc::spatialhash::query_point_for_edges (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash21query_point_for_edgesEiR13unordered_setIiE"]], "ipc::spatialhash::query_point_for_points (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash22query_point_for_pointsEiR13unordered_setIiE"]], "ipc::spatialhash::query_point_for_triangles (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash25query_point_for_trianglesEiR13unordered_setIiE"]], "ipc::spatialhash::right_top_corner (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash16right_top_cornerE"]], "ipc::spatialhash::to_edge_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash13to_edge_indexEi"]], "ipc::spatialhash::to_triangle_index (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash17to_triangle_indexEi"]], "ipc::spatialhash::tri_start_ind (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash13tri_start_indE"]], "ipc::spatialhash::voxel (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash5voxelE"]], "ipc::spatialhash::voxelaxisindex2voxelindex (c++ function)": [[5, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexERK10ArrayMax3i"], [5, "_CPPv4NK3ipc11SpatialHash25voxelAxisIndex2VoxelIndexEiii"]], "ipc::spatialhash::voxel_count (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash11voxel_countE"]], "ipc::spatialhash::voxel_count_0x1 (c++ member)": [[5, "_CPPv4N3ipc11SpatialHash15voxel_count_0x1E"]], "ipc::sweepandtiniestqueue (c++ class)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueueE"]], "ipc::sweepandtiniestqueue::boxes (c++ member)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueue5boxesE"]], "ipc::sweepandtiniestqueue::build (c++ function)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"], [5, "_CPPv4N3ipc20SweepAndTiniestQueue5buildERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEd"]], "ipc::sweepandtiniestqueue::clear (c++ function)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueue5clearEv"]], "ipc::sweepandtiniestqueue::detect_edge_edge_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_edge_candidatesERNSt6vectorI17EdgeEdgeCandidateEE"]], "ipc::sweepandtiniestqueue::detect_edge_face_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue27detect_edge_face_candidatesERNSt6vectorI17EdgeFaceCandidateEE"]], "ipc::sweepandtiniestqueue::detect_edge_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_edge_vertex_candidatesERNSt6vectorI19EdgeVertexCandidateEE"]], "ipc::sweepandtiniestqueue::detect_face_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue29detect_face_vertex_candidatesERNSt6vectorI19FaceVertexCandidateEE"]], "ipc::sweepandtiniestqueue::detect_vertex_vertex_candidates (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue31detect_vertex_vertex_candidatesERNSt6vectorI21VertexVertexCandidateEE"]], "ipc::sweepandtiniestqueue::is_edge (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue7is_edgeEl"]], "ipc::sweepandtiniestqueue::is_face (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue7is_faceEl"]], "ipc::sweepandtiniestqueue::is_vertex (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue9is_vertexEl"]], "ipc::sweepandtiniestqueue::num_vertices (c++ member)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueue12num_verticesE"]], "ipc::sweepandtiniestqueue::overlaps (c++ member)": [[5, "_CPPv4N3ipc20SweepAndTiniestQueue8overlapsE"]], "ipc::sweepandtiniestqueue::to_edge_id (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue10to_edge_idEl"]], "ipc::sweepandtiniestqueue::to_face_id (c++ function)": [[5, "_CPPv4NK3ipc20SweepAndTiniestQueue10to_face_idEl"]], "ipc::candidates (c++ class)": [[6, "_CPPv4N3ipc10CandidatesE"]], "ipc::candidates::candidates (c++ function)": [[6, "_CPPv4N3ipc10Candidates10CandidatesEv"]], "ipc::candidates::build (c++ function)": [[6, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdK16BroadPhaseMethod"], [6, "_CPPv4N3ipc10Candidates5buildERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethod"]], "ipc::candidates::clear (c++ function)": [[6, "_CPPv4N3ipc10Candidates5clearEv"]], "ipc::candidates::compute_cfl_stepsize (c++ function)": [[6, "_CPPv4NK3ipc10Candidates20compute_cfl_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdK16BroadPhaseMethodKdKdKl"]], "ipc::candidates::compute_collision_free_stepsize (c++ function)": [[6, "_CPPv4NK3ipc10Candidates31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl"]], "ipc::candidates::compute_noncandidate_conservative_stepsize (c++ function)": [[6, "_CPPv4NK3ipc10Candidates42compute_noncandidate_conservative_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::candidates::ee_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13ee_candidatesE"]], "ipc::candidates::empty (c++ function)": [[6, "_CPPv4NK3ipc10Candidates5emptyEv"]], "ipc::candidates::ev_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13ev_candidatesE"]], "ipc::candidates::fv_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13fv_candidatesE"]], "ipc::candidates::is_step_collision_free (c++ function)": [[6, "_CPPv4NK3ipc10Candidates22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKl"]], "ipc::candidates::operator[] (c++ function)": [[6, "_CPPv4N3ipc10CandidatesixE6size_t"], [6, "_CPPv4NK3ipc10CandidatesixE6size_t"]], "ipc::candidates::save_obj (c++ function)": [[6, "_CPPv4NK3ipc10Candidates8save_objERKNSt6stringERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::candidates::size (c++ function)": [[6, "_CPPv4NK3ipc10Candidates4sizeEv"]], "ipc::candidates::vv_candidates (c++ member)": [[6, "_CPPv4N3ipc10Candidates13vv_candidatesE"]], "ipc::collisionstencil (c++ class)": [[6, "_CPPv4N3ipc16CollisionStencilE"]], "ipc::collisionstencil::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERK12VectorMax12d"], [6, "_CPPv4NK3ipc16CollisionStencil16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERK12VectorMax12d"], [6, "_CPPv4NK3ipc16CollisionStencil25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERK12VectorMax12d"], [6, "_CPPv4NK3ipc16CollisionStencil24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::dof (c++ function)": [[6, "_CPPv4I0ENK3ipc16CollisionStencil3dofE11VectorMax12I1TERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil12num_verticesEv"]], "ipc::collisionstencil::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc16CollisionStencil10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::vertices (c++ function)": [[6, "_CPPv4I0ENK3ipc16CollisionStencil8verticesENSt5arrayI10VectorMax3I1TEXL4EEEERK7MatrixXI1TERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionstencil::~collisionstencil (c++ function)": [[6, "_CPPv4N3ipc16CollisionStencilD0Ev"]], "ipc::continuouscollisioncandidate (c++ class)": [[6, "_CPPv4N3ipc28ContinuousCollisionCandidateE"]], "ipc::continuouscollisioncandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd"], [6, "_CPPv4NK3ipc28ContinuousCollisionCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::continuouscollisioncandidate::write_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc28ContinuousCollisionCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::continuouscollisioncandidate::~continuouscollisioncandidate (c++ function)": [[6, "_CPPv4N3ipc28ContinuousCollisionCandidateD0Ev"]], "ipc::edgeedgecandidate (c++ class)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidateE"]], "ipc::edgeedgecandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc17EdgeEdgeCandidate13AbslHashValueE1H1HRK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::edgeedgecandidate (c++ function)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate17EdgeEdgeCandidateEll"]], "ipc::edgeedgecandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd"], [6, "_CPPv4NK3ipc17EdgeEdgeCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::edgeedgecandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERK12VectorMax12d"], [6, "_CPPv4NK3ipc17EdgeEdgeCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgeedgecandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERK12VectorMax12d"], [6, "_CPPv4NK3ipc17EdgeEdgeCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgeedgecandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERK12VectorMax12d"], [6, "_CPPv4NK3ipc17EdgeEdgeCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgeedgecandidate::edge0_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate8edge0_idE"]], "ipc::edgeedgecandidate::edge1_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeEdgeCandidate8edge1_idE"]], "ipc::edgeedgecandidate::known_dtype (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate11known_dtypeEv"]], "ipc::edgeedgecandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate12num_verticesEv"]], "ipc::edgeedgecandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateneERK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateltERK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidateeqERK17EdgeEdgeCandidate"]], "ipc::edgeedgecandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgeedgecandidate::write_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc17EdgeEdgeCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgefacecandidate (c++ class)": [[6, "_CPPv4N3ipc17EdgeFaceCandidateE"]], "ipc::edgefacecandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc17EdgeFaceCandidate13AbslHashValueE1H1HRK17EdgeFaceCandidate"]], "ipc::edgefacecandidate::edgefacecandidate (c++ function)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate17EdgeFaceCandidateEll"]], "ipc::edgefacecandidate::edge_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate7edge_idE"]], "ipc::edgefacecandidate::face_id (c++ member)": [[6, "_CPPv4N3ipc17EdgeFaceCandidate7face_idE"]], "ipc::edgefacecandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateneERK17EdgeFaceCandidate"]], "ipc::edgefacecandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateltERK17EdgeFaceCandidate"]], "ipc::edgefacecandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc17EdgeFaceCandidateeqERK17EdgeFaceCandidate"]], "ipc::edgevertexcandidate (c++ class)": [[6, "_CPPv4N3ipc19EdgeVertexCandidateE"]], "ipc::edgevertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc19EdgeVertexCandidate13AbslHashValueE1H1HRK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::edgevertexcandidate (c++ function)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate19EdgeVertexCandidateEll"]], "ipc::edgevertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd"], [6, "_CPPv4NK3ipc19EdgeVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::edgevertexcandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERK12VectorMax12d"], [6, "_CPPv4NK3ipc19EdgeVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgevertexcandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERK12VectorMax12d"], [6, "_CPPv4NK3ipc19EdgeVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgevertexcandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERK12VectorMax12d"], [6, "_CPPv4NK3ipc19EdgeVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgevertexcandidate::edge_id (c++ member)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate7edge_idE"]], "ipc::edgevertexcandidate::known_dtype (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate11known_dtypeEv"]], "ipc::edgevertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate12num_verticesEv"]], "ipc::edgevertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateneERK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateltERK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidateeqERK19EdgeVertexCandidate"]], "ipc::edgevertexcandidate::vertex_id (c++ member)": [[6, "_CPPv4N3ipc19EdgeVertexCandidate9vertex_idE"]], "ipc::edgevertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::edgevertexcandidate::write_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc19EdgeVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::facevertexcandidate (c++ class)": [[6, "_CPPv4N3ipc19FaceVertexCandidateE"]], "ipc::facevertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc19FaceVertexCandidate13AbslHashValueE1H1HRK19FaceVertexCandidate"]], "ipc::facevertexcandidate::facevertexcandidate (c++ function)": [[6, "_CPPv4N3ipc19FaceVertexCandidate19FaceVertexCandidateEll"]], "ipc::facevertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd"], [6, "_CPPv4NK3ipc19FaceVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::facevertexcandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERK12VectorMax12d"], [6, "_CPPv4NK3ipc19FaceVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::facevertexcandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERK12VectorMax12d"], [6, "_CPPv4NK3ipc19FaceVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::facevertexcandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERK12VectorMax12d"], [6, "_CPPv4NK3ipc19FaceVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::facevertexcandidate::face_id (c++ member)": [[6, "_CPPv4N3ipc19FaceVertexCandidate7face_idE"]], "ipc::facevertexcandidate::known_dtype (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate11known_dtypeEv"]], "ipc::facevertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate12num_verticesEv"]], "ipc::facevertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateneERK19FaceVertexCandidate"]], "ipc::facevertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateltERK19FaceVertexCandidate"]], "ipc::facevertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidateeqERK19FaceVertexCandidate"]], "ipc::facevertexcandidate::vertex_id (c++ member)": [[6, "_CPPv4N3ipc19FaceVertexCandidate9vertex_idE"]], "ipc::facevertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::facevertexcandidate::write_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc19FaceVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexcandidate (c++ class)": [[6, "_CPPv4N3ipc21VertexVertexCandidateE"]], "ipc::vertexvertexcandidate::abslhashvalue (c++ function)": [[6, "_CPPv4I0EN3ipc21VertexVertexCandidate13AbslHashValueE1H1HRK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::vertexvertexcandidate (c++ function)": [[6, "_CPPv4N3ipc21VertexVertexCandidate21VertexVertexCandidateEll"]], "ipc::vertexvertexcandidate::ccd (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERK12VectorMax12dRK12VectorMax12dRdKdKdKdKlKd"], [6, "_CPPv4NK3ipc21VertexVertexCandidate3ccdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERdKdKdKdKlKd"]], "ipc::vertexvertexcandidate::compute_distance (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERK12VectorMax12d"], [6, "_CPPv4NK3ipc21VertexVertexCandidate16compute_distanceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexcandidate::compute_distance_gradient (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERK12VectorMax12d"], [6, "_CPPv4NK3ipc21VertexVertexCandidate25compute_distance_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexcandidate::compute_distance_hessian (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERK12VectorMax12d"], [6, "_CPPv4NK3ipc21VertexVertexCandidate24compute_distance_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexcandidate::num_vertices (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate12num_verticesEv"]], "ipc::vertexvertexcandidate::operator!= (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateneERK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::operator< (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateltERK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::operator== (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidateeqERK21VertexVertexCandidate"]], "ipc::vertexvertexcandidate::vertex0_id (c++ member)": [[6, "_CPPv4N3ipc21VertexVertexCandidate10vertex0_idE"]], "ipc::vertexvertexcandidate::vertex1_id (c++ member)": [[6, "_CPPv4N3ipc21VertexVertexCandidate10vertex1_idE"]], "ipc::vertexvertexcandidate::vertex_ids (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexcandidate::write_ccd_query (c++ function)": [[6, "_CPPv4NK3ipc21VertexVertexCandidate15write_ccd_queryERNSt7ostreamERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::default_ccd_conservative_rescaling (c++ member)": [[7, "_CPPv4N3ipc34DEFAULT_CCD_CONSERVATIVE_RESCALINGE"]], "ipc::default_ccd_max_iterations (c++ member)": [[7, "_CPPv4N3ipc26DEFAULT_CCD_MAX_ITERATIONSE"]], "ipc::default_ccd_tolerance (c++ member)": [[7, "_CPPv4N3ipc21DEFAULT_CCD_TOLERANCEE"]], "ipc::intervalnonlineartrajectory (c++ class)": [[7, "_CPPv4N3ipc27IntervalNonlinearTrajectoryE"]], "ipc::intervalnonlineartrajectory::max_distance_from_linear (c++ function)": [[7, "_CPPv4NK3ipc27IntervalNonlinearTrajectory24max_distance_from_linearEKdKd"]], "ipc::intervalnonlineartrajectory::operator() (c++ function)": [[7, "_CPPv4NK3ipc27IntervalNonlinearTrajectoryclERKN5filib8IntervalE"]], "ipc::intervalnonlineartrajectory::~intervalnonlineartrajectory (c++ function)": [[7, "_CPPv4N3ipc27IntervalNonlinearTrajectoryD0Ev"]], "ipc::nonlineartrajectory (c++ class)": [[7, "_CPPv4N3ipc19NonlinearTrajectoryE"]], "ipc::nonlineartrajectory::max_distance_from_linear (c++ function)": [[7, "_CPPv4NK3ipc19NonlinearTrajectory24max_distance_from_linearEKdKd"]], "ipc::nonlineartrajectory::operator() (c++ function)": [[7, "_CPPv4NK3ipc19NonlinearTrajectoryclEKd"]], "ipc::nonlineartrajectory::~nonlineartrajectory (c++ function)": [[7, "_CPPv4N3ipc19NonlinearTrajectoryD0Ev"]], "ipc::additive_ccd::additive_ccd (c++ function)": [[7, "_CPPv4N3ipc12additive_ccd12additive_ccdE12VectorMax12dRK12VectorMax12dRKNSt8functionIFdRK12VectorMax12dEEEKdRdKdKdKd"]], "ipc::additive_ccd::edge_edge_ccd (c++ function)": [[7, "_CPPv4N3ipc12additive_ccd13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd"]], "ipc::additive_ccd::point_edge_ccd (c++ function)": [[7, "_CPPv4N3ipc12additive_ccd14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd"]], "ipc::additive_ccd::point_point_ccd (c++ function)": [[7, "_CPPv4N3ipc12additive_ccd15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKd"]], "ipc::additive_ccd::point_triangle_ccd (c++ function)": [[7, "_CPPv4N3ipc12additive_ccd18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKd"]], "ipc::ccd_strategy (c++ function)": [[7, "_CPPv4N3ipc12ccd_strategyERKNSt8functionIFbldbRdEEEKlKdKdKdRd"]], "ipc::compute_collision_free_stepsize (c++ function)": [[7, "_CPPv4N3ipc31compute_collision_free_stepsizeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl"]], "ipc::conservative_piecewise_linear_ccd (c++ function)": [[7, "_CPPv4N3ipc33conservative_piecewise_linear_ccdERKNSt8functionIFdKdEEERKNSt8functionIFdKdKdEEERKNSt8functionIFbKdKdKdKbRdEEERdKdKdKd"]], "ipc::edge_edge_ccd (c++ function)": [[7, "_CPPv4N3ipc13edge_edge_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd"]], "ipc::edge_edge_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc23edge_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd"]], "ipc::is_step_collision_free (c++ function)": [[7, "_CPPv4N3ipc22is_step_collision_freeERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEK16BroadPhaseMethodKdKdKl"]], "ipc::point_edge_ccd (c++ function)": [[7, "_CPPv4N3ipc14point_edge_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd"]], "ipc::point_edge_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc24point_edge_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd"]], "ipc::point_point_ccd (c++ function)": [[7, "_CPPv4N3ipc15point_point_ccdERK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRK11VectorMax3dRdKdKdKdKlKd"]], "ipc::point_point_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc25point_point_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd"]], "ipc::point_triangle_ccd (c++ function)": [[7, "_CPPv4N3ipc18point_triangle_ccdERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERdKdKdKdKlKd"]], "ipc::point_triangle_nonlinear_ccd (c++ function)": [[7, "_CPPv4N3ipc28point_triangle_nonlinear_ccdERK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRK19NonlinearTrajectoryRdKdKdKdKlKd"]], "ipc::collisionconstraint (c++ class)": [[8, "_CPPv4N3ipc19CollisionConstraintE"]], "ipc::collisionconstraint::collisionconstraint (c++ function)": [[8, "_CPPv4N3ipc19CollisionConstraint19CollisionConstraintEKdRKN5Eigen12SparseVectorIdEE"], [8, "_CPPv4N3ipc19CollisionConstraint19CollisionConstraintEv"]], "ipc::collisionconstraint::compute_potential (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::collisionconstraint::compute_potential_gradient (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::collisionconstraint::compute_potential_hessian (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb"]], "ipc::collisionconstraint::compute_shape_derivative (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint24compute_shape_derivativeERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE"]], "ipc::collisionconstraint::compute_shape_derivative_first_term (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint35compute_shape_derivative_first_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdRNSt6vectorIN5Eigen7TripletIdEEEE"]], "ipc::collisionconstraint::compute_shape_derivative_second_term (c++ function)": [[8, "_CPPv4NK3ipc19CollisionConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::collisionconstraint::dmin (c++ member)": [[8, "_CPPv4N3ipc19CollisionConstraint4dminE"]], "ipc::collisionconstraint::weight (c++ member)": [[8, "_CPPv4N3ipc19CollisionConstraint6weightE"]], "ipc::collisionconstraint::weight_gradient (c++ member)": [[8, "_CPPv4N3ipc19CollisionConstraint15weight_gradientE"]], "ipc::collisionconstraint::~collisionconstraint (c++ function)": [[8, "_CPPv4N3ipc19CollisionConstraintD0Ev"]], "ipc::collisionconstraints (c++ class)": [[8, "_CPPv4N3ipc20CollisionConstraintsE"]], "ipc::collisionconstraints::collisionconstraints (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints20CollisionConstraintsEv"]], "ipc::collisionconstraints::are_shape_derivatives_enabled (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints29are_shape_derivatives_enabledEv"]], "ipc::collisionconstraints::build (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints5buildERK10CandidatesRK13CollisionMeshRKN5Eigen8MatrixXdEKdKd"], [8, "_CPPv4N3ipc20CollisionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdEKdKdK16BroadPhaseMethod"]], "ipc::collisionconstraints::clear (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints5clearEv"]], "ipc::collisionconstraints::compute_minimum_distance (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints24compute_minimum_distanceERK13CollisionMeshRKN5Eigen8MatrixXdE"]], "ipc::collisionconstraints::compute_potential (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::collisionconstraints::compute_potential_gradient (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::collisionconstraints::compute_potential_hessian (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb"]], "ipc::collisionconstraints::compute_shape_derivative (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints24compute_shape_derivativeERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::collisionconstraints::ee_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14ee_constraintsE"]], "ipc::collisionconstraints::empty (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints5emptyEv"]], "ipc::collisionconstraints::ev_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14ev_constraintsE"]], "ipc::collisionconstraints::fv_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14fv_constraintsE"]], "ipc::collisionconstraints::is_edge_edge (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints12is_edge_edgeE6size_t"]], "ipc::collisionconstraints::is_edge_vertex (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints14is_edge_vertexE6size_t"]], "ipc::collisionconstraints::is_face_vertex (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints14is_face_vertexE6size_t"]], "ipc::collisionconstraints::is_plane_vertex (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints15is_plane_vertexE6size_t"]], "ipc::collisionconstraints::is_vertex_vertex (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints16is_vertex_vertexE6size_t"]], "ipc::collisionconstraints::m_are_shape_derivatives_enabled (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints31m_are_shape_derivatives_enabledE"]], "ipc::collisionconstraints::m_use_convergent_formulation (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints28m_use_convergent_formulationE"]], "ipc::collisionconstraints::operator[] (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraintsixE6size_t"], [8, "_CPPv4NK3ipc20CollisionConstraintsixE6size_t"]], "ipc::collisionconstraints::pv_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14pv_constraintsE"]], "ipc::collisionconstraints::set_are_shape_derivatives_enabled (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints33set_are_shape_derivatives_enabledEKb"]], "ipc::collisionconstraints::set_use_convergent_formulation (c++ function)": [[8, "_CPPv4N3ipc20CollisionConstraints30set_use_convergent_formulationEKb"]], "ipc::collisionconstraints::size (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints4sizeEv"]], "ipc::collisionconstraints::to_string (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints9to_stringERK13CollisionMeshRKN5Eigen8MatrixXdE"]], "ipc::collisionconstraints::use_convergent_formulation (c++ function)": [[8, "_CPPv4NK3ipc20CollisionConstraints26use_convergent_formulationEv"]], "ipc::collisionconstraints::vv_constraints (c++ member)": [[8, "_CPPv4N3ipc20CollisionConstraints14vv_constraintsE"]], "ipc::edgeedgeconstraint (c++ class)": [[8, "_CPPv4N3ipc18EdgeEdgeConstraintE"]], "ipc::edgeedgeconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc18EdgeEdgeConstraint13AbslHashValueE1H1HRK18EdgeEdgeConstraint"]], "ipc::edgeedgeconstraint::edgeedgeconstraint (c++ function)": [[8, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdK20EdgeEdgeDistanceType"], [8, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintEKlKlKdKdRKN5Eigen12SparseVectorIdEEK20EdgeEdgeDistanceType"], [8, "_CPPv4N3ipc18EdgeEdgeConstraint18EdgeEdgeConstraintERK17EdgeEdgeCandidateKdK20EdgeEdgeDistanceType"]], "ipc::edgeedgeconstraint::compute_potential (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::edgeedgeconstraint::compute_potential_gradient (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::edgeedgeconstraint::compute_potential_hessian (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb"]], "ipc::edgeedgeconstraint::compute_shape_derivative_second_term (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint36compute_shape_derivative_second_termERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::edgeedgeconstraint::dtype (c++ member)": [[8, "_CPPv4N3ipc18EdgeEdgeConstraint5dtypeE"]], "ipc::edgeedgeconstraint::eps_x (c++ member)": [[8, "_CPPv4N3ipc18EdgeEdgeConstraint5eps_xE"]], "ipc::edgeedgeconstraint::known_dtype (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraint11known_dtypeEv"]], "ipc::edgeedgeconstraint::operator!= (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraintneERK18EdgeEdgeConstraint"]], "ipc::edgeedgeconstraint::operator< (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstraintltERK18EdgeEdgeConstraint"]], "ipc::edgeedgeconstraint::operator== (c++ function)": [[8, "_CPPv4NK3ipc18EdgeEdgeConstrainteqERK18EdgeEdgeConstraint"]], "ipc::edgevertexconstraint (c++ class)": [[8, "_CPPv4N3ipc20EdgeVertexConstraintE"]], "ipc::edgevertexconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc20EdgeVertexConstraint13AbslHashValueE1H1HRK20EdgeVertexConstraint"]], "ipc::edgevertexconstraint::edgevertexcandidate (c++ function)": [[8, "_CPPv4N3ipc20EdgeVertexConstraint19EdgeVertexCandidateEll"]], "ipc::edgevertexconstraint::edgevertexconstraint (c++ function)": [[8, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE"], [8, "_CPPv4N3ipc20EdgeVertexConstraint20EdgeVertexConstraintERK19EdgeVertexCandidate"]], "ipc::edgevertexconstraint::known_dtype (c++ function)": [[8, "_CPPv4NK3ipc20EdgeVertexConstraint11known_dtypeEv"]], "ipc::facevertexconstraint (c++ class)": [[8, "_CPPv4N3ipc20FaceVertexConstraintE"]], "ipc::facevertexconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc20FaceVertexConstraint13AbslHashValueE1H1HRK20FaceVertexConstraint"]], "ipc::facevertexconstraint::facevertexcandidate (c++ function)": [[8, "_CPPv4N3ipc20FaceVertexConstraint19FaceVertexCandidateEll"]], "ipc::facevertexconstraint::facevertexconstraint (c++ function)": [[8, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE"], [8, "_CPPv4N3ipc20FaceVertexConstraint20FaceVertexConstraintERK19FaceVertexCandidate"]], "ipc::facevertexconstraint::known_dtype (c++ function)": [[8, "_CPPv4NK3ipc20FaceVertexConstraint11known_dtypeEv"]], "ipc::planevertexconstraint (c++ class)": [[8, "_CPPv4N3ipc21PlaneVertexConstraintE"]], "ipc::planevertexconstraint::planevertexconstraint (c++ function)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint21PlaneVertexConstraintERK11VectorMax3dRK11VectorMax3dKl"]], "ipc::planevertexconstraint::compute_distance (c++ function)": [[8, "_CPPv4NK3ipc21PlaneVertexConstraint16compute_distanceERK12VectorMax12d"]], "ipc::planevertexconstraint::compute_distance_gradient (c++ function)": [[8, "_CPPv4NK3ipc21PlaneVertexConstraint25compute_distance_gradientERK12VectorMax12d"]], "ipc::planevertexconstraint::compute_distance_hessian (c++ function)": [[8, "_CPPv4NK3ipc21PlaneVertexConstraint24compute_distance_hessianERK12VectorMax12d"]], "ipc::planevertexconstraint::num_vertices (c++ function)": [[8, "_CPPv4NK3ipc21PlaneVertexConstraint12num_verticesEv"]], "ipc::planevertexconstraint::plane_normal (c++ member)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint12plane_normalE"]], "ipc::planevertexconstraint::plane_origin (c++ member)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint12plane_originE"]], "ipc::planevertexconstraint::vertex_id (c++ member)": [[8, "_CPPv4N3ipc21PlaneVertexConstraint9vertex_idE"]], "ipc::planevertexconstraint::vertex_ids (c++ function)": [[8, "_CPPv4NK3ipc21PlaneVertexConstraint10vertex_idsERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::vertexvertexconstraint (c++ class)": [[8, "_CPPv4N3ipc22VertexVertexConstraintE"]], "ipc::vertexvertexconstraint::abslhashvalue (c++ function)": [[8, "_CPPv4I0EN3ipc22VertexVertexConstraint13AbslHashValueE1H1HRK22VertexVertexConstraint"]], "ipc::vertexvertexconstraint::vertexvertexcandidate (c++ function)": [[8, "_CPPv4N3ipc22VertexVertexConstraint21VertexVertexCandidateEll"]], "ipc::vertexvertexconstraint::vertexvertexconstraint (c++ function)": [[8, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintEKlKlKdRKN5Eigen12SparseVectorIdEE"], [8, "_CPPv4N3ipc22VertexVertexConstraint22VertexVertexConstraintERK21VertexVertexCandidate"]], "ipc::collisionmesh (c++ class)": [[9, "_CPPv4N3ipc13CollisionMeshE"]], "ipc::collisionmesh::collisionmesh (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE"], [9, "_CPPv4N3ipc13CollisionMesh13CollisionMeshERKNSt6vectorIbEERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiERKN5Eigen12SparseMatrixIdEE"], [9, "_CPPv4N3ipc13CollisionMesh13CollisionMeshEv"]], "ipc::collisionmesh::are_adjacencies_initialized (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh27are_adjacencies_initializedEv"]], "ipc::collisionmesh::are_area_jacobians_initialized (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh30are_area_jacobians_initializedEv"]], "ipc::collisionmesh::build_from_full_mesh (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh20build_from_full_meshERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::can_collide (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh11can_collideE"]], "ipc::collisionmesh::codim_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh14codim_verticesEv"]], "ipc::collisionmesh::construct_faces_to_edges (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh24construct_faces_to_edgesERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiE"]], "ipc::collisionmesh::construct_is_on_surface (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh23construct_is_on_surfaceEKiRKN5Eigen8MatrixXiERKN5Eigen8VectorXiE"]], "ipc::collisionmesh::default_can_collide (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh19default_can_collideE6size_t6size_t"]], "ipc::collisionmesh::dim (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh3dimEv"]], "ipc::collisionmesh::displace_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17displace_verticesERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::edge_area (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9edge_areaEK6size_t"]], "ipc::collisionmesh::edge_area_gradient (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh18edge_area_gradientEK6size_t"]], "ipc::collisionmesh::edge_areas (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh10edge_areasEv"]], "ipc::collisionmesh::edge_vertex_adjacencies (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh23edge_vertex_adjacenciesEv"]], "ipc::collisionmesh::edges (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh5edgesEv"]], "ipc::collisionmesh::faces (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh5facesEv"]], "ipc::collisionmesh::faces_to_edges (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh14faces_to_edgesEv"]], "ipc::collisionmesh::full_ndof (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9full_ndofEv"]], "ipc::collisionmesh::full_num_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17full_num_verticesEv"]], "ipc::collisionmesh::init_adjacencies (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh16init_adjacenciesEv"]], "ipc::collisionmesh::init_area_jacobians (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh19init_area_jacobiansEv"]], "ipc::collisionmesh::init_areas (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh10init_areasEv"]], "ipc::collisionmesh::init_codim_vertices (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh19init_codim_verticesEv"]], "ipc::collisionmesh::init_selection_matrices (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh23init_selection_matricesEKi"]], "ipc::collisionmesh::is_vertex_on_boundary (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh21is_vertex_on_boundaryEKi"]], "ipc::collisionmesh::m_codim_vertices (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh16m_codim_verticesE"]], "ipc::collisionmesh::m_displacement_dof_map (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh22m_displacement_dof_mapE"]], "ipc::collisionmesh::m_displacement_map (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh18m_displacement_mapE"]], "ipc::collisionmesh::m_edge_area_jacobian (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh20m_edge_area_jacobianE"]], "ipc::collisionmesh::m_edge_areas (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh12m_edge_areasE"]], "ipc::collisionmesh::m_edge_vertex_adjacencies (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh25m_edge_vertex_adjacenciesE"]], "ipc::collisionmesh::m_edges (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh7m_edgesE"]], "ipc::collisionmesh::m_faces (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh7m_facesE"]], "ipc::collisionmesh::m_faces_to_edges (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh16m_faces_to_edgesE"]], "ipc::collisionmesh::m_full_rest_positions (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh21m_full_rest_positionsE"]], "ipc::collisionmesh::m_full_vertex_to_vertex (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh23m_full_vertex_to_vertexE"]], "ipc::collisionmesh::m_is_vertex_on_boundary (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh23m_is_vertex_on_boundaryE"]], "ipc::collisionmesh::m_rest_positions (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh16m_rest_positionsE"]], "ipc::collisionmesh::m_select_dof (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh12m_select_dofE"]], "ipc::collisionmesh::m_select_vertices (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh17m_select_verticesE"]], "ipc::collisionmesh::m_vertex_area_jacobian (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh22m_vertex_area_jacobianE"]], "ipc::collisionmesh::m_vertex_areas (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh14m_vertex_areasE"]], "ipc::collisionmesh::m_vertex_edge_adjacencies (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh25m_vertex_edge_adjacenciesE"]], "ipc::collisionmesh::m_vertex_to_full_vertex (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh23m_vertex_to_full_vertexE"]], "ipc::collisionmesh::m_vertex_vertex_adjacencies (c++ member)": [[9, "_CPPv4N3ipc13CollisionMesh27m_vertex_vertex_adjacenciesE"]], "ipc::collisionmesh::map_displacements (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17map_displacementsERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::ndof (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh4ndofEv"]], "ipc::collisionmesh::num_codim_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh18num_codim_verticesEv"]], "ipc::collisionmesh::num_edges (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9num_edgesEv"]], "ipc::collisionmesh::num_faces (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh9num_facesEv"]], "ipc::collisionmesh::num_vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh12num_verticesEv"]], "ipc::collisionmesh::rest_positions (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh14rest_positionsEv"]], "ipc::collisionmesh::to_full_dof (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen12SparseMatrixIdEE"], [9, "_CPPv4NK3ipc13CollisionMesh11to_full_dofERKN5Eigen8VectorXdE"]], "ipc::collisionmesh::to_full_vertex_id (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh17to_full_vertex_idEK6size_t"]], "ipc::collisionmesh::vertex_area (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh11vertex_areaEK6size_t"]], "ipc::collisionmesh::vertex_area_gradient (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh20vertex_area_gradientEK6size_t"]], "ipc::collisionmesh::vertex_areas (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh12vertex_areasEv"]], "ipc::collisionmesh::vertex_edge_adjacencies (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh23vertex_edge_adjacenciesEv"]], "ipc::collisionmesh::vertex_matrix_to_dof_matrix (c++ function)": [[9, "_CPPv4N3ipc13CollisionMesh27vertex_matrix_to_dof_matrixERKN5Eigen12SparseMatrixIdEEi"]], "ipc::collisionmesh::vertex_vertex_adjacencies (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh25vertex_vertex_adjacenciesEv"]], "ipc::collisionmesh::vertices (c++ function)": [[9, "_CPPv4NK3ipc13CollisionMesh8verticesERKN5Eigen8MatrixXdE"]], "ipc::collisionmesh::~collisionmesh (c++ function)": [[9, "_CPPv4N3ipc13CollisionMeshD0Ev"]], "ipc::edgeedgedistancetype (c++ enum)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceTypeE"]], "ipc::edgeedgedistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType4AUTOE"]], "ipc::edgeedgedistancetype::ea0_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA0_EBE"]], "ipc::edgeedgedistancetype::ea0_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB0E"]], "ipc::edgeedgedistancetype::ea0_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA0_EB1E"]], "ipc::edgeedgedistancetype::ea1_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA1_EBE"]], "ipc::edgeedgedistancetype::ea1_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB0E"]], "ipc::edgeedgedistancetype::ea1_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType7EA1_EB1E"]], "ipc::edgeedgedistancetype::ea_eb (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType5EA_EBE"]], "ipc::edgeedgedistancetype::ea_eb0 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB0E"]], "ipc::edgeedgedistancetype::ea_eb1 (c++ enumerator)": [[10, "_CPPv4N3ipc20EdgeEdgeDistanceType6EA_EB1E"]], "ipc::pointedgedistancetype (c++ enum)": [[10, "_CPPv4N3ipc21PointEdgeDistanceTypeE"]], "ipc::pointedgedistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4AUTOE"]], "ipc::pointedgedistancetype::p_e (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType3P_EE"]], "ipc::pointedgedistancetype::p_e0 (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4P_E0E"]], "ipc::pointedgedistancetype::p_e1 (c++ enumerator)": [[10, "_CPPv4N3ipc21PointEdgeDistanceType4P_E1E"]], "ipc::pointtriangledistancetype (c++ enum)": [[10, "_CPPv4N3ipc25PointTriangleDistanceTypeE"]], "ipc::pointtriangledistancetype::auto (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4AUTOE"]], "ipc::pointtriangledistancetype::p_e0 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E0E"]], "ipc::pointtriangledistancetype::p_e1 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E1E"]], "ipc::pointtriangledistancetype::p_e2 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_E2E"]], "ipc::pointtriangledistancetype::p_t (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType3P_TE"]], "ipc::pointtriangledistancetype::p_t0 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T0E"]], "ipc::pointtriangledistancetype::p_t1 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T1E"]], "ipc::pointtriangledistancetype::p_t2 (c++ enumerator)": [[10, "_CPPv4N3ipc25PointTriangleDistanceType4P_T2E"]], "ipc::edge_edge_cross_squarednorm (c++ function)": [[10, "_CPPv4N3ipc27edge_edge_cross_squarednormERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::edge_edge_cross_squarednorm_gradient (c++ function)": [[10, "_CPPv4N3ipc36edge_edge_cross_squarednorm_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::edge_edge_cross_squarednorm_hessian (c++ function)": [[10, "_CPPv4N3ipc35edge_edge_cross_squarednorm_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::edge_edge_distance (c++ function)": [[10, "_CPPv4N3ipc18edge_edge_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType"]], "ipc::edge_edge_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc27edge_edge_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType"]], "ipc::edge_edge_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc26edge_edge_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE20EdgeEdgeDistanceType"]], "ipc::edge_edge_distance_type (c++ function)": [[10, "_CPPv4N3ipc23edge_edge_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::edge_edge_mollifier (c++ function)": [[10, "_CPPv4N3ipc19edge_edge_mollifierEKdKd"], [10, "_CPPv4N3ipc19edge_edge_mollifierERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd"]], "ipc::edge_edge_mollifier_gradient (c++ function)": [[10, "_CPPv4N3ipc28edge_edge_mollifier_gradientEKdKd"], [10, "_CPPv4N3ipc28edge_edge_mollifier_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd"]], "ipc::edge_edge_mollifier_hessian (c++ function)": [[10, "_CPPv4N3ipc27edge_edge_mollifier_hessianEKdKd"], [10, "_CPPv4N3ipc27edge_edge_mollifier_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEEKd"]], "ipc::edge_edge_mollifier_threshold (c++ function)": [[10, "_CPPv4N3ipc29edge_edge_mollifier_thresholdERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::line_line_distance (c++ function)": [[10, "_CPPv4N3ipc18line_line_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::line_line_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc27line_line_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::line_line_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc26line_line_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::point_edge_distance (c++ function)": [[10, "_CPPv4N3ipc19point_edge_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType"]], "ipc::point_edge_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc28point_edge_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType"]], "ipc::point_edge_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc27point_edge_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE21PointEdgeDistanceType"]], "ipc::point_edge_distance_type (c++ function)": [[10, "_CPPv4N3ipc24point_edge_distance_typeERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_line_distance (c++ function)": [[10, "_CPPv4N3ipc19point_line_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_line_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc28point_line_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_line_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc27point_line_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_plane_distance (c++ function)": [[10, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"], [10, "_CPPv4N3ipc20point_plane_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::point_plane_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"], [10, "_CPPv4N3ipc29point_plane_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::point_plane_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"], [10, "_CPPv4N3ipc28point_plane_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::point_point_distance (c++ function)": [[10, "_CPPv4N3ipc20point_point_distanceERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_point_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc29point_point_distance_gradientERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_point_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc28point_point_distance_hessianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_triangle_distance (c++ function)": [[10, "_CPPv4N3ipc23point_triangle_distanceERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType"]], "ipc::point_triangle_distance_gradient (c++ function)": [[10, "_CPPv4N3ipc32point_triangle_distance_gradientERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType"]], "ipc::point_triangle_distance_hessian (c++ function)": [[10, "_CPPv4N3ipc31point_triangle_distance_hessianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE25PointTriangleDistanceType"]], "ipc::point_triangle_distance_type (c++ function)": [[10, "_CPPv4N3ipc28point_triangle_distance_typeERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::edgeedgefrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraintE"]], "ipc::edgeedgefrictionconstraint::edgeedgecandidate (c++ function)": [[11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint17EdgeEdgeCandidateEll"]], "ipc::edgeedgefrictionconstraint::edgeedgefrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraint"], [11, "_CPPv4N3ipc26EdgeEdgeFrictionConstraint26EdgeEdgeFrictionConstraintERK18EdgeEdgeConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::edgeedgefrictionconstraint::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint21compute_closest_pointERK12VectorMax12d"]], "ipc::edgeedgefrictionconstraint::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d"]], "ipc::edgeedgefrictionconstraint::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint21compute_tangent_basisERK12VectorMax12d"]], "ipc::edgeedgefrictionconstraint::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d"]], "ipc::edgeedgefrictionconstraint::known_dtype (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint11known_dtypeEv"]], "ipc::edgeedgefrictionconstraint::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint17relative_velocityERK12VectorMax12d"]], "ipc::edgeedgefrictionconstraint::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint24relative_velocity_matrixERK11VectorMax2d"], [11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint24relative_velocity_matrixEv"]], "ipc::edgeedgefrictionconstraint::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc26EdgeEdgeFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d"]], "ipc::edgevertexfrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc28EdgeVertexFrictionConstraintE"]], "ipc::edgevertexfrictionconstraint::edgevertexcandidate (c++ function)": [[11, "_CPPv4N3ipc28EdgeVertexFrictionConstraint19EdgeVertexCandidateEll"]], "ipc::edgevertexfrictionconstraint::edgevertexfrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraint"], [11, "_CPPv4N3ipc28EdgeVertexFrictionConstraint28EdgeVertexFrictionConstraintERK20EdgeVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::edgevertexfrictionconstraint::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d"]], "ipc::edgevertexfrictionconstraint::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d"]], "ipc::edgevertexfrictionconstraint::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d"]], "ipc::edgevertexfrictionconstraint::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d"]], "ipc::edgevertexfrictionconstraint::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint17relative_velocityERK12VectorMax12d"]], "ipc::edgevertexfrictionconstraint::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint24relative_velocity_matrixERK11VectorMax2d"], [11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint24relative_velocity_matrixEv"]], "ipc::edgevertexfrictionconstraint::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc28EdgeVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d"]], "ipc::facevertexfrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc28FaceVertexFrictionConstraintE"]], "ipc::facevertexfrictionconstraint::facevertexcandidate (c++ function)": [[11, "_CPPv4N3ipc28FaceVertexFrictionConstraint19FaceVertexCandidateEll"]], "ipc::facevertexfrictionconstraint::facevertexfrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraint"], [11, "_CPPv4N3ipc28FaceVertexFrictionConstraint28FaceVertexFrictionConstraintERK20FaceVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::facevertexfrictionconstraint::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d"]], "ipc::facevertexfrictionconstraint::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d"]], "ipc::facevertexfrictionconstraint::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d"]], "ipc::facevertexfrictionconstraint::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d"]], "ipc::facevertexfrictionconstraint::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint17relative_velocityERK12VectorMax12d"]], "ipc::facevertexfrictionconstraint::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint24relative_velocity_matrixERK11VectorMax2d"], [11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint24relative_velocity_matrixEv"]], "ipc::facevertexfrictionconstraint::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc28FaceVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d"]], "ipc::frictionconstraint (c++ class)": [[11, "_CPPv4N3ipc18FrictionConstraintE"]], "ipc::frictionconstraint::diffwrt (c++ enum)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRTE"]], "ipc::frictionconstraint::diffwrt::lagged_displacements (c++ enumerator)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRT20LAGGED_DISPLACEMENTSE"]], "ipc::frictionconstraint::diffwrt::rest_positions (c++ enumerator)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRT14REST_POSITIONSE"]], "ipc::frictionconstraint::diffwrt::velocities (c++ enumerator)": [[11, "_CPPv4N3ipc18FrictionConstraint7DiffWRT10VELOCITIESE"]], "ipc::frictionconstraint::closest_point (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint13closest_pointE"]], "ipc::frictionconstraint::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint21compute_closest_pointERK12VectorMax12d"]], "ipc::frictionconstraint::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d"]], "ipc::frictionconstraint::compute_force (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint13compute_forceERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdKdKb"]], "ipc::frictionconstraint::compute_force_jacobian (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint22compute_force_jacobianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKdK7DiffWRTKd"]], "ipc::frictionconstraint::compute_normal_force_magnitude (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint30compute_normal_force_magnitudeERK12VectorMax12dKdKdKd"]], "ipc::frictionconstraint::compute_normal_force_magnitude_gradient (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint39compute_normal_force_magnitude_gradientERK12VectorMax12dKdKdKd"]], "ipc::frictionconstraint::compute_potential (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint17compute_potentialERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::frictionconstraint::compute_potential_gradient (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint26compute_potential_gradientERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKd"]], "ipc::frictionconstraint::compute_potential_hessian (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint25compute_potential_hessianERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKb"]], "ipc::frictionconstraint::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint21compute_tangent_basisERK12VectorMax12d"]], "ipc::frictionconstraint::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d"]], "ipc::frictionconstraint::dim (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint3dimEv"]], "ipc::frictionconstraint::init (c++ function)": [[11, "_CPPv4N3ipc18FrictionConstraint4initERKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKdKd"]], "ipc::frictionconstraint::mu (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint2muE"]], "ipc::frictionconstraint::ndof (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint4ndofEv"]], "ipc::frictionconstraint::normal_force_magnitude (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint22normal_force_magnitudeE"]], "ipc::frictionconstraint::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint17relative_velocityERK12VectorMax12d"]], "ipc::frictionconstraint::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint24relative_velocity_matrixERK11VectorMax2d"], [11, "_CPPv4NK3ipc18FrictionConstraint24relative_velocity_matrixEv"]], "ipc::frictionconstraint::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc18FrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d"]], "ipc::frictionconstraint::tangent_basis (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint13tangent_basisE"]], "ipc::frictionconstraint::weight (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint6weightE"]], "ipc::frictionconstraint::weight_gradient (c++ member)": [[11, "_CPPv4N3ipc18FrictionConstraint15weight_gradientE"]], "ipc::frictionconstraint::~frictionconstraint (c++ function)": [[11, "_CPPv4N3ipc18FrictionConstraintD0Ev"]], "ipc::frictionconstraints (c++ class)": [[11, "_CPPv4N3ipc19FrictionConstraintsE"]], "ipc::frictionconstraints::frictionconstraints (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints19FrictionConstraintsEv"]], "ipc::frictionconstraints::build (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsKdKdRKN5Eigen8VectorXdERKNSt8functionIFdddEEE"], [11, "_CPPv4N3ipc19FrictionConstraints5buildERK13CollisionMeshRKN5Eigen8MatrixXdERK20CollisionConstraintsddd"]], "ipc::frictionconstraints::clear (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints5clearEv"]], "ipc::frictionconstraints::compute_force (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints13compute_forceERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKdKb"]], "ipc::frictionconstraints::compute_force_jacobian (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints22compute_force_jacobianERK13CollisionMeshRKN5Eigen8MatrixXdERKN5Eigen8MatrixXdERKN5Eigen8MatrixXdEKdKdKdKN18FrictionConstraint7DiffWRTEKd"]], "ipc::frictionconstraints::compute_potential (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints17compute_potentialERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::frictionconstraints::compute_potential_gradient (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints26compute_potential_gradientERK13CollisionMeshRKN5Eigen8MatrixXdEKd"]], "ipc::frictionconstraints::compute_potential_hessian (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints25compute_potential_hessianERK13CollisionMeshRKN5Eigen8MatrixXdEKdKb"]], "ipc::frictionconstraints::default_blend_mu (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraints16default_blend_muEdd"]], "ipc::frictionconstraints::ee_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14ee_constraintsE"]], "ipc::frictionconstraints::empty (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints5emptyEv"]], "ipc::frictionconstraints::ev_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14ev_constraintsE"]], "ipc::frictionconstraints::fv_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14fv_constraintsE"]], "ipc::frictionconstraints::operator[] (c++ function)": [[11, "_CPPv4N3ipc19FrictionConstraintsixEK6size_t"], [11, "_CPPv4NK3ipc19FrictionConstraintsixEK6size_t"]], "ipc::frictionconstraints::size (c++ function)": [[11, "_CPPv4NK3ipc19FrictionConstraints4sizeEv"]], "ipc::frictionconstraints::vv_constraints (c++ member)": [[11, "_CPPv4N3ipc19FrictionConstraints14vv_constraintsE"]], "ipc::vertexvertexfrictionconstraint (c++ class)": [[11, "_CPPv4N3ipc30VertexVertexFrictionConstraintE"]], "ipc::vertexvertexfrictionconstraint::vertexvertexcandidate (c++ function)": [[11, "_CPPv4N3ipc30VertexVertexFrictionConstraint21VertexVertexCandidateEll"]], "ipc::vertexvertexfrictionconstraint::vertexvertexfrictionconstraint (c++ function)": [[11, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraint"], [11, "_CPPv4N3ipc30VertexVertexFrictionConstraint30VertexVertexFrictionConstraintERK22VertexVertexConstraintRKN5Eigen8MatrixXdERKN5Eigen8MatrixXiERKN5Eigen8MatrixXiEKdKd"]], "ipc::vertexvertexfrictionconstraint::compute_closest_point (c++ function)": [[11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint21compute_closest_pointERK12VectorMax12d"]], "ipc::vertexvertexfrictionconstraint::compute_closest_point_jacobian (c++ function)": [[11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint30compute_closest_point_jacobianERK12VectorMax12d"]], "ipc::vertexvertexfrictionconstraint::compute_tangent_basis (c++ function)": [[11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint21compute_tangent_basisERK12VectorMax12d"]], "ipc::vertexvertexfrictionconstraint::compute_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint30compute_tangent_basis_jacobianERK12VectorMax12d"]], "ipc::vertexvertexfrictionconstraint::relative_velocity (c++ function)": [[11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint17relative_velocityERK12VectorMax12d"]], "ipc::vertexvertexfrictionconstraint::relative_velocity_matrix (c++ function)": [[11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint24relative_velocity_matrixERK11VectorMax2d"], [11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint24relative_velocity_matrixEv"]], "ipc::vertexvertexfrictionconstraint::relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4NK3ipc30VertexVertexFrictionConstraint33relative_velocity_matrix_jacobianERK11VectorMax2d"]], "ipc::compute_normal_force_magnitude (c++ function)": [[11, "_CPPv4N3ipc30compute_normal_force_magnitudeEdddd"]], "ipc::compute_normal_force_magnitude_gradient (c++ function)": [[11, "_CPPv4N3ipc39compute_normal_force_magnitude_gradientEdRKN5Eigen8VectorXdEddd"]], "ipc::df1_x_minus_f1_over_x3 (c++ function)": [[11, "_CPPv4N3ipc22df1_x_minus_f1_over_x3EKdKd"]], "ipc::edge_edge_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc27edge_edge_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE"]], "ipc::edge_edge_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc34edge_edge_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE"]], "ipc::edge_edge_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc43edge_edge_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE"]], "ipc::edge_edge_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc23edge_edge_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::edge_edge_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc32edge_edge_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::f0_sf (c++ function)": [[11, "_CPPv4N3ipc5f0_SFEKdKd"]], "ipc::f1_sf_over_x (c++ function)": [[11, "_CPPv4N3ipc12f1_SF_over_xEKdKd"]], "ipc::point_edge_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc28point_edge_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEEKd"]], "ipc::point_edge_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc35point_edge_relative_velocity_matrixEKiKd"]], "ipc::point_edge_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc44point_edge_relative_velocity_matrix_jacobianEKiKd"]], "ipc::point_edge_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc24point_edge_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_edge_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc33point_edge_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_point_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc29point_point_relative_velocityERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_point_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc36point_point_relative_velocity_matrixEKi"]], "ipc::point_point_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc45point_point_relative_velocity_matrix_jacobianEKi"]], "ipc::point_point_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc25point_point_tangent_basisERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_point_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc34point_point_tangent_basis_jacobianERKN5Eigen3RefIK11VectorMax3dEERKN5Eigen3RefIK11VectorMax3dEE"]], "ipc::point_triangle_relative_velocity (c++ function)": [[11, "_CPPv4N3ipc32point_triangle_relative_velocityERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector2dEEE"]], "ipc::point_triangle_relative_velocity_matrix (c++ function)": [[11, "_CPPv4N3ipc39point_triangle_relative_velocity_matrixEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE"]], "ipc::point_triangle_relative_velocity_matrix_jacobian (c++ function)": [[11, "_CPPv4N3ipc48point_triangle_relative_velocity_matrix_jacobianEKiRKN5Eigen3RefIKN5Eigen8Vector2dEEE"]], "ipc::point_triangle_tangent_basis (c++ function)": [[11, "_CPPv4N3ipc28point_triangle_tangent_basisERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::point_triangle_tangent_basis_jacobian (c++ function)": [[11, "_CPPv4N3ipc37point_triangle_tangent_basis_jacobianERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEERKN5Eigen3RefIKN5Eigen8Vector3dEEE"]], "ipc::has_intersections (c++ function)": [[12, "_CPPv4N3ipc17has_intersectionsERK13CollisionMeshRKN5Eigen8MatrixXdEK16BroadPhaseMethod"]], "ipc::is_edge_intersecting_triangle (c++ function)": [[12, "_CPPv4N3ipc29is_edge_intersecting_triangleERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dERKN5Eigen8Vector3dE"]], "ipc::logger (c++ function)": [[13, "_CPPv4N3ipc6loggerEv"]], "ipc::project_to_pd (c++ function)": [[13, "_CPPv4I0_i_i_i_i_iEN3ipc13project_to_pdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEEd"]], "ipc::project_to_psd (c++ function)": [[13, "_CPPv4I0_i_i_i_i_iEN3ipc14project_to_psdEN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEERKN5Eigen6MatrixI7_Scalar5_Rows5_Cols8_Options8_MaxRows8_MaxColsEE"]], "ipc::set_logger (c++ function)": [[13, "_CPPv4N3ipc10set_loggerENSt10shared_ptrIN6spdlog6loggerEEE"]], "barrier() (in module ipctk)": [[17, "ipctk.barrier"]], "barrier_gradient() (in module ipctk)": [[17, "ipctk.barrier_gradient"]], "barrier_hessian() (in module ipctk)": [[17, "ipctk.barrier_hessian"]], "initial_barrier_stiffness() (in module ipctk)": [[17, "ipctk.initial_barrier_stiffness"]], "update_barrier_stiffness() (in module ipctk)": [[17, "ipctk.update_barrier_stiffness"]], "aabb (class in ipctk)": [[18, "ipctk.AABB"]], "bounding_volume_hierarchy (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.BOUNDING_VOLUME_HIERARCHY"]], "brute_force (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.BRUTE_FORCE"]], "bvh (class in ipctk)": [[18, "ipctk.BVH"]], "broadphase (class in ipctk)": [[18, "ipctk.BroadPhase"]], "broadphasemethod (class in ipctk)": [[18, "ipctk.BroadPhaseMethod"]], "bruteforce (class in ipctk)": [[18, "ipctk.BruteForce"]], "hash_grid (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.HASH_GRID"]], "hashgrid (class in ipctk)": [[18, "ipctk.HashGrid"]], "spatial_hash (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.SPATIAL_HASH"]], "sweep_and_tiniest_queue (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.SWEEP_AND_TINIEST_QUEUE"]], "sweep_and_tiniest_queue_gpu (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.SWEEP_AND_TINIEST_QUEUE_GPU"]], "spatialhash (class in ipctk)": [[18, "ipctk.SpatialHash"]], "sweepandtiniestqueue (class in ipctk)": [[18, "ipctk.SweepAndTiniestQueue"]], "__annotations__ (ipctk.aabb attribute)": [[18, "ipctk.AABB.__annotations__"]], "__annotations__ (ipctk.bvh attribute)": [[18, "ipctk.BVH.__annotations__"]], "__annotations__ (ipctk.broadphase attribute)": [[18, "ipctk.BroadPhase.__annotations__"]], "__annotations__ (ipctk.bruteforce attribute)": [[18, "ipctk.BruteForce.__annotations__"]], "__annotations__ (ipctk.hashgrid attribute)": [[18, "ipctk.HashGrid.__annotations__"]], "__annotations__ (ipctk.spatialhash attribute)": [[18, "ipctk.SpatialHash.__annotations__"]], "__annotations__ (ipctk.sweepandtiniestqueue attribute)": [[18, "ipctk.SweepAndTiniestQueue.__annotations__"]], "__eq__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__eq__"]], "__getstate__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__getstate__"]], "__hash__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__hash__"]], "__index__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__index__"]], "__init__() (ipctk.aabb method)": [[18, "ipctk.AABB.__init__"]], "__init__() (ipctk.bvh method)": [[18, "ipctk.BVH.__init__"]], "__init__() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.__init__"]], "__init__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__init__"]], "__init__() (ipctk.bruteforce method)": [[18, "ipctk.BruteForce.__init__"]], "__init__() (ipctk.hashgrid method)": [[18, "ipctk.HashGrid.__init__"]], "__init__() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.__init__"]], "__init__() (ipctk.sweepandtiniestqueue method)": [[18, "ipctk.SweepAndTiniestQueue.__init__"]], "__int__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__int__"]], "__members__ (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.__members__"]], "__module__ (ipctk.aabb attribute)": [[18, "ipctk.AABB.__module__"]], "__module__ (ipctk.bvh attribute)": [[18, "ipctk.BVH.__module__"]], "__module__ (ipctk.broadphase attribute)": [[18, "ipctk.BroadPhase.__module__"]], "__module__ (ipctk.broadphasemethod attribute)": [[18, "ipctk.BroadPhaseMethod.__module__"]], "__module__ (ipctk.bruteforce attribute)": [[18, "ipctk.BruteForce.__module__"]], "__module__ (ipctk.hashgrid attribute)": [[18, "ipctk.HashGrid.__module__"]], "__module__ (ipctk.spatialhash attribute)": [[18, "ipctk.SpatialHash.__module__"]], "__module__ (ipctk.sweepandtiniestqueue attribute)": [[18, "ipctk.SweepAndTiniestQueue.__module__"]], "__ne__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__ne__"]], "__repr__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__repr__"]], "__setstate__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__setstate__"]], "__str__() (ipctk.broadphasemethod method)": [[18, "ipctk.BroadPhaseMethod.__str__"]], "build() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.build"]], "build() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.build"]], "can_vertices_collide (ipctk.broadphase property)": [[18, "ipctk.BroadPhase.can_vertices_collide"]], "cellsize() (ipctk.hashgrid method)": [[18, "ipctk.HashGrid.cellSize"]], "clear() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.clear"]], "clear() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.clear"]], "conservative_inflation() (ipctk.aabb static method)": [[18, "ipctk.AABB.conservative_inflation"]], "detect_collision_candidates() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.detect_collision_candidates"]], "detect_edge_edge_candidates() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.detect_edge_edge_candidates"]], "detect_edge_face_candidates() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.detect_edge_face_candidates"]], "detect_edge_vertex_candidates() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.detect_edge_vertex_candidates"]], "detect_face_vertex_candidates() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.detect_face_vertex_candidates"]], "detect_vertex_vertex_candidates() (ipctk.broadphase method)": [[18, "ipctk.BroadPhase.detect_vertex_vertex_candidates"]], "domainmax() (ipctk.hashgrid method)": [[18, "ipctk.HashGrid.domainMax"]], "domainmin() (ipctk.hashgrid method)": [[18, "ipctk.HashGrid.domainMin"]], "edge_start_ind (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.edge_start_ind"]], "from_point() (ipctk.aabb static method)": [[18, "ipctk.AABB.from_point"]], "gridsize() (ipctk.hashgrid method)": [[18, "ipctk.HashGrid.gridSize"]], "intersects() (ipctk.aabb method)": [[18, "ipctk.AABB.intersects"]], "is_edge_index() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.is_edge_index"]], "is_triangle_index() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.is_triangle_index"]], "is_vertex_index() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.is_vertex_index"]], "left_bottom_corner (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.left_bottom_corner"]], "make_broad_phase() (ipctk.broadphase static method)": [[18, "ipctk.BroadPhase.make_broad_phase"]], "max (ipctk.aabb property)": [[18, "ipctk.AABB.max"]], "min (ipctk.aabb property)": [[18, "ipctk.AABB.min"]], "name (ipctk.broadphasemethod property)": [[18, "ipctk.BroadPhaseMethod.name"]], "one_div_voxelsize (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.one_div_voxelSize"]], "point_and_edge_occupancy (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.point_and_edge_occupancy"]], "right_top_corner (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.right_top_corner"]], "to_edge_index() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.to_edge_index"]], "to_triangle_index() (ipctk.spatialhash method)": [[18, "ipctk.SpatialHash.to_triangle_index"]], "tri_start_ind (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.tri_start_ind"]], "value (ipctk.broadphasemethod property)": [[18, "ipctk.BroadPhaseMethod.value"]], "vertex_ids (ipctk.aabb property)": [[18, "ipctk.AABB.vertex_ids"]], "voxel (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.voxel"]], "voxel_count (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.voxel_count"]], "voxel_count_0x1 (ipctk.spatialhash property)": [[18, "ipctk.SpatialHash.voxel_count_0x1"]], "candidates (class in ipctk)": [[19, "ipctk.Candidates"]], "continuouscollisioncandidate (class in ipctk)": [[19, "ipctk.ContinuousCollisionCandidate"]], "edgeedgecandidate (class in ipctk)": [[19, "ipctk.EdgeEdgeCandidate"]], "edgefacecandidate (class in ipctk)": [[19, "ipctk.EdgeFaceCandidate"]], "edgevertexcandidate (class in ipctk)": [[19, "ipctk.EdgeVertexCandidate"]], "facevertexcandidate (class in ipctk)": [[19, "ipctk.FaceVertexCandidate"]], "vertexvertexcandidate (class in ipctk)": [[19, "ipctk.VertexVertexCandidate"]], "__annotations__ (ipctk.candidates attribute)": [[19, "ipctk.Candidates.__annotations__"]], "__annotations__ (ipctk.continuouscollisioncandidate attribute)": [[19, "ipctk.ContinuousCollisionCandidate.__annotations__"]], "__annotations__ (ipctk.edgeedgecandidate attribute)": [[19, "ipctk.EdgeEdgeCandidate.__annotations__"]], "__annotations__ (ipctk.edgefacecandidate attribute)": [[19, "ipctk.EdgeFaceCandidate.__annotations__"]], "__annotations__ (ipctk.edgevertexcandidate attribute)": [[19, "ipctk.EdgeVertexCandidate.__annotations__"]], "__annotations__ (ipctk.facevertexcandidate attribute)": [[19, "ipctk.FaceVertexCandidate.__annotations__"]], "__annotations__ (ipctk.vertexvertexcandidate attribute)": [[19, "ipctk.VertexVertexCandidate.__annotations__"]], "__eq__() (ipctk.edgeedgecandidate method)": [[19, "ipctk.EdgeEdgeCandidate.__eq__"]], "__eq__() (ipctk.edgefacecandidate method)": [[19, "ipctk.EdgeFaceCandidate.__eq__"]], "__eq__() (ipctk.edgevertexcandidate method)": [[19, "ipctk.EdgeVertexCandidate.__eq__"]], "__eq__() (ipctk.facevertexcandidate method)": [[19, "ipctk.FaceVertexCandidate.__eq__"]], "__eq__() (ipctk.vertexvertexcandidate method)": [[19, "ipctk.VertexVertexCandidate.__eq__"]], "__getitem__() (ipctk.candidates method)": [[19, "ipctk.Candidates.__getitem__"]], "__hash__ (ipctk.edgeedgecandidate attribute)": [[19, "ipctk.EdgeEdgeCandidate.__hash__"]], "__hash__ (ipctk.edgefacecandidate attribute)": [[19, "ipctk.EdgeFaceCandidate.__hash__"]], "__hash__ (ipctk.edgevertexcandidate attribute)": [[19, "ipctk.EdgeVertexCandidate.__hash__"]], "__hash__ (ipctk.facevertexcandidate attribute)": [[19, "ipctk.FaceVertexCandidate.__hash__"]], "__hash__ (ipctk.vertexvertexcandidate attribute)": [[19, "ipctk.VertexVertexCandidate.__hash__"]], "__init__() (ipctk.candidates method)": [[19, "ipctk.Candidates.__init__"]], "__init__() (ipctk.continuouscollisioncandidate method)": [[19, "ipctk.ContinuousCollisionCandidate.__init__"]], "__init__() (ipctk.edgeedgecandidate method)": [[19, "ipctk.EdgeEdgeCandidate.__init__"]], "__init__() (ipctk.edgefacecandidate method)": [[19, "ipctk.EdgeFaceCandidate.__init__"]], "__init__() (ipctk.edgevertexcandidate method)": [[19, "ipctk.EdgeVertexCandidate.__init__"]], "__init__() (ipctk.facevertexcandidate method)": [[19, "ipctk.FaceVertexCandidate.__init__"]], "__init__() (ipctk.vertexvertexcandidate method)": [[19, "ipctk.VertexVertexCandidate.__init__"]], "__len__() (ipctk.candidates method)": [[19, "ipctk.Candidates.__len__"]], "__lt__() (ipctk.edgeedgecandidate method)": [[19, "ipctk.EdgeEdgeCandidate.__lt__"]], "__lt__() (ipctk.edgefacecandidate method)": [[19, "ipctk.EdgeFaceCandidate.__lt__"]], "__lt__() (ipctk.edgevertexcandidate method)": [[19, "ipctk.EdgeVertexCandidate.__lt__"]], "__lt__() (ipctk.facevertexcandidate method)": [[19, "ipctk.FaceVertexCandidate.__lt__"]], "__lt__() (ipctk.vertexvertexcandidate method)": [[19, "ipctk.VertexVertexCandidate.__lt__"]], "__module__ (ipctk.candidates attribute)": [[19, "ipctk.Candidates.__module__"]], "__module__ (ipctk.continuouscollisioncandidate attribute)": [[19, "ipctk.ContinuousCollisionCandidate.__module__"]], "__module__ (ipctk.edgeedgecandidate attribute)": [[19, "ipctk.EdgeEdgeCandidate.__module__"]], "__module__ (ipctk.edgefacecandidate attribute)": [[19, "ipctk.EdgeFaceCandidate.__module__"]], "__module__ (ipctk.edgevertexcandidate attribute)": [[19, "ipctk.EdgeVertexCandidate.__module__"]], "__module__ (ipctk.facevertexcandidate attribute)": [[19, "ipctk.FaceVertexCandidate.__module__"]], "__module__ (ipctk.vertexvertexcandidate attribute)": [[19, "ipctk.VertexVertexCandidate.__module__"]], "__ne__() (ipctk.edgeedgecandidate method)": [[19, "ipctk.EdgeEdgeCandidate.__ne__"]], "__ne__() (ipctk.edgefacecandidate method)": [[19, "ipctk.EdgeFaceCandidate.__ne__"]], "__ne__() (ipctk.edgevertexcandidate method)": [[19, "ipctk.EdgeVertexCandidate.__ne__"]], "__ne__() (ipctk.facevertexcandidate method)": [[19, "ipctk.FaceVertexCandidate.__ne__"]], "__ne__() (ipctk.vertexvertexcandidate method)": [[19, "ipctk.VertexVertexCandidate.__ne__"]], "__repr__() (ipctk.edgeedgecandidate method)": [[19, "ipctk.EdgeEdgeCandidate.__repr__"]], "__repr__() (ipctk.edgefacecandidate method)": [[19, "ipctk.EdgeFaceCandidate.__repr__"]], "__repr__() (ipctk.edgevertexcandidate method)": [[19, "ipctk.EdgeVertexCandidate.__repr__"]], "__repr__() (ipctk.facevertexcandidate method)": [[19, "ipctk.FaceVertexCandidate.__repr__"]], "__repr__() (ipctk.vertexvertexcandidate method)": [[19, "ipctk.VertexVertexCandidate.__repr__"]], "__str__() (ipctk.edgeedgecandidate method)": [[19, "ipctk.EdgeEdgeCandidate.__str__"]], "__str__() (ipctk.edgefacecandidate method)": [[19, "ipctk.EdgeFaceCandidate.__str__"]], "__str__() (ipctk.edgevertexcandidate method)": [[19, "ipctk.EdgeVertexCandidate.__str__"]], "__str__() (ipctk.facevertexcandidate method)": [[19, "ipctk.FaceVertexCandidate.__str__"]], "__str__() (ipctk.vertexvertexcandidate method)": [[19, "ipctk.VertexVertexCandidate.__str__"]], "build() (ipctk.candidates method)": [[19, "ipctk.Candidates.build"]], "ccd() (ipctk.continuouscollisioncandidate method)": [[19, "ipctk.ContinuousCollisionCandidate.ccd"]], "clear() (ipctk.candidates method)": [[19, "ipctk.Candidates.clear"]], "compute_cfl_stepsize() (ipctk.candidates method)": [[19, "ipctk.Candidates.compute_cfl_stepsize"]], "compute_collision_free_stepsize() (ipctk.candidates method)": [[19, "ipctk.Candidates.compute_collision_free_stepsize"]], "compute_noncandidate_conservative_stepsize() (ipctk.candidates method)": [[19, "ipctk.Candidates.compute_noncandidate_conservative_stepsize"]], "edge0_id (ipctk.edgeedgecandidate property)": [[19, "ipctk.EdgeEdgeCandidate.edge0_id"]], "edge1_id (ipctk.edgeedgecandidate property)": [[19, "ipctk.EdgeEdgeCandidate.edge1_id"]], "edge_id (ipctk.edgefacecandidate property)": [[19, "ipctk.EdgeFaceCandidate.edge_id"]], "edge_id (ipctk.edgevertexcandidate property)": [[19, "ipctk.EdgeVertexCandidate.edge_id"]], "ee_candidates (ipctk.candidates property)": [[19, "ipctk.Candidates.ee_candidates"]], "empty() (ipctk.candidates method)": [[19, "ipctk.Candidates.empty"]], "ev_candidates (ipctk.candidates property)": [[19, "ipctk.Candidates.ev_candidates"]], "face_id (ipctk.edgefacecandidate property)": [[19, "ipctk.EdgeFaceCandidate.face_id"]], "face_id (ipctk.facevertexcandidate property)": [[19, "ipctk.FaceVertexCandidate.face_id"]], "fv_candidates (ipctk.candidates property)": [[19, "ipctk.Candidates.fv_candidates"]], "is_step_collision_free() (ipctk.candidates method)": [[19, "ipctk.Candidates.is_step_collision_free"]], "print_ccd_query() (ipctk.continuouscollisioncandidate method)": [[19, "ipctk.ContinuousCollisionCandidate.print_ccd_query"]], "save_obj() (ipctk.candidates method)": [[19, "ipctk.Candidates.save_obj"]], "vertex0_id (ipctk.vertexvertexcandidate property)": [[19, "ipctk.VertexVertexCandidate.vertex0_id"]], "vertex1_id (ipctk.vertexvertexcandidate property)": [[19, "ipctk.VertexVertexCandidate.vertex1_id"]], "vertex_id (ipctk.edgevertexcandidate property)": [[19, "ipctk.EdgeVertexCandidate.vertex_id"]], "vertex_id (ipctk.facevertexcandidate property)": [[19, "ipctk.FaceVertexCandidate.vertex_id"]], "vv_candidates (ipctk.candidates property)": [[19, "ipctk.Candidates.vv_candidates"]], "intervalnonlineartrajectory (class in ipctk)": [[20, "ipctk.IntervalNonlinearTrajectory"]], "nonlineartrajectory (class in ipctk)": [[20, "ipctk.NonlinearTrajectory"]], "__annotations__ (ipctk.intervalnonlineartrajectory attribute)": [[20, "ipctk.IntervalNonlinearTrajectory.__annotations__"]], "__annotations__ (ipctk.nonlineartrajectory attribute)": [[20, "ipctk.NonlinearTrajectory.__annotations__"]], "__call__() (ipctk.intervalnonlineartrajectory method)": [[20, "ipctk.IntervalNonlinearTrajectory.__call__"]], "__call__() (ipctk.nonlineartrajectory method)": [[20, "ipctk.NonlinearTrajectory.__call__"]], "__init__() (ipctk.intervalnonlineartrajectory method)": [[20, "ipctk.IntervalNonlinearTrajectory.__init__"]], "__init__() (ipctk.nonlineartrajectory method)": [[20, "ipctk.NonlinearTrajectory.__init__"]], "__module__ (ipctk.intervalnonlineartrajectory attribute)": [[20, "ipctk.IntervalNonlinearTrajectory.__module__"]], "__module__ (ipctk.nonlineartrajectory attribute)": [[20, "ipctk.NonlinearTrajectory.__module__"]], "additive_ccd() (in module ipctk.additive_ccd)": [[20, "ipctk.additive_ccd.additive_ccd"]], "ccd_strategy() (in module ipctk)": [[20, "ipctk.ccd_strategy"]], "compute_collision_free_stepsize() (in module ipctk)": [[20, "ipctk.compute_collision_free_stepsize"]], "conservative_piecewise_linear_ccd() (in module ipctk)": [[20, "ipctk.conservative_piecewise_linear_ccd"]], "edge_edge_ccd() (in module ipctk)": [[20, "ipctk.edge_edge_ccd"]], "edge_edge_ccd() (in module ipctk.additive_ccd)": [[20, "ipctk.additive_ccd.edge_edge_ccd"]], "edge_edge_nonlinear_ccd() (in module ipctk)": [[20, "ipctk.edge_edge_nonlinear_ccd"]], "is_step_collision_free() (in module ipctk)": [[20, "ipctk.is_step_collision_free"]], "max_distance_from_linear() (ipctk.intervalnonlineartrajectory method)": [[20, "ipctk.IntervalNonlinearTrajectory.max_distance_from_linear"]], "max_distance_from_linear() (ipctk.nonlineartrajectory method)": [[20, "ipctk.NonlinearTrajectory.max_distance_from_linear"]], "point_edge_ccd() (in module ipctk)": [[20, "ipctk.point_edge_ccd"]], "point_edge_ccd() (in module ipctk.additive_ccd)": [[20, "ipctk.additive_ccd.point_edge_ccd"]], "point_edge_nonlinear_ccd() (in module ipctk)": [[20, "ipctk.point_edge_nonlinear_ccd"]], "point_point_ccd() (in module ipctk)": [[20, "ipctk.point_point_ccd"]], "point_point_ccd() (in module ipctk.additive_ccd)": [[20, "ipctk.additive_ccd.point_point_ccd"]], "point_point_nonlinear_ccd() (in module ipctk)": [[20, "ipctk.point_point_nonlinear_ccd"]], "point_triangle_ccd() (in module ipctk)": [[20, "ipctk.point_triangle_ccd"]], "point_triangle_ccd() (in module ipctk.additive_ccd)": [[20, "ipctk.additive_ccd.point_triangle_ccd"]], "point_triangle_nonlinear_ccd() (in module ipctk)": [[20, "ipctk.point_triangle_nonlinear_ccd"]], "collisionconstraint (class in ipctk)": [[21, "ipctk.CollisionConstraint"]], "collisionconstraints (class in ipctk)": [[21, "ipctk.CollisionConstraints"]], "edgeedgeconstraint (class in ipctk)": [[21, "ipctk.EdgeEdgeConstraint"]], "edgevertexconstraint (class in ipctk)": [[21, "ipctk.EdgeVertexConstraint"]], "facevertexconstraint (class in ipctk)": [[21, "ipctk.FaceVertexConstraint"]], "planevertexconstraint (class in ipctk)": [[21, "ipctk.PlaneVertexConstraint"]], "vertexvertexconstraint (class in ipctk)": [[21, "ipctk.VertexVertexConstraint"]], "__annotations__ (ipctk.collisionconstraint attribute)": [[21, "ipctk.CollisionConstraint.__annotations__"]], "__annotations__ (ipctk.collisionconstraints attribute)": [[21, "ipctk.CollisionConstraints.__annotations__"]], "__annotations__ (ipctk.edgeedgeconstraint attribute)": [[21, "ipctk.EdgeEdgeConstraint.__annotations__"]], "__annotations__ (ipctk.edgevertexconstraint attribute)": [[21, "ipctk.EdgeVertexConstraint.__annotations__"]], "__annotations__ (ipctk.facevertexconstraint attribute)": [[21, "ipctk.FaceVertexConstraint.__annotations__"]], "__annotations__ (ipctk.planevertexconstraint attribute)": [[21, "ipctk.PlaneVertexConstraint.__annotations__"]], "__annotations__ (ipctk.vertexvertexconstraint attribute)": [[21, "ipctk.VertexVertexConstraint.__annotations__"]], "__eq__() (ipctk.edgeedgeconstraint method)": [[21, "ipctk.EdgeEdgeConstraint.__eq__"]], "__getitem__() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.__getitem__"]], "__hash__ (ipctk.edgeedgeconstraint attribute)": [[21, "ipctk.EdgeEdgeConstraint.__hash__"]], "__init__() (ipctk.collisionconstraint method)": [[21, "ipctk.CollisionConstraint.__init__"]], "__init__() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.__init__"]], "__init__() (ipctk.edgeedgeconstraint method)": [[21, "ipctk.EdgeEdgeConstraint.__init__"]], "__init__() (ipctk.edgevertexconstraint method)": [[21, "ipctk.EdgeVertexConstraint.__init__"]], "__init__() (ipctk.facevertexconstraint method)": [[21, "ipctk.FaceVertexConstraint.__init__"]], "__init__() (ipctk.planevertexconstraint method)": [[21, "ipctk.PlaneVertexConstraint.__init__"]], "__init__() (ipctk.vertexvertexconstraint method)": [[21, "ipctk.VertexVertexConstraint.__init__"]], "__len__() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.__len__"]], "__lt__() (ipctk.edgeedgeconstraint method)": [[21, "ipctk.EdgeEdgeConstraint.__lt__"]], "__module__ (ipctk.collisionconstraint attribute)": [[21, "ipctk.CollisionConstraint.__module__"]], "__module__ (ipctk.collisionconstraints attribute)": [[21, "ipctk.CollisionConstraints.__module__"]], "__module__ (ipctk.edgeedgeconstraint attribute)": [[21, "ipctk.EdgeEdgeConstraint.__module__"]], "__module__ (ipctk.edgevertexconstraint attribute)": [[21, "ipctk.EdgeVertexConstraint.__module__"]], "__module__ (ipctk.facevertexconstraint attribute)": [[21, "ipctk.FaceVertexConstraint.__module__"]], "__module__ (ipctk.planevertexconstraint attribute)": [[21, "ipctk.PlaneVertexConstraint.__module__"]], "__module__ (ipctk.vertexvertexconstraint attribute)": [[21, "ipctk.VertexVertexConstraint.__module__"]], "__ne__() (ipctk.edgeedgeconstraint method)": [[21, "ipctk.EdgeEdgeConstraint.__ne__"]], "are_shape_derivatives_enabled (ipctk.collisionconstraints property)": [[21, "ipctk.CollisionConstraints.are_shape_derivatives_enabled"]], "build() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.build"]], "clear() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.clear"]], "compute_minimum_distance() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.compute_minimum_distance"]], "compute_potential() (ipctk.collisionconstraint method)": [[21, "ipctk.CollisionConstraint.compute_potential"]], "compute_potential() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.compute_potential"]], "compute_potential_gradient() (ipctk.collisionconstraint method)": [[21, "ipctk.CollisionConstraint.compute_potential_gradient"]], "compute_potential_gradient() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.compute_potential_gradient"]], "compute_potential_hessian() (ipctk.collisionconstraint method)": [[21, "ipctk.CollisionConstraint.compute_potential_hessian"]], "compute_potential_hessian() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.compute_potential_hessian"]], "compute_shape_derivative() (ipctk.collisionconstraint method)": [[21, "ipctk.CollisionConstraint.compute_shape_derivative"]], "compute_shape_derivative() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.compute_shape_derivative"]], "dmin (ipctk.collisionconstraint property)": [[21, "ipctk.CollisionConstraint.dmin"]], "dtype (ipctk.edgeedgeconstraint property)": [[21, "ipctk.EdgeEdgeConstraint.dtype"]], "ee_constraints (ipctk.collisionconstraints property)": [[21, "ipctk.CollisionConstraints.ee_constraints"]], "empty() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.empty"]], "eps_x (ipctk.edgeedgeconstraint property)": [[21, "ipctk.EdgeEdgeConstraint.eps_x"]], "ev_constraints (ipctk.collisionconstraints property)": [[21, "ipctk.CollisionConstraints.ev_constraints"]], "fv_constraints (ipctk.collisionconstraints property)": [[21, "ipctk.CollisionConstraints.fv_constraints"]], "is_edge_edge() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.is_edge_edge"]], "is_edge_vertex() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.is_edge_vertex"]], "is_face_vertex() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.is_face_vertex"]], "is_plane_vertex() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.is_plane_vertex"]], "is_vertex_vertex() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.is_vertex_vertex"]], "plane_normal (ipctk.planevertexconstraint property)": [[21, "ipctk.PlaneVertexConstraint.plane_normal"]], "plane_origin (ipctk.planevertexconstraint property)": [[21, "ipctk.PlaneVertexConstraint.plane_origin"]], "pv_constraints (ipctk.collisionconstraints property)": [[21, "ipctk.CollisionConstraints.pv_constraints"]], "to_string() (ipctk.collisionconstraints method)": [[21, "ipctk.CollisionConstraints.to_string"]], "use_convergent_formulation (ipctk.collisionconstraints property)": [[21, "ipctk.CollisionConstraints.use_convergent_formulation"]], "vertex_id (ipctk.planevertexconstraint property)": [[21, "ipctk.PlaneVertexConstraint.vertex_id"]], "vv_constraints (ipctk.collisionconstraints property)": [[21, "ipctk.CollisionConstraints.vv_constraints"]], "weight (ipctk.collisionconstraint property)": [[21, "ipctk.CollisionConstraint.weight"]], "weight_gradient (ipctk.collisionconstraint property)": [[21, "ipctk.CollisionConstraint.weight_gradient"]], "collisionmesh (class in ipctk)": [[22, "ipctk.CollisionMesh"]], "__annotations__ (ipctk.collisionmesh attribute)": [[22, "ipctk.CollisionMesh.__annotations__"]], "__init__() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.__init__"]], "__module__ (ipctk.collisionmesh attribute)": [[22, "ipctk.CollisionMesh.__module__"]], "are_adjacencies_initialized() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.are_adjacencies_initialized"]], "are_area_jacobians_initialized() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.are_area_jacobians_initialized"]], "build_from_full_mesh() (ipctk.collisionmesh static method)": [[22, "ipctk.CollisionMesh.build_from_full_mesh"]], "can_collide (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.can_collide"]], "codim_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.codim_vertices"]], "construct_faces_to_edges() (ipctk.collisionmesh static method)": [[22, "ipctk.CollisionMesh.construct_faces_to_edges"]], "construct_is_on_surface() (ipctk.collisionmesh static method)": [[22, "ipctk.CollisionMesh.construct_is_on_surface"]], "dim (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.dim"]], "displace_vertices() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.displace_vertices"]], "edge_area() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.edge_area"]], "edge_area_gradient() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.edge_area_gradient"]], "edge_areas() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.edge_areas"]], "edge_vertex_adjacencies (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.edge_vertex_adjacencies"]], "edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.edges"]], "faces (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.faces"]], "faces_to_edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.faces_to_edges"]], "full_ndof (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.full_ndof"]], "full_num_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.full_num_vertices"]], "init_adjacencies() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.init_adjacencies"]], "init_area_jacobians() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.init_area_jacobians"]], "is_vertex_on_boundary() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.is_vertex_on_boundary"]], "map_displacements() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.map_displacements"]], "ndof (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.ndof"]], "num_codim_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_codim_vertices"]], "num_edges (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_edges"]], "num_faces (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_faces"]], "num_vertices (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.num_vertices"]], "rest_positions (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.rest_positions"]], "to_full_dof() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.to_full_dof"]], "to_full_vertex_id() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.to_full_vertex_id"]], "vertex_area() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.vertex_area"]], "vertex_area_gradient() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.vertex_area_gradient"]], "vertex_areas (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.vertex_areas"]], "vertex_edge_adjacencies (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.vertex_edge_adjacencies"]], "vertex_vertex_adjacencies (ipctk.collisionmesh property)": [[22, "ipctk.CollisionMesh.vertex_vertex_adjacencies"]], "vertices() (ipctk.collisionmesh method)": [[22, "ipctk.CollisionMesh.vertices"]], "auto (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.AUTO"]], "auto (ipctk.pointedgedistancetype attribute)": [[23, "ipctk.PointEdgeDistanceType.AUTO"]], "auto (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.AUTO"]], "ea0_eb (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA0_EB"]], "ea0_eb0 (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA0_EB0"]], "ea0_eb1 (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA0_EB1"]], "ea1_eb (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA1_EB"]], "ea1_eb0 (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA1_EB0"]], "ea1_eb1 (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA1_EB1"]], "ea_eb (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA_EB"]], "ea_eb0 (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA_EB0"]], "ea_eb1 (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.EA_EB1"]], "edgeedgedistancetype (class in ipctk)": [[23, "ipctk.EdgeEdgeDistanceType"]], "p_e (ipctk.pointedgedistancetype attribute)": [[23, "ipctk.PointEdgeDistanceType.P_E"]], "p_e0 (ipctk.pointedgedistancetype attribute)": [[23, "ipctk.PointEdgeDistanceType.P_E0"]], "p_e0 (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.P_E0"]], "p_e1 (ipctk.pointedgedistancetype attribute)": [[23, "ipctk.PointEdgeDistanceType.P_E1"]], "p_e1 (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.P_E1"]], "p_e2 (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.P_E2"]], "p_t (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.P_T"]], "p_t0 (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.P_T0"]], "p_t1 (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.P_T1"]], "p_t2 (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.P_T2"]], "pointedgedistancetype (class in ipctk)": [[23, "ipctk.PointEdgeDistanceType"]], "pointtriangledistancetype (class in ipctk)": [[23, "ipctk.PointTriangleDistanceType"]], "__annotations__ (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.__annotations__"]], "__annotations__ (ipctk.pointedgedistancetype attribute)": [[23, "ipctk.PointEdgeDistanceType.__annotations__"]], "__annotations__ (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.__annotations__"]], "__eq__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__eq__"]], "__eq__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__eq__"]], "__eq__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__eq__"]], "__getstate__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__getstate__"]], "__getstate__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__getstate__"]], "__getstate__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__getstate__"]], "__hash__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__hash__"]], "__hash__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__hash__"]], "__hash__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__hash__"]], "__index__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__index__"]], "__index__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__index__"]], "__index__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__index__"]], "__init__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__init__"]], "__init__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__init__"]], "__init__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__init__"]], "__int__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__int__"]], "__int__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__int__"]], "__int__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__int__"]], "__members__ (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.__members__"]], "__members__ (ipctk.pointedgedistancetype attribute)": [[23, "ipctk.PointEdgeDistanceType.__members__"]], "__members__ (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.__members__"]], "__module__ (ipctk.edgeedgedistancetype attribute)": [[23, "ipctk.EdgeEdgeDistanceType.__module__"]], "__module__ (ipctk.pointedgedistancetype attribute)": [[23, "ipctk.PointEdgeDistanceType.__module__"]], "__module__ (ipctk.pointtriangledistancetype attribute)": [[23, "ipctk.PointTriangleDistanceType.__module__"]], "__ne__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__ne__"]], "__ne__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__ne__"]], "__ne__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__ne__"]], "__repr__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__repr__"]], "__repr__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__repr__"]], "__repr__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__repr__"]], "__setstate__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__setstate__"]], "__setstate__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__setstate__"]], "__setstate__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__setstate__"]], "__str__() (ipctk.edgeedgedistancetype method)": [[23, "ipctk.EdgeEdgeDistanceType.__str__"]], "__str__() (ipctk.pointedgedistancetype method)": [[23, "ipctk.PointEdgeDistanceType.__str__"]], "__str__() (ipctk.pointtriangledistancetype method)": [[23, "ipctk.PointTriangleDistanceType.__str__"]], "edge_edge_cross_squarednorm() (in module ipctk)": [[23, "ipctk.edge_edge_cross_squarednorm"]], "edge_edge_cross_squarednorm_gradient() (in module ipctk)": [[23, "ipctk.edge_edge_cross_squarednorm_gradient"]], "edge_edge_cross_squarednorm_hessian() (in module ipctk)": [[23, "ipctk.edge_edge_cross_squarednorm_hessian"]], "edge_edge_distance() (in module ipctk)": [[23, "ipctk.edge_edge_distance"]], "edge_edge_distance_gradient() (in module ipctk)": [[23, "ipctk.edge_edge_distance_gradient"]], "edge_edge_distance_hessian() (in module ipctk)": [[23, "ipctk.edge_edge_distance_hessian"]], "edge_edge_distance_type() (in module ipctk)": [[23, "ipctk.edge_edge_distance_type"]], "edge_edge_mollifier() (in module ipctk)": [[23, "ipctk.edge_edge_mollifier"]], "edge_edge_mollifier_gradient() (in module ipctk)": [[23, "ipctk.edge_edge_mollifier_gradient"]], "edge_edge_mollifier_hessian() (in module ipctk)": [[23, "ipctk.edge_edge_mollifier_hessian"]], "edge_edge_mollifier_threshold() (in module ipctk)": [[23, "ipctk.edge_edge_mollifier_threshold"]], "line_line_distance() (in module ipctk)": [[23, "ipctk.line_line_distance"]], "line_line_distance_gradient() (in module ipctk)": [[23, "ipctk.line_line_distance_gradient"]], "line_line_distance_hessian() (in module ipctk)": [[23, "ipctk.line_line_distance_hessian"]], "name (ipctk.edgeedgedistancetype property)": [[23, "ipctk.EdgeEdgeDistanceType.name"]], "name (ipctk.pointedgedistancetype property)": [[23, "ipctk.PointEdgeDistanceType.name"]], "name (ipctk.pointtriangledistancetype property)": [[23, "ipctk.PointTriangleDistanceType.name"]], "point_edge_distance() (in module ipctk)": [[23, "ipctk.point_edge_distance"]], "point_edge_distance_gradient() (in module ipctk)": [[23, "ipctk.point_edge_distance_gradient"]], "point_edge_distance_hessian() (in module ipctk)": [[23, "ipctk.point_edge_distance_hessian"]], "point_edge_distance_type() (in module ipctk)": [[23, "ipctk.point_edge_distance_type"]], "point_line_distance() (in module ipctk)": [[23, "ipctk.point_line_distance"]], "point_line_distance_gradient() (in module ipctk)": [[23, "ipctk.point_line_distance_gradient"]], "point_line_distance_hessian() (in module ipctk)": [[23, "ipctk.point_line_distance_hessian"]], "point_plane_distance() (in module ipctk)": [[23, "ipctk.point_plane_distance"]], "point_plane_distance_gradient() (in module ipctk)": [[23, "ipctk.point_plane_distance_gradient"]], "point_plane_distance_hessian() (in module ipctk)": [[23, "ipctk.point_plane_distance_hessian"]], "point_point_distance() (in module ipctk)": [[23, "ipctk.point_point_distance"]], "point_point_distance_gradient() (in module ipctk)": [[23, "ipctk.point_point_distance_gradient"]], "point_point_distance_hessian() (in module ipctk)": [[23, "ipctk.point_point_distance_hessian"]], "point_triangle_distance() (in module ipctk)": [[23, "ipctk.point_triangle_distance"]], "point_triangle_distance_gradient() (in module ipctk)": [[23, "ipctk.point_triangle_distance_gradient"]], "point_triangle_distance_hessian() (in module ipctk)": [[23, "ipctk.point_triangle_distance_hessian"]], "point_triangle_distance_type() (in module ipctk)": [[23, "ipctk.point_triangle_distance_type"]], "value (ipctk.edgeedgedistancetype property)": [[23, "ipctk.EdgeEdgeDistanceType.value"]], "value (ipctk.pointedgedistancetype property)": [[23, "ipctk.PointEdgeDistanceType.value"]], "value (ipctk.pointtriangledistancetype property)": [[23, "ipctk.PointTriangleDistanceType.value"]], "edgeedgefrictionconstraint (class in ipctk)": [[24, "ipctk.EdgeEdgeFrictionConstraint"]], "edgevertexfrictionconstraint (class in ipctk)": [[24, "ipctk.EdgeVertexFrictionConstraint"]], "facevertexfrictionconstraint (class in ipctk)": [[24, "ipctk.FaceVertexFrictionConstraint"]], "frictionconstraint (class in ipctk)": [[24, "ipctk.FrictionConstraint"]], "frictionconstraint.diffwrt (class in ipctk)": [[24, "ipctk.FrictionConstraint.DiffWRT"]], "frictionconstraints (class in ipctk)": [[24, "ipctk.FrictionConstraints"]], "lagged_displacements (ipctk.frictionconstraint attribute)": [[24, "ipctk.FrictionConstraint.LAGGED_DISPLACEMENTS"]], "lagged_displacements (ipctk.frictionconstraint.diffwrt attribute)": [[24, "ipctk.FrictionConstraint.DiffWRT.LAGGED_DISPLACEMENTS"]], "rest_positions (ipctk.frictionconstraint attribute)": [[24, "ipctk.FrictionConstraint.REST_POSITIONS"]], "rest_positions (ipctk.frictionconstraint.diffwrt attribute)": [[24, "ipctk.FrictionConstraint.DiffWRT.REST_POSITIONS"]], "velocities (ipctk.frictionconstraint attribute)": [[24, "ipctk.FrictionConstraint.VELOCITIES"]], "velocities (ipctk.frictionconstraint.diffwrt attribute)": [[24, "ipctk.FrictionConstraint.DiffWRT.VELOCITIES"]], "vertexvertexfrictionconstraint (class in ipctk)": [[24, "ipctk.VertexVertexFrictionConstraint"]], "__annotations__ (ipctk.edgeedgefrictionconstraint attribute)": [[24, "ipctk.EdgeEdgeFrictionConstraint.__annotations__"]], "__annotations__ (ipctk.edgevertexfrictionconstraint attribute)": [[24, "ipctk.EdgeVertexFrictionConstraint.__annotations__"]], "__annotations__ (ipctk.facevertexfrictionconstraint attribute)": [[24, "ipctk.FaceVertexFrictionConstraint.__annotations__"]], "__annotations__ (ipctk.frictionconstraint attribute)": [[24, "ipctk.FrictionConstraint.__annotations__"]], "__annotations__ (ipctk.frictionconstraint.diffwrt attribute)": [[24, "ipctk.FrictionConstraint.DiffWRT.__annotations__"]], "__annotations__ (ipctk.frictionconstraints attribute)": [[24, "ipctk.FrictionConstraints.__annotations__"]], "__annotations__ (ipctk.vertexvertexfrictionconstraint attribute)": [[24, "ipctk.VertexVertexFrictionConstraint.__annotations__"]], "__eq__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__eq__"]], "__getitem__() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.__getitem__"]], "__getstate__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__getstate__"]], "__hash__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__hash__"]], "__index__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__index__"]], "__init__() (ipctk.edgeedgefrictionconstraint method)": [[24, "ipctk.EdgeEdgeFrictionConstraint.__init__"]], "__init__() (ipctk.edgevertexfrictionconstraint method)": [[24, "ipctk.EdgeVertexFrictionConstraint.__init__"]], "__init__() (ipctk.facevertexfrictionconstraint method)": [[24, "ipctk.FaceVertexFrictionConstraint.__init__"]], "__init__() (ipctk.frictionconstraint method)": [[24, "ipctk.FrictionConstraint.__init__"]], "__init__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__init__"]], "__init__() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.__init__"]], "__init__() (ipctk.vertexvertexfrictionconstraint method)": [[24, "ipctk.VertexVertexFrictionConstraint.__init__"]], "__int__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__int__"]], "__len__() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.__len__"]], "__members__ (ipctk.frictionconstraint.diffwrt attribute)": [[24, "ipctk.FrictionConstraint.DiffWRT.__members__"]], "__module__ (ipctk.edgeedgefrictionconstraint attribute)": [[24, "ipctk.EdgeEdgeFrictionConstraint.__module__"]], "__module__ (ipctk.edgevertexfrictionconstraint attribute)": [[24, "ipctk.EdgeVertexFrictionConstraint.__module__"]], "__module__ (ipctk.facevertexfrictionconstraint attribute)": [[24, "ipctk.FaceVertexFrictionConstraint.__module__"]], "__module__ (ipctk.frictionconstraint attribute)": [[24, "ipctk.FrictionConstraint.__module__"]], "__module__ (ipctk.frictionconstraint.diffwrt attribute)": [[24, "ipctk.FrictionConstraint.DiffWRT.__module__"]], "__module__ (ipctk.frictionconstraints attribute)": [[24, "ipctk.FrictionConstraints.__module__"]], "__module__ (ipctk.vertexvertexfrictionconstraint attribute)": [[24, "ipctk.VertexVertexFrictionConstraint.__module__"]], "__ne__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__ne__"]], "__repr__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__repr__"]], "__setstate__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__setstate__"]], "__str__() (ipctk.frictionconstraint.diffwrt method)": [[24, "ipctk.FrictionConstraint.DiffWRT.__str__"]], "build() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.build"]], "clear() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.clear"]], "closest_point (ipctk.frictionconstraint property)": [[24, "ipctk.FrictionConstraint.closest_point"]], "compute_force() (ipctk.frictionconstraint method)": [[24, "ipctk.FrictionConstraint.compute_force"]], "compute_force() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.compute_force"]], "compute_force_jacobian() (ipctk.frictionconstraint method)": [[24, "ipctk.FrictionConstraint.compute_force_jacobian"]], "compute_force_jacobian() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.compute_force_jacobian"]], "compute_normal_force_magnitude() (in module ipctk)": [[24, "ipctk.compute_normal_force_magnitude"]], "compute_normal_force_magnitude_gradient() (in module ipctk)": [[24, "ipctk.compute_normal_force_magnitude_gradient"]], "compute_potential() (ipctk.frictionconstraint method)": [[24, "ipctk.FrictionConstraint.compute_potential"]], "compute_potential() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.compute_potential"]], "compute_potential_gradient() (ipctk.frictionconstraint method)": [[24, "ipctk.FrictionConstraint.compute_potential_gradient"]], "compute_potential_gradient() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.compute_potential_gradient"]], "compute_potential_hessian() (ipctk.frictionconstraint method)": [[24, "ipctk.FrictionConstraint.compute_potential_hessian"]], "compute_potential_hessian() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.compute_potential_hessian"]], "default_blend_mu() (ipctk.frictionconstraints static method)": [[24, "ipctk.FrictionConstraints.default_blend_mu"]], "df1_x_minus_f1_over_x3() (in module ipctk)": [[24, "ipctk.df1_x_minus_f1_over_x3"]], "edge_edge_relative_velocity() (in module ipctk)": [[24, "ipctk.edge_edge_relative_velocity"]], "edge_edge_relative_velocity_matrix() (in module ipctk)": [[24, "ipctk.edge_edge_relative_velocity_matrix"]], "edge_edge_relative_velocity_matrix_jacobian() (in module ipctk)": [[24, "ipctk.edge_edge_relative_velocity_matrix_jacobian"]], "edge_edge_tangent_basis() (in module ipctk)": [[24, "ipctk.edge_edge_tangent_basis"]], "edge_edge_tangent_basis_jacobian() (in module ipctk)": [[24, "ipctk.edge_edge_tangent_basis_jacobian"]], "ee_constraints (ipctk.frictionconstraints property)": [[24, "ipctk.FrictionConstraints.ee_constraints"]], "empty() (ipctk.frictionconstraints method)": [[24, "ipctk.FrictionConstraints.empty"]], "ev_constraints (ipctk.frictionconstraints property)": [[24, "ipctk.FrictionConstraints.ev_constraints"]], "f0_sf() (in module ipctk)": [[24, "ipctk.f0_SF"]], "f1_sf_over_x() (in module ipctk)": [[24, "ipctk.f1_SF_over_x"]], "fv_constraints (ipctk.frictionconstraints property)": [[24, "ipctk.FrictionConstraints.fv_constraints"]], "mu (ipctk.frictionconstraint property)": [[24, "ipctk.FrictionConstraint.mu"]], "name (ipctk.frictionconstraint.diffwrt property)": [[24, "ipctk.FrictionConstraint.DiffWRT.name"]], "normal_force_magnitude (ipctk.frictionconstraint property)": [[24, "ipctk.FrictionConstraint.normal_force_magnitude"]], "point_edge_relative_velocity() (in module ipctk)": [[24, "ipctk.point_edge_relative_velocity"]], "point_edge_relative_velocity_matrix() (in module ipctk)": [[24, "ipctk.point_edge_relative_velocity_matrix"]], "point_edge_relative_velocity_matrix_jacobian() (in module ipctk)": [[24, "ipctk.point_edge_relative_velocity_matrix_jacobian"]], "point_edge_tangent_basis() (in module ipctk)": [[24, "ipctk.point_edge_tangent_basis"]], "point_edge_tangent_basis_jacobian() (in module ipctk)": [[24, "ipctk.point_edge_tangent_basis_jacobian"]], "point_point_relative_velocity() (in module ipctk)": [[24, "ipctk.point_point_relative_velocity"]], "point_point_relative_velocity_matrix() (in module ipctk)": [[24, "ipctk.point_point_relative_velocity_matrix"]], "point_point_relative_velocity_matrix_jacobian() (in module ipctk)": [[24, "ipctk.point_point_relative_velocity_matrix_jacobian"]], "point_point_tangent_basis() (in module ipctk)": [[24, "ipctk.point_point_tangent_basis"]], "point_point_tangent_basis_jacobian() (in module ipctk)": [[24, "ipctk.point_point_tangent_basis_jacobian"]], "point_triangle_relative_velocity() (in module ipctk)": [[24, "ipctk.point_triangle_relative_velocity"]], "point_triangle_relative_velocity_matrix() (in module ipctk)": [[24, "ipctk.point_triangle_relative_velocity_matrix"]], "point_triangle_relative_velocity_matrix_jacobian() (in module ipctk)": [[24, "ipctk.point_triangle_relative_velocity_matrix_jacobian"]], "point_triangle_tangent_basis() (in module ipctk)": [[24, "ipctk.point_triangle_tangent_basis"]], "point_triangle_tangent_basis_jacobian() (in module ipctk)": [[24, "ipctk.point_triangle_tangent_basis_jacobian"]], "tangent_basis (ipctk.frictionconstraint property)": [[24, "ipctk.FrictionConstraint.tangent_basis"]], "value (ipctk.frictionconstraint.diffwrt property)": [[24, "ipctk.FrictionConstraint.DiffWRT.value"]], "vv_constraints (ipctk.frictionconstraints property)": [[24, "ipctk.FrictionConstraints.vv_constraints"]], "weight (ipctk.frictionconstraint property)": [[24, "ipctk.FrictionConstraint.weight"]], "weight_gradient (ipctk.frictionconstraint property)": [[24, "ipctk.FrictionConstraint.weight_gradient"]], "has_intersections() (in module ipctk)": [[25, "ipctk.has_intersections"]], "is_edge_intersecting_triangle() (in module ipctk)": [[25, "ipctk.is_edge_intersecting_triangle"]], "segment_segment_intersect() (in module ipctk)": [[25, "ipctk.segment_segment_intersect"]], "loggerlevel (class in ipctk)": [[26, "ipctk.LoggerLevel"]], "__annotations__ (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.__annotations__"]], "__eq__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__eq__"]], "__getstate__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__getstate__"]], "__hash__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__hash__"]], "__index__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__index__"]], "__init__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__init__"]], "__int__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__int__"]], "__members__ (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.__members__"]], "__module__ (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.__module__"]], "__ne__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__ne__"]], "__repr__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__repr__"]], "__setstate__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__setstate__"]], "__str__() (ipctk.loggerlevel method)": [[26, "ipctk.LoggerLevel.__str__"]], "critical (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.critical"]], "debug (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.debug"]], "error (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.error"]], "get_num_threads() (in module ipctk)": [[26, "ipctk.get_num_threads"]], "info (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.info"]], "name (ipctk.loggerlevel property)": [[26, "ipctk.LoggerLevel.name"]], "off (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.off"]], "project_to_pd() (in module ipctk)": [[26, "ipctk.project_to_pd"]], "project_to_psd() (in module ipctk)": [[26, "ipctk.project_to_psd"]], "set_logger_level() (in module ipctk)": [[26, "ipctk.set_logger_level"]], "set_num_threads() (in module ipctk)": [[26, "ipctk.set_num_threads"]], "trace (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.trace"]], "value (ipctk.loggerlevel property)": [[26, "ipctk.LoggerLevel.value"]], "warn (ipctk.loggerlevel attribute)": [[26, "ipctk.LoggerLevel.warn"]]}, "docurls": ["changelog.html", "code_of_conduct.html", "contributing.html", "cpp.html", "cpp-api/barrier.html", "cpp-api/broad_phase.html", "cpp-api/candidates.html", "cpp-api/ccd.html", "cpp-api/collision_constraints.html", "cpp-api/collision_mesh.html", "cpp-api/distance.html", "cpp-api/friction.html", "cpp-api/intersections.html", "cpp-api/utils.html", "index.html", "license.html", "python.html", "python-api/barrier.html", "python-api/broad_phase.html", "python-api/candidates.html", "python-api/ccd.html", "python-api/collision_constraints.html", "python-api/collision_mesh.html", "python-api/distance.html", "python-api/friction.html", "python-api/intersections.html", "python-api/utils.html", "style_guide.html", "tutorial/convergent.html", "tutorial/getting_started.html", "tutorial/misc.html", "tutorial/nonlinear_ccd.html", "tutorial/references.html", "tutorial/simulation.html"]})